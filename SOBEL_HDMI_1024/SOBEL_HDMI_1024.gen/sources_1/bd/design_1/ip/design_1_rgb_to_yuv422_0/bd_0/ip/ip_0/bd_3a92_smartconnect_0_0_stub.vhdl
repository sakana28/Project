-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2022.1 (lin64) Build 3526262 Mon Apr 18 15:47:01 MDT 2022
-- Date        : Mon Aug 29 12:26:53 2022
-- Host        : benchmarker-HP-ZBook-Fury-15-G7-Mobile-Workstation running 64-bit Ubuntu 20.04.2 LTS
-- Command     : write_vhdl -force -mode synth_stub -rename_top bd_3a92_smartconnect_0_0 -prefix
--               bd_3a92_smartconnect_0_0_ bd_3a92_smartconnect_0_0_stub.vhdl
-- Design      : bd_3a92_smartconnect_0_0
-- Purpose     : Stub declaration of top-level module interface
-- Device      : xc7z020clg484-1
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity bd_3a92_smartconnect_0_0 is
  Port ( 
    aclk : in STD_LOGIC;
    aclk1 : in STD_LOGIC;
    aclk2 : in STD_LOGIC;
    aclk3 : in STD_LOGIC;
    aclk4 : in STD_LOGIC;
    aresetn : in STD_LOGIC;
    S00_AXI_awaddr : in STD_LOGIC_VECTOR ( 18 downto 0 );
    S00_AXI_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_awvalid : in STD_LOGIC;
    S00_AXI_awready : out STD_LOGIC;
    S00_AXI_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S00_AXI_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_wvalid : in STD_LOGIC;
    S00_AXI_wready : out STD_LOGIC;
    S00_AXI_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_bvalid : out STD_LOGIC;
    S00_AXI_bready : in STD_LOGIC;
    S00_AXI_araddr : in STD_LOGIC_VECTOR ( 18 downto 0 );
    S00_AXI_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_arvalid : in STD_LOGIC;
    S00_AXI_arready : out STD_LOGIC;
    S00_AXI_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    S00_AXI_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_rvalid : out STD_LOGIC;
    S00_AXI_rready : in STD_LOGIC;
    M00_AXI_awaddr : out STD_LOGIC_VECTOR ( 6 downto 0 );
    M00_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M00_AXI_awvalid : out STD_LOGIC;
    M00_AXI_awready : in STD_LOGIC;
    M00_AXI_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M00_AXI_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M00_AXI_wvalid : out STD_LOGIC;
    M00_AXI_wready : in STD_LOGIC;
    M00_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M00_AXI_bvalid : in STD_LOGIC;
    M00_AXI_bready : out STD_LOGIC;
    M00_AXI_araddr : out STD_LOGIC_VECTOR ( 6 downto 0 );
    M00_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M00_AXI_arvalid : out STD_LOGIC;
    M00_AXI_arready : in STD_LOGIC;
    M00_AXI_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M00_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M00_AXI_rvalid : in STD_LOGIC;
    M00_AXI_rready : out STD_LOGIC;
    M01_AXI_awaddr : out STD_LOGIC_VECTOR ( 8 downto 0 );
    M01_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M01_AXI_awvalid : out STD_LOGIC;
    M01_AXI_awready : in STD_LOGIC;
    M01_AXI_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M01_AXI_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M01_AXI_wvalid : out STD_LOGIC;
    M01_AXI_wready : in STD_LOGIC;
    M01_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M01_AXI_bvalid : in STD_LOGIC;
    M01_AXI_bready : out STD_LOGIC;
    M01_AXI_araddr : out STD_LOGIC_VECTOR ( 8 downto 0 );
    M01_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M01_AXI_arvalid : out STD_LOGIC;
    M01_AXI_arready : in STD_LOGIC;
    M01_AXI_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M01_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M01_AXI_rvalid : in STD_LOGIC;
    M01_AXI_rready : out STD_LOGIC;
    M02_AXI_awaddr : out STD_LOGIC_VECTOR ( 11 downto 0 );
    M02_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M02_AXI_awvalid : out STD_LOGIC;
    M02_AXI_awready : in STD_LOGIC;
    M02_AXI_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M02_AXI_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M02_AXI_wvalid : out STD_LOGIC;
    M02_AXI_wready : in STD_LOGIC;
    M02_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M02_AXI_bvalid : in STD_LOGIC;
    M02_AXI_bready : out STD_LOGIC;
    M02_AXI_araddr : out STD_LOGIC_VECTOR ( 11 downto 0 );
    M02_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M02_AXI_arvalid : out STD_LOGIC;
    M02_AXI_arready : in STD_LOGIC;
    M02_AXI_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M02_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M02_AXI_rvalid : in STD_LOGIC;
    M02_AXI_rready : out STD_LOGIC;
    M03_AXI_awaddr : out STD_LOGIC_VECTOR ( 15 downto 0 );
    M03_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M03_AXI_awvalid : out STD_LOGIC;
    M03_AXI_awready : in STD_LOGIC;
    M03_AXI_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M03_AXI_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M03_AXI_wvalid : out STD_LOGIC;
    M03_AXI_wready : in STD_LOGIC;
    M03_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M03_AXI_bvalid : in STD_LOGIC;
    M03_AXI_bready : out STD_LOGIC;
    M03_AXI_araddr : out STD_LOGIC_VECTOR ( 15 downto 0 );
    M03_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M03_AXI_arvalid : out STD_LOGIC;
    M03_AXI_arready : in STD_LOGIC;
    M03_AXI_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M03_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M03_AXI_rvalid : in STD_LOGIC;
    M03_AXI_rready : out STD_LOGIC;
    M04_AXI_awaddr : out STD_LOGIC_VECTOR ( 6 downto 0 );
    M04_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M04_AXI_awvalid : out STD_LOGIC;
    M04_AXI_awready : in STD_LOGIC;
    M04_AXI_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M04_AXI_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M04_AXI_wvalid : out STD_LOGIC;
    M04_AXI_wready : in STD_LOGIC;
    M04_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M04_AXI_bvalid : in STD_LOGIC;
    M04_AXI_bready : out STD_LOGIC;
    M04_AXI_araddr : out STD_LOGIC_VECTOR ( 6 downto 0 );
    M04_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M04_AXI_arvalid : out STD_LOGIC;
    M04_AXI_arready : in STD_LOGIC;
    M04_AXI_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M04_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M04_AXI_rvalid : in STD_LOGIC;
    M04_AXI_rready : out STD_LOGIC;
    M05_AXI_awaddr : out STD_LOGIC_VECTOR ( 10 downto 0 );
    M05_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M05_AXI_awvalid : out STD_LOGIC;
    M05_AXI_awready : in STD_LOGIC;
    M05_AXI_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M05_AXI_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M05_AXI_wvalid : out STD_LOGIC;
    M05_AXI_wready : in STD_LOGIC;
    M05_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M05_AXI_bvalid : in STD_LOGIC;
    M05_AXI_bready : out STD_LOGIC;
    M05_AXI_araddr : out STD_LOGIC_VECTOR ( 10 downto 0 );
    M05_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M05_AXI_arvalid : out STD_LOGIC;
    M05_AXI_arready : in STD_LOGIC;
    M05_AXI_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M05_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M05_AXI_rvalid : in STD_LOGIC;
    M05_AXI_rready : out STD_LOGIC;
    M06_AXI_awid : out STD_LOGIC;
    M06_AXI_awaddr : out STD_LOGIC;
    M06_AXI_awlen : out STD_LOGIC;
    M06_AXI_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M06_AXI_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M06_AXI_awlock : out STD_LOGIC;
    M06_AXI_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M06_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M06_AXI_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M06_AXI_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M06_AXI_awuser : out STD_LOGIC;
    M06_AXI_awvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M06_AXI_awready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M06_AXI_wid : out STD_LOGIC;
    M06_AXI_wdata : out STD_LOGIC;
    M06_AXI_wstrb : out STD_LOGIC;
    M06_AXI_wlast : out STD_LOGIC_VECTOR ( 0 to 0 );
    M06_AXI_wuser : out STD_LOGIC;
    M06_AXI_wvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M06_AXI_wready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M06_AXI_bid : in STD_LOGIC;
    M06_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M06_AXI_buser : in STD_LOGIC;
    M06_AXI_bvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M06_AXI_bready : out STD_LOGIC_VECTOR ( 0 to 0 );
    M06_AXI_arid : out STD_LOGIC;
    M06_AXI_araddr : out STD_LOGIC;
    M06_AXI_arlen : out STD_LOGIC;
    M06_AXI_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M06_AXI_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M06_AXI_arlock : out STD_LOGIC;
    M06_AXI_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M06_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M06_AXI_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M06_AXI_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M06_AXI_aruser : out STD_LOGIC;
    M06_AXI_arvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M06_AXI_arready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M06_AXI_rid : in STD_LOGIC;
    M06_AXI_rdata : in STD_LOGIC;
    M06_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M06_AXI_rlast : in STD_LOGIC_VECTOR ( 0 to 0 );
    M06_AXI_ruser : in STD_LOGIC;
    M06_AXI_rvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M06_AXI_rready : out STD_LOGIC_VECTOR ( 0 to 0 );
    M07_AXI_awid : out STD_LOGIC;
    M07_AXI_awaddr : out STD_LOGIC;
    M07_AXI_awlen : out STD_LOGIC;
    M07_AXI_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M07_AXI_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M07_AXI_awlock : out STD_LOGIC;
    M07_AXI_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M07_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M07_AXI_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M07_AXI_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M07_AXI_awuser : out STD_LOGIC;
    M07_AXI_awvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M07_AXI_awready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M07_AXI_wid : out STD_LOGIC;
    M07_AXI_wdata : out STD_LOGIC;
    M07_AXI_wstrb : out STD_LOGIC;
    M07_AXI_wlast : out STD_LOGIC_VECTOR ( 0 to 0 );
    M07_AXI_wuser : out STD_LOGIC;
    M07_AXI_wvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M07_AXI_wready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M07_AXI_bid : in STD_LOGIC;
    M07_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M07_AXI_buser : in STD_LOGIC;
    M07_AXI_bvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M07_AXI_bready : out STD_LOGIC_VECTOR ( 0 to 0 );
    M07_AXI_arid : out STD_LOGIC;
    M07_AXI_araddr : out STD_LOGIC;
    M07_AXI_arlen : out STD_LOGIC;
    M07_AXI_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M07_AXI_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M07_AXI_arlock : out STD_LOGIC;
    M07_AXI_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M07_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M07_AXI_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M07_AXI_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M07_AXI_aruser : out STD_LOGIC;
    M07_AXI_arvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M07_AXI_arready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M07_AXI_rid : in STD_LOGIC;
    M07_AXI_rdata : in STD_LOGIC;
    M07_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M07_AXI_rlast : in STD_LOGIC_VECTOR ( 0 to 0 );
    M07_AXI_ruser : in STD_LOGIC;
    M07_AXI_rvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M07_AXI_rready : out STD_LOGIC_VECTOR ( 0 to 0 );
    M08_AXI_awaddr : out STD_LOGIC_VECTOR ( 8 downto 0 );
    M08_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M08_AXI_awvalid : out STD_LOGIC;
    M08_AXI_awready : in STD_LOGIC;
    M08_AXI_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M08_AXI_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M08_AXI_wvalid : out STD_LOGIC;
    M08_AXI_wready : in STD_LOGIC;
    M08_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M08_AXI_bvalid : in STD_LOGIC;
    M08_AXI_bready : out STD_LOGIC;
    M08_AXI_araddr : out STD_LOGIC_VECTOR ( 8 downto 0 );
    M08_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M08_AXI_arvalid : out STD_LOGIC;
    M08_AXI_arready : in STD_LOGIC;
    M08_AXI_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M08_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M08_AXI_rvalid : in STD_LOGIC;
    M08_AXI_rready : out STD_LOGIC;
    M09_AXI_awid : out STD_LOGIC;
    M09_AXI_awaddr : out STD_LOGIC;
    M09_AXI_awlen : out STD_LOGIC;
    M09_AXI_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M09_AXI_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M09_AXI_awlock : out STD_LOGIC;
    M09_AXI_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M09_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M09_AXI_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M09_AXI_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M09_AXI_awuser : out STD_LOGIC;
    M09_AXI_awvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M09_AXI_awready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M09_AXI_wid : out STD_LOGIC;
    M09_AXI_wdata : out STD_LOGIC;
    M09_AXI_wstrb : out STD_LOGIC;
    M09_AXI_wlast : out STD_LOGIC_VECTOR ( 0 to 0 );
    M09_AXI_wuser : out STD_LOGIC;
    M09_AXI_wvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M09_AXI_wready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M09_AXI_bid : in STD_LOGIC;
    M09_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M09_AXI_buser : in STD_LOGIC;
    M09_AXI_bvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M09_AXI_bready : out STD_LOGIC_VECTOR ( 0 to 0 );
    M09_AXI_arid : out STD_LOGIC;
    M09_AXI_araddr : out STD_LOGIC;
    M09_AXI_arlen : out STD_LOGIC;
    M09_AXI_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M09_AXI_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M09_AXI_arlock : out STD_LOGIC;
    M09_AXI_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M09_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M09_AXI_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M09_AXI_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M09_AXI_aruser : out STD_LOGIC;
    M09_AXI_arvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M09_AXI_arready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M09_AXI_rid : in STD_LOGIC;
    M09_AXI_rdata : in STD_LOGIC;
    M09_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M09_AXI_rlast : in STD_LOGIC_VECTOR ( 0 to 0 );
    M09_AXI_ruser : in STD_LOGIC;
    M09_AXI_rvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M09_AXI_rready : out STD_LOGIC_VECTOR ( 0 to 0 );
    M10_AXI_awid : out STD_LOGIC;
    M10_AXI_awaddr : out STD_LOGIC;
    M10_AXI_awlen : out STD_LOGIC;
    M10_AXI_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M10_AXI_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M10_AXI_awlock : out STD_LOGIC;
    M10_AXI_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M10_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M10_AXI_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M10_AXI_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M10_AXI_awuser : out STD_LOGIC;
    M10_AXI_awvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M10_AXI_awready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M10_AXI_wid : out STD_LOGIC;
    M10_AXI_wdata : out STD_LOGIC;
    M10_AXI_wstrb : out STD_LOGIC;
    M10_AXI_wlast : out STD_LOGIC_VECTOR ( 0 to 0 );
    M10_AXI_wuser : out STD_LOGIC;
    M10_AXI_wvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M10_AXI_wready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M10_AXI_bid : in STD_LOGIC;
    M10_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M10_AXI_buser : in STD_LOGIC;
    M10_AXI_bvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M10_AXI_bready : out STD_LOGIC_VECTOR ( 0 to 0 );
    M10_AXI_arid : out STD_LOGIC;
    M10_AXI_araddr : out STD_LOGIC;
    M10_AXI_arlen : out STD_LOGIC;
    M10_AXI_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M10_AXI_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M10_AXI_arlock : out STD_LOGIC;
    M10_AXI_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M10_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M10_AXI_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M10_AXI_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M10_AXI_aruser : out STD_LOGIC;
    M10_AXI_arvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M10_AXI_arready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M10_AXI_rid : in STD_LOGIC;
    M10_AXI_rdata : in STD_LOGIC;
    M10_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M10_AXI_rlast : in STD_LOGIC_VECTOR ( 0 to 0 );
    M10_AXI_ruser : in STD_LOGIC;
    M10_AXI_rvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M10_AXI_rready : out STD_LOGIC_VECTOR ( 0 to 0 );
    M11_AXI_awid : out STD_LOGIC;
    M11_AXI_awaddr : out STD_LOGIC;
    M11_AXI_awlen : out STD_LOGIC;
    M11_AXI_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M11_AXI_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M11_AXI_awlock : out STD_LOGIC;
    M11_AXI_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M11_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M11_AXI_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M11_AXI_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M11_AXI_awuser : out STD_LOGIC;
    M11_AXI_awvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M11_AXI_awready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M11_AXI_wid : out STD_LOGIC;
    M11_AXI_wdata : out STD_LOGIC;
    M11_AXI_wstrb : out STD_LOGIC;
    M11_AXI_wlast : out STD_LOGIC_VECTOR ( 0 to 0 );
    M11_AXI_wuser : out STD_LOGIC;
    M11_AXI_wvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M11_AXI_wready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M11_AXI_bid : in STD_LOGIC;
    M11_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M11_AXI_buser : in STD_LOGIC;
    M11_AXI_bvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M11_AXI_bready : out STD_LOGIC_VECTOR ( 0 to 0 );
    M11_AXI_arid : out STD_LOGIC;
    M11_AXI_araddr : out STD_LOGIC;
    M11_AXI_arlen : out STD_LOGIC;
    M11_AXI_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M11_AXI_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M11_AXI_arlock : out STD_LOGIC;
    M11_AXI_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M11_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M11_AXI_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M11_AXI_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M11_AXI_aruser : out STD_LOGIC;
    M11_AXI_arvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M11_AXI_arready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M11_AXI_rid : in STD_LOGIC;
    M11_AXI_rdata : in STD_LOGIC;
    M11_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M11_AXI_rlast : in STD_LOGIC_VECTOR ( 0 to 0 );
    M11_AXI_ruser : in STD_LOGIC;
    M11_AXI_rvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M11_AXI_rready : out STD_LOGIC_VECTOR ( 0 to 0 )
  );

end bd_3a92_smartconnect_0_0;

architecture stub of bd_3a92_smartconnect_0_0 is
attribute syn_black_box : boolean;
attribute black_box_pad_pin : string;
attribute syn_black_box of stub : architecture is true;
attribute black_box_pad_pin of stub : architecture is "aclk,aclk1,aclk2,aclk3,aclk4,aresetn,S00_AXI_awaddr[18:0],S00_AXI_awprot[2:0],S00_AXI_awvalid,S00_AXI_awready,S00_AXI_wdata[31:0],S00_AXI_wstrb[3:0],S00_AXI_wvalid,S00_AXI_wready,S00_AXI_bresp[1:0],S00_AXI_bvalid,S00_AXI_bready,S00_AXI_araddr[18:0],S00_AXI_arprot[2:0],S00_AXI_arvalid,S00_AXI_arready,S00_AXI_rdata[31:0],S00_AXI_rresp[1:0],S00_AXI_rvalid,S00_AXI_rready,M00_AXI_awaddr[6:0],M00_AXI_awprot[2:0],M00_AXI_awvalid,M00_AXI_awready,M00_AXI_wdata[31:0],M00_AXI_wstrb[3:0],M00_AXI_wvalid,M00_AXI_wready,M00_AXI_bresp[1:0],M00_AXI_bvalid,M00_AXI_bready,M00_AXI_araddr[6:0],M00_AXI_arprot[2:0],M00_AXI_arvalid,M00_AXI_arready,M00_AXI_rdata[31:0],M00_AXI_rresp[1:0],M00_AXI_rvalid,M00_AXI_rready,M01_AXI_awaddr[8:0],M01_AXI_awprot[2:0],M01_AXI_awvalid,M01_AXI_awready,M01_AXI_wdata[31:0],M01_AXI_wstrb[3:0],M01_AXI_wvalid,M01_AXI_wready,M01_AXI_bresp[1:0],M01_AXI_bvalid,M01_AXI_bready,M01_AXI_araddr[8:0],M01_AXI_arprot[2:0],M01_AXI_arvalid,M01_AXI_arready,M01_AXI_rdata[31:0],M01_AXI_rresp[1:0],M01_AXI_rvalid,M01_AXI_rready,M02_AXI_awaddr[11:0],M02_AXI_awprot[2:0],M02_AXI_awvalid,M02_AXI_awready,M02_AXI_wdata[31:0],M02_AXI_wstrb[3:0],M02_AXI_wvalid,M02_AXI_wready,M02_AXI_bresp[1:0],M02_AXI_bvalid,M02_AXI_bready,M02_AXI_araddr[11:0],M02_AXI_arprot[2:0],M02_AXI_arvalid,M02_AXI_arready,M02_AXI_rdata[31:0],M02_AXI_rresp[1:0],M02_AXI_rvalid,M02_AXI_rready,M03_AXI_awaddr[15:0],M03_AXI_awprot[2:0],M03_AXI_awvalid,M03_AXI_awready,M03_AXI_wdata[31:0],M03_AXI_wstrb[3:0],M03_AXI_wvalid,M03_AXI_wready,M03_AXI_bresp[1:0],M03_AXI_bvalid,M03_AXI_bready,M03_AXI_araddr[15:0],M03_AXI_arprot[2:0],M03_AXI_arvalid,M03_AXI_arready,M03_AXI_rdata[31:0],M03_AXI_rresp[1:0],M03_AXI_rvalid,M03_AXI_rready,M04_AXI_awaddr[6:0],M04_AXI_awprot[2:0],M04_AXI_awvalid,M04_AXI_awready,M04_AXI_wdata[31:0],M04_AXI_wstrb[3:0],M04_AXI_wvalid,M04_AXI_wready,M04_AXI_bresp[1:0],M04_AXI_bvalid,M04_AXI_bready,M04_AXI_araddr[6:0],M04_AXI_arprot[2:0],M04_AXI_arvalid,M04_AXI_arready,M04_AXI_rdata[31:0],M04_AXI_rresp[1:0],M04_AXI_rvalid,M04_AXI_rready,M05_AXI_awaddr[10:0],M05_AXI_awprot[2:0],M05_AXI_awvalid,M05_AXI_awready,M05_AXI_wdata[31:0],M05_AXI_wstrb[3:0],M05_AXI_wvalid,M05_AXI_wready,M05_AXI_bresp[1:0],M05_AXI_bvalid,M05_AXI_bready,M05_AXI_araddr[10:0],M05_AXI_arprot[2:0],M05_AXI_arvalid,M05_AXI_arready,M05_AXI_rdata[31:0],M05_AXI_rresp[1:0],M05_AXI_rvalid,M05_AXI_rready,M06_AXI_awid,M06_AXI_awaddr,M06_AXI_awlen,M06_AXI_awsize[2:0],M06_AXI_awburst[1:0],M06_AXI_awlock,M06_AXI_awcache[3:0],M06_AXI_awprot[2:0],M06_AXI_awregion[3:0],M06_AXI_awqos[3:0],M06_AXI_awuser,M06_AXI_awvalid[0:0],M06_AXI_awready[0:0],M06_AXI_wid,M06_AXI_wdata,M06_AXI_wstrb,M06_AXI_wlast[0:0],M06_AXI_wuser,M06_AXI_wvalid[0:0],M06_AXI_wready[0:0],M06_AXI_bid,M06_AXI_bresp[1:0],M06_AXI_buser,M06_AXI_bvalid[0:0],M06_AXI_bready[0:0],M06_AXI_arid,M06_AXI_araddr,M06_AXI_arlen,M06_AXI_arsize[2:0],M06_AXI_arburst[1:0],M06_AXI_arlock,M06_AXI_arcache[3:0],M06_AXI_arprot[2:0],M06_AXI_arregion[3:0],M06_AXI_arqos[3:0],M06_AXI_aruser,M06_AXI_arvalid[0:0],M06_AXI_arready[0:0],M06_AXI_rid,M06_AXI_rdata,M06_AXI_rresp[1:0],M06_AXI_rlast[0:0],M06_AXI_ruser,M06_AXI_rvalid[0:0],M06_AXI_rready[0:0],M07_AXI_awid,M07_AXI_awaddr,M07_AXI_awlen,M07_AXI_awsize[2:0],M07_AXI_awburst[1:0],M07_AXI_awlock,M07_AXI_awcache[3:0],M07_AXI_awprot[2:0],M07_AXI_awregion[3:0],M07_AXI_awqos[3:0],M07_AXI_awuser,M07_AXI_awvalid[0:0],M07_AXI_awready[0:0],M07_AXI_wid,M07_AXI_wdata,M07_AXI_wstrb,M07_AXI_wlast[0:0],M07_AXI_wuser,M07_AXI_wvalid[0:0],M07_AXI_wready[0:0],M07_AXI_bid,M07_AXI_bresp[1:0],M07_AXI_buser,M07_AXI_bvalid[0:0],M07_AXI_bready[0:0],M07_AXI_arid,M07_AXI_araddr,M07_AXI_arlen,M07_AXI_arsize[2:0],M07_AXI_arburst[1:0],M07_AXI_arlock,M07_AXI_arcache[3:0],M07_AXI_arprot[2:0],M07_AXI_arregion[3:0],M07_AXI_arqos[3:0],M07_AXI_aruser,M07_AXI_arvalid[0:0],M07_AXI_arready[0:0],M07_AXI_rid,M07_AXI_rdata,M07_AXI_rresp[1:0],M07_AXI_rlast[0:0],M07_AXI_ruser,M07_AXI_rvalid[0:0],M07_AXI_rready[0:0],M08_AXI_awaddr[8:0],M08_AXI_awprot[2:0],M08_AXI_awvalid,M08_AXI_awready,M08_AXI_wdata[31:0],M08_AXI_wstrb[3:0],M08_AXI_wvalid,M08_AXI_wready,M08_AXI_bresp[1:0],M08_AXI_bvalid,M08_AXI_bready,M08_AXI_araddr[8:0],M08_AXI_arprot[2:0],M08_AXI_arvalid,M08_AXI_arready,M08_AXI_rdata[31:0],M08_AXI_rresp[1:0],M08_AXI_rvalid,M08_AXI_rready,M09_AXI_awid,M09_AXI_awaddr,M09_AXI_awlen,M09_AXI_awsize[2:0],M09_AXI_awburst[1:0],M09_AXI_awlock,M09_AXI_awcache[3:0],M09_AXI_awprot[2:0],M09_AXI_awregion[3:0],M09_AXI_awqos[3:0],M09_AXI_awuser,M09_AXI_awvalid[0:0],M09_AXI_awready[0:0],M09_AXI_wid,M09_AXI_wdata,M09_AXI_wstrb,M09_AXI_wlast[0:0],M09_AXI_wuser,M09_AXI_wvalid[0:0],M09_AXI_wready[0:0],M09_AXI_bid,M09_AXI_bresp[1:0],M09_AXI_buser,M09_AXI_bvalid[0:0],M09_AXI_bready[0:0],M09_AXI_arid,M09_AXI_araddr,M09_AXI_arlen,M09_AXI_arsize[2:0],M09_AXI_arburst[1:0],M09_AXI_arlock,M09_AXI_arcache[3:0],M09_AXI_arprot[2:0],M09_AXI_arregion[3:0],M09_AXI_arqos[3:0],M09_AXI_aruser,M09_AXI_arvalid[0:0],M09_AXI_arready[0:0],M09_AXI_rid,M09_AXI_rdata,M09_AXI_rresp[1:0],M09_AXI_rlast[0:0],M09_AXI_ruser,M09_AXI_rvalid[0:0],M09_AXI_rready[0:0],M10_AXI_awid,M10_AXI_awaddr,M10_AXI_awlen,M10_AXI_awsize[2:0],M10_AXI_awburst[1:0],M10_AXI_awlock,M10_AXI_awcache[3:0],M10_AXI_awprot[2:0],M10_AXI_awregion[3:0],M10_AXI_awqos[3:0],M10_AXI_awuser,M10_AXI_awvalid[0:0],M10_AXI_awready[0:0],M10_AXI_wid,M10_AXI_wdata,M10_AXI_wstrb,M10_AXI_wlast[0:0],M10_AXI_wuser,M10_AXI_wvalid[0:0],M10_AXI_wready[0:0],M10_AXI_bid,M10_AXI_bresp[1:0],M10_AXI_buser,M10_AXI_bvalid[0:0],M10_AXI_bready[0:0],M10_AXI_arid,M10_AXI_araddr,M10_AXI_arlen,M10_AXI_arsize[2:0],M10_AXI_arburst[1:0],M10_AXI_arlock,M10_AXI_arcache[3:0],M10_AXI_arprot[2:0],M10_AXI_arregion[3:0],M10_AXI_arqos[3:0],M10_AXI_aruser,M10_AXI_arvalid[0:0],M10_AXI_arready[0:0],M10_AXI_rid,M10_AXI_rdata,M10_AXI_rresp[1:0],M10_AXI_rlast[0:0],M10_AXI_ruser,M10_AXI_rvalid[0:0],M10_AXI_rready[0:0],M11_AXI_awid,M11_AXI_awaddr,M11_AXI_awlen,M11_AXI_awsize[2:0],M11_AXI_awburst[1:0],M11_AXI_awlock,M11_AXI_awcache[3:0],M11_AXI_awprot[2:0],M11_AXI_awregion[3:0],M11_AXI_awqos[3:0],M11_AXI_awuser,M11_AXI_awvalid[0:0],M11_AXI_awready[0:0],M11_AXI_wid,M11_AXI_wdata,M11_AXI_wstrb,M11_AXI_wlast[0:0],M11_AXI_wuser,M11_AXI_wvalid[0:0],M11_AXI_wready[0:0],M11_AXI_bid,M11_AXI_bresp[1:0],M11_AXI_buser,M11_AXI_bvalid[0:0],M11_AXI_bready[0:0],M11_AXI_arid,M11_AXI_araddr,M11_AXI_arlen,M11_AXI_arsize[2:0],M11_AXI_arburst[1:0],M11_AXI_arlock,M11_AXI_arcache[3:0],M11_AXI_arprot[2:0],M11_AXI_arregion[3:0],M11_AXI_arqos[3:0],M11_AXI_aruser,M11_AXI_arvalid[0:0],M11_AXI_arready[0:0],M11_AXI_rid,M11_AXI_rdata,M11_AXI_rresp[1:0],M11_AXI_rlast[0:0],M11_AXI_ruser,M11_AXI_rvalid[0:0],M11_AXI_rready[0:0]";
attribute X_CORE_INFO : string;
attribute X_CORE_INFO of stub : architecture is "bd_ddf0,Vivado 2022.1";
begin
end;
