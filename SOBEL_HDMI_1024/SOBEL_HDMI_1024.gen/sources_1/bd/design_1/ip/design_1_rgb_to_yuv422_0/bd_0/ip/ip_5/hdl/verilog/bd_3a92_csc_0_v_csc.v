// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bd_3a92_csc_0_v_csc,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=5.625000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.132000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=8523,HLS_SYN_LUT=8579,HLS_VERSION=2022_1}" *)

module bd_3a92_csc_0_v_csc (
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        s_axis_video_TDATA,
        s_axis_video_TKEEP,
        s_axis_video_TSTRB,
        s_axis_video_TUSER,
        s_axis_video_TLAST,
        s_axis_video_TID,
        s_axis_video_TDEST,
        m_axis_video_TDATA,
        m_axis_video_TKEEP,
        m_axis_video_TSTRB,
        m_axis_video_TUSER,
        m_axis_video_TLAST,
        m_axis_video_TID,
        m_axis_video_TDEST,
        s_axis_video_TVALID,
        s_axis_video_TREADY,
        m_axis_video_TVALID,
        m_axis_video_TREADY
);

parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 9;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [23:0] s_axis_video_TDATA;
input  [2:0] s_axis_video_TKEEP;
input  [2:0] s_axis_video_TSTRB;
input  [0:0] s_axis_video_TUSER;
input  [0:0] s_axis_video_TLAST;
input  [0:0] s_axis_video_TID;
input  [0:0] s_axis_video_TDEST;
output  [23:0] m_axis_video_TDATA;
output  [2:0] m_axis_video_TKEEP;
output  [2:0] m_axis_video_TSTRB;
output  [0:0] m_axis_video_TUSER;
output  [0:0] m_axis_video_TLAST;
output  [0:0] m_axis_video_TID;
output  [0:0] m_axis_video_TDEST;
input   s_axis_video_TVALID;
output   s_axis_video_TREADY;
output   m_axis_video_TVALID;
input   m_axis_video_TREADY;

 reg    ap_rst_n_inv;
wire   [7:0] InVideoFormat;
wire   [7:0] OutVideoFormat;
wire   [15:0] width;
wire   [15:0] height;
wire   [15:0] ColStart;
wire   [15:0] ColEnd;
wire   [15:0] RowStart;
wire   [15:0] RowEnd;
wire   [15:0] K11;
wire   [15:0] K12;
wire   [15:0] K13;
wire   [15:0] K21;
wire   [15:0] K22;
wire   [15:0] K23;
wire   [15:0] K31;
wire   [15:0] K32;
wire   [15:0] K33;
wire   [9:0] ROffset;
wire   [9:0] GOffset;
wire   [9:0] BOffset;
wire   [7:0] ClampMin;
wire   [7:0] ClipMax;
wire   [15:0] K11_2;
wire   [15:0] K12_2;
wire   [15:0] K13_2;
wire   [15:0] K21_2;
wire   [15:0] K22_2;
wire   [15:0] K23_2;
wire   [15:0] K31_2;
wire   [15:0] K32_2;
wire   [15:0] K33_2;
wire   [9:0] ROffset_2;
wire   [9:0] GOffset_2;
wire   [9:0] BOffset_2;
wire   [7:0] ClampMin_2;
wire   [7:0] ClipMax_2;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    Block_entry3_proc_U0_ap_start;
wire    Block_entry3_proc_U0_ap_done;
wire    Block_entry3_proc_U0_ap_continue;
wire    Block_entry3_proc_U0_ap_idle;
wire    Block_entry3_proc_U0_ap_ready;
wire   [7:0] Block_entry3_proc_U0_ap_return_0;
wire   [7:0] Block_entry3_proc_U0_ap_return_1;
wire   [15:0] Block_entry3_proc_U0_ap_return_2;
wire   [15:0] Block_entry3_proc_U0_ap_return_3;
wire   [15:0] Block_entry3_proc_U0_ap_return_4;
wire   [15:0] Block_entry3_proc_U0_ap_return_5;
wire   [15:0] Block_entry3_proc_U0_ap_return_6;
wire   [15:0] Block_entry3_proc_U0_ap_return_7;
wire   [15:0] Block_entry3_proc_U0_ap_return_8;
wire   [15:0] Block_entry3_proc_U0_ap_return_9;
wire   [15:0] Block_entry3_proc_U0_ap_return_10;
wire   [15:0] Block_entry3_proc_U0_ap_return_11;
wire   [15:0] Block_entry3_proc_U0_ap_return_12;
wire   [15:0] Block_entry3_proc_U0_ap_return_13;
wire   [15:0] Block_entry3_proc_U0_ap_return_14;
wire   [9:0] Block_entry3_proc_U0_ap_return_15;
wire   [9:0] Block_entry3_proc_U0_ap_return_16;
wire   [9:0] Block_entry3_proc_U0_ap_return_17;
wire   [7:0] Block_entry3_proc_U0_ap_return_18;
wire   [7:0] Block_entry3_proc_U0_ap_return_19;
wire   [15:0] Block_entry3_proc_U0_ap_return_20;
wire   [15:0] Block_entry3_proc_U0_ap_return_21;
wire   [15:0] Block_entry3_proc_U0_ap_return_22;
wire   [15:0] Block_entry3_proc_U0_ap_return_23;
wire   [15:0] Block_entry3_proc_U0_ap_return_24;
wire   [15:0] Block_entry3_proc_U0_ap_return_25;
wire   [15:0] Block_entry3_proc_U0_ap_return_26;
wire   [15:0] Block_entry3_proc_U0_ap_return_27;
wire   [15:0] Block_entry3_proc_U0_ap_return_28;
wire   [9:0] Block_entry3_proc_U0_ap_return_29;
wire   [9:0] Block_entry3_proc_U0_ap_return_30;
wire   [9:0] Block_entry3_proc_U0_ap_return_31;
wire   [7:0] Block_entry3_proc_U0_ap_return_32;
wire   [7:0] Block_entry3_proc_U0_ap_return_33;
wire   [0:0] Block_entry3_proc_U0_ap_return_34;
wire   [0:0] Block_entry3_proc_U0_ap_return_35;
wire   [10:0] Block_entry3_proc_U0_ap_return_36;
wire   [10:0] Block_entry3_proc_U0_ap_return_37;
wire    ap_channel_done_HwReg_height_c22_channel;
wire    HwReg_height_c22_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_height_c22_channel;
wire    ap_sync_channel_write_HwReg_height_c22_channel;
wire    ap_channel_done_HwReg_width_c18_channel;
wire    HwReg_width_c18_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_width_c18_channel;
wire    ap_sync_channel_write_HwReg_width_c18_channel;
wire    ap_channel_done_bPassThru_422_or_420_Out_loc_channel;
wire    bPassThru_422_or_420_Out_loc_channel_full_n;
reg    ap_sync_reg_channel_write_bPassThru_422_or_420_Out_loc_channel;
wire    ap_sync_channel_write_bPassThru_422_or_420_Out_loc_channel;
wire    ap_channel_done_bPassThru_422_or_420_In_loc_channel;
wire    bPassThru_422_or_420_In_loc_channel_full_n;
reg    ap_sync_reg_channel_write_bPassThru_422_or_420_In_loc_channel;
wire    ap_sync_channel_write_bPassThru_422_or_420_In_loc_channel;
wire    ap_channel_done_HwReg_ClipMax_2_V_channel;
wire    HwReg_ClipMax_2_V_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_ClipMax_2_V_channel;
wire    ap_sync_channel_write_HwReg_ClipMax_2_V_channel;
wire    ap_channel_done_HwReg_ClampMin_2_V_channel;
wire    HwReg_ClampMin_2_V_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_ClampMin_2_V_channel;
wire    ap_sync_channel_write_HwReg_ClampMin_2_V_channel;
wire    ap_channel_done_HwReg_BOffset_2_V_channel;
wire    HwReg_BOffset_2_V_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_BOffset_2_V_channel;
wire    ap_sync_channel_write_HwReg_BOffset_2_V_channel;
wire    ap_channel_done_HwReg_GOffset_2_V_channel;
wire    HwReg_GOffset_2_V_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_GOffset_2_V_channel;
wire    ap_sync_channel_write_HwReg_GOffset_2_V_channel;
wire    ap_channel_done_HwReg_ROffset_2_V_channel;
wire    HwReg_ROffset_2_V_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_ROffset_2_V_channel;
wire    ap_sync_channel_write_HwReg_ROffset_2_V_channel;
wire    ap_channel_done_HwReg_K33_2_channel;
wire    HwReg_K33_2_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K33_2_channel;
wire    ap_sync_channel_write_HwReg_K33_2_channel;
wire    ap_channel_done_HwReg_K32_2_channel;
wire    HwReg_K32_2_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K32_2_channel;
wire    ap_sync_channel_write_HwReg_K32_2_channel;
wire    ap_channel_done_HwReg_K31_2_channel;
wire    HwReg_K31_2_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K31_2_channel;
wire    ap_sync_channel_write_HwReg_K31_2_channel;
wire    ap_channel_done_HwReg_K23_2_channel;
wire    HwReg_K23_2_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K23_2_channel;
wire    ap_sync_channel_write_HwReg_K23_2_channel;
wire    ap_channel_done_HwReg_K22_2_channel;
wire    HwReg_K22_2_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K22_2_channel;
wire    ap_sync_channel_write_HwReg_K22_2_channel;
wire    ap_channel_done_HwReg_K21_2_channel;
wire    HwReg_K21_2_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K21_2_channel;
wire    ap_sync_channel_write_HwReg_K21_2_channel;
wire    ap_channel_done_HwReg_K13_2_channel;
wire    HwReg_K13_2_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K13_2_channel;
wire    ap_sync_channel_write_HwReg_K13_2_channel;
wire    ap_channel_done_HwReg_K12_2_channel;
wire    HwReg_K12_2_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K12_2_channel;
wire    ap_sync_channel_write_HwReg_K12_2_channel;
wire    ap_channel_done_HwReg_K11_2_channel;
wire    HwReg_K11_2_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K11_2_channel;
wire    ap_sync_channel_write_HwReg_K11_2_channel;
wire    ap_channel_done_HwReg_ClipMax_V_channel;
wire    HwReg_ClipMax_V_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_ClipMax_V_channel;
wire    ap_sync_channel_write_HwReg_ClipMax_V_channel;
wire    ap_channel_done_HwReg_ClampMin_V_channel;
wire    HwReg_ClampMin_V_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_ClampMin_V_channel;
wire    ap_sync_channel_write_HwReg_ClampMin_V_channel;
wire    ap_channel_done_HwReg_BOffset_V_channel;
wire    HwReg_BOffset_V_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_BOffset_V_channel;
wire    ap_sync_channel_write_HwReg_BOffset_V_channel;
wire    ap_channel_done_HwReg_GOffset_V_channel;
wire    HwReg_GOffset_V_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_GOffset_V_channel;
wire    ap_sync_channel_write_HwReg_GOffset_V_channel;
wire    ap_channel_done_HwReg_ROffset_V_channel;
wire    HwReg_ROffset_V_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_ROffset_V_channel;
wire    ap_sync_channel_write_HwReg_ROffset_V_channel;
wire    ap_channel_done_HwReg_K33_channel;
wire    HwReg_K33_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K33_channel;
wire    ap_sync_channel_write_HwReg_K33_channel;
wire    ap_channel_done_HwReg_K32_channel;
wire    HwReg_K32_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K32_channel;
wire    ap_sync_channel_write_HwReg_K32_channel;
wire    ap_channel_done_HwReg_K31_channel;
wire    HwReg_K31_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K31_channel;
wire    ap_sync_channel_write_HwReg_K31_channel;
wire    ap_channel_done_HwReg_K23_channel;
wire    HwReg_K23_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K23_channel;
wire    ap_sync_channel_write_HwReg_K23_channel;
wire    ap_channel_done_HwReg_K22_channel;
wire    HwReg_K22_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K22_channel;
wire    ap_sync_channel_write_HwReg_K22_channel;
wire    ap_channel_done_HwReg_K21_channel;
wire    HwReg_K21_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K21_channel;
wire    ap_sync_channel_write_HwReg_K21_channel;
wire    ap_channel_done_HwReg_K13_channel;
wire    HwReg_K13_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K13_channel;
wire    ap_sync_channel_write_HwReg_K13_channel;
wire    ap_channel_done_HwReg_K12_channel;
wire    HwReg_K12_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K12_channel;
wire    ap_sync_channel_write_HwReg_K12_channel;
wire    ap_channel_done_HwReg_K11_channel;
wire    HwReg_K11_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_K11_channel;
wire    ap_sync_channel_write_HwReg_K11_channel;
wire    ap_channel_done_HwReg_RowEnd_channel;
wire    HwReg_RowEnd_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_RowEnd_channel;
wire    ap_sync_channel_write_HwReg_RowEnd_channel;
wire    ap_channel_done_HwReg_RowStart_channel;
wire    HwReg_RowStart_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_RowStart_channel;
wire    ap_sync_channel_write_HwReg_RowStart_channel;
wire    ap_channel_done_HwReg_ColEnd_channel;
wire    HwReg_ColEnd_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_ColEnd_channel;
wire    ap_sync_channel_write_HwReg_ColEnd_channel;
wire    ap_channel_done_HwReg_ColStart_channel;
wire    HwReg_ColStart_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_ColStart_channel;
wire    ap_sync_channel_write_HwReg_ColStart_channel;
wire    ap_channel_done_HwReg_OutVideoFormat_channel;
wire    HwReg_OutVideoFormat_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_OutVideoFormat_channel;
wire    ap_sync_channel_write_HwReg_OutVideoFormat_channel;
wire    ap_channel_done_HwReg_InVideoFormat_channel;
wire    HwReg_InVideoFormat_channel_full_n;
reg    ap_sync_reg_channel_write_HwReg_InVideoFormat_channel;
wire    ap_sync_channel_write_HwReg_InVideoFormat_channel;
wire    AXIvideo2MultiPixStream_U0_ap_start;
wire    AXIvideo2MultiPixStream_U0_ap_done;
wire    AXIvideo2MultiPixStream_U0_ap_continue;
wire    AXIvideo2MultiPixStream_U0_ap_idle;
wire    AXIvideo2MultiPixStream_U0_ap_ready;
wire    AXIvideo2MultiPixStream_U0_s_axis_video_TREADY;
wire   [23:0] AXIvideo2MultiPixStream_U0_stream_in_din;
wire    AXIvideo2MultiPixStream_U0_stream_in_write;
wire   [10:0] AXIvideo2MultiPixStream_U0_HwReg_width_c17_din;
wire    AXIvideo2MultiPixStream_U0_HwReg_width_c17_write;
wire   [10:0] AXIvideo2MultiPixStream_U0_HwReg_height_c21_din;
wire    AXIvideo2MultiPixStream_U0_HwReg_height_c21_write;
wire    v_hcresampler_core_U0_ap_start;
wire    v_hcresampler_core_U0_ap_done;
wire    v_hcresampler_core_U0_ap_continue;
wire    v_hcresampler_core_U0_ap_idle;
wire    v_hcresampler_core_U0_ap_ready;
wire    v_hcresampler_core_U0_stream_in_read;
wire    v_hcresampler_core_U0_HwReg_height_read;
wire    v_hcresampler_core_U0_HwReg_width_read;
wire   [23:0] v_hcresampler_core_U0_stream_in_hresampled_din;
wire    v_hcresampler_core_U0_stream_in_hresampled_write;
wire   [10:0] v_hcresampler_core_U0_HwReg_width_c16_din;
wire    v_hcresampler_core_U0_HwReg_width_c16_write;
wire   [10:0] v_hcresampler_core_U0_HwReg_height_c20_din;
wire    v_hcresampler_core_U0_HwReg_height_c20_write;
wire    v_csc_core_U0_ap_start;
wire    v_csc_core_U0_ap_done;
wire    v_csc_core_U0_ap_continue;
wire    v_csc_core_U0_ap_idle;
wire    v_csc_core_U0_ap_ready;
wire    v_csc_core_U0_stream_in_hresampled_read;
wire    v_csc_core_U0_height_read;
wire    v_csc_core_U0_width_read;
wire   [23:0] v_csc_core_U0_stream_csc_din;
wire    v_csc_core_U0_stream_csc_write;
wire   [10:0] v_csc_core_U0_HwReg_width_c15_din;
wire    v_csc_core_U0_HwReg_width_c15_write;
wire   [10:0] v_csc_core_U0_HwReg_height_c19_din;
wire    v_csc_core_U0_HwReg_height_c19_write;
wire    v_hcresampler_core_1_U0_ap_start;
wire    v_hcresampler_core_1_U0_ap_done;
wire    v_hcresampler_core_1_U0_ap_continue;
wire    v_hcresampler_core_1_U0_ap_idle;
wire    v_hcresampler_core_1_U0_ap_ready;
wire    v_hcresampler_core_1_U0_stream_csc_read;
wire    v_hcresampler_core_1_U0_HwReg_height_read;
wire    v_hcresampler_core_1_U0_HwReg_width_read;
wire   [23:0] v_hcresampler_core_1_U0_stream_out_hresampled_din;
wire    v_hcresampler_core_1_U0_stream_out_hresampled_write;
wire   [10:0] v_hcresampler_core_1_U0_HwReg_width_c_din;
wire    v_hcresampler_core_1_U0_HwReg_width_c_write;
wire   [10:0] v_hcresampler_core_1_U0_HwReg_height_c_din;
wire    v_hcresampler_core_1_U0_HwReg_height_c_write;
wire    MultiPixStream2AXIvideo_U0_ap_start;
wire    MultiPixStream2AXIvideo_U0_ap_done;
wire    MultiPixStream2AXIvideo_U0_ap_continue;
wire    MultiPixStream2AXIvideo_U0_ap_idle;
wire    MultiPixStream2AXIvideo_U0_ap_ready;
wire    MultiPixStream2AXIvideo_U0_stream_out_hresampled_read;
wire   [23:0] MultiPixStream2AXIvideo_U0_m_axis_video_TDATA;
wire    MultiPixStream2AXIvideo_U0_m_axis_video_TVALID;
wire   [2:0] MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP;
wire   [2:0] MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TUSER;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TLAST;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TID;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TDEST;
wire    MultiPixStream2AXIvideo_U0_Height_read;
wire    MultiPixStream2AXIvideo_U0_WidthOut_read;
wire   [7:0] HwReg_InVideoFormat_channel_dout;
wire   [1:0] HwReg_InVideoFormat_channel_num_data_valid;
wire   [1:0] HwReg_InVideoFormat_channel_fifo_cap;
wire    HwReg_InVideoFormat_channel_empty_n;
wire   [7:0] HwReg_OutVideoFormat_channel_dout;
wire   [3:0] HwReg_OutVideoFormat_channel_num_data_valid;
wire   [3:0] HwReg_OutVideoFormat_channel_fifo_cap;
wire    HwReg_OutVideoFormat_channel_empty_n;
wire   [15:0] HwReg_ColStart_channel_dout;
wire   [2:0] HwReg_ColStart_channel_num_data_valid;
wire   [2:0] HwReg_ColStart_channel_fifo_cap;
wire    HwReg_ColStart_channel_empty_n;
wire   [15:0] HwReg_ColEnd_channel_dout;
wire   [2:0] HwReg_ColEnd_channel_num_data_valid;
wire   [2:0] HwReg_ColEnd_channel_fifo_cap;
wire    HwReg_ColEnd_channel_empty_n;
wire   [15:0] HwReg_RowStart_channel_dout;
wire   [2:0] HwReg_RowStart_channel_num_data_valid;
wire   [2:0] HwReg_RowStart_channel_fifo_cap;
wire    HwReg_RowStart_channel_empty_n;
wire   [15:0] HwReg_RowEnd_channel_dout;
wire   [2:0] HwReg_RowEnd_channel_num_data_valid;
wire   [2:0] HwReg_RowEnd_channel_fifo_cap;
wire    HwReg_RowEnd_channel_empty_n;
wire   [15:0] HwReg_K11_channel_dout;
wire   [2:0] HwReg_K11_channel_num_data_valid;
wire   [2:0] HwReg_K11_channel_fifo_cap;
wire    HwReg_K11_channel_empty_n;
wire   [15:0] HwReg_K12_channel_dout;
wire   [2:0] HwReg_K12_channel_num_data_valid;
wire   [2:0] HwReg_K12_channel_fifo_cap;
wire    HwReg_K12_channel_empty_n;
wire   [15:0] HwReg_K13_channel_dout;
wire   [2:0] HwReg_K13_channel_num_data_valid;
wire   [2:0] HwReg_K13_channel_fifo_cap;
wire    HwReg_K13_channel_empty_n;
wire   [15:0] HwReg_K21_channel_dout;
wire   [2:0] HwReg_K21_channel_num_data_valid;
wire   [2:0] HwReg_K21_channel_fifo_cap;
wire    HwReg_K21_channel_empty_n;
wire   [15:0] HwReg_K22_channel_dout;
wire   [2:0] HwReg_K22_channel_num_data_valid;
wire   [2:0] HwReg_K22_channel_fifo_cap;
wire    HwReg_K22_channel_empty_n;
wire   [15:0] HwReg_K23_channel_dout;
wire   [2:0] HwReg_K23_channel_num_data_valid;
wire   [2:0] HwReg_K23_channel_fifo_cap;
wire    HwReg_K23_channel_empty_n;
wire   [15:0] HwReg_K31_channel_dout;
wire   [2:0] HwReg_K31_channel_num_data_valid;
wire   [2:0] HwReg_K31_channel_fifo_cap;
wire    HwReg_K31_channel_empty_n;
wire   [15:0] HwReg_K32_channel_dout;
wire   [2:0] HwReg_K32_channel_num_data_valid;
wire   [2:0] HwReg_K32_channel_fifo_cap;
wire    HwReg_K32_channel_empty_n;
wire   [15:0] HwReg_K33_channel_dout;
wire   [2:0] HwReg_K33_channel_num_data_valid;
wire   [2:0] HwReg_K33_channel_fifo_cap;
wire    HwReg_K33_channel_empty_n;
wire   [9:0] HwReg_ROffset_V_channel_dout;
wire   [2:0] HwReg_ROffset_V_channel_num_data_valid;
wire   [2:0] HwReg_ROffset_V_channel_fifo_cap;
wire    HwReg_ROffset_V_channel_empty_n;
wire   [9:0] HwReg_GOffset_V_channel_dout;
wire   [2:0] HwReg_GOffset_V_channel_num_data_valid;
wire   [2:0] HwReg_GOffset_V_channel_fifo_cap;
wire    HwReg_GOffset_V_channel_empty_n;
wire   [9:0] HwReg_BOffset_V_channel_dout;
wire   [2:0] HwReg_BOffset_V_channel_num_data_valid;
wire   [2:0] HwReg_BOffset_V_channel_fifo_cap;
wire    HwReg_BOffset_V_channel_empty_n;
wire   [7:0] HwReg_ClampMin_V_channel_dout;
wire   [2:0] HwReg_ClampMin_V_channel_num_data_valid;
wire   [2:0] HwReg_ClampMin_V_channel_fifo_cap;
wire    HwReg_ClampMin_V_channel_empty_n;
wire   [7:0] HwReg_ClipMax_V_channel_dout;
wire   [2:0] HwReg_ClipMax_V_channel_num_data_valid;
wire   [2:0] HwReg_ClipMax_V_channel_fifo_cap;
wire    HwReg_ClipMax_V_channel_empty_n;
wire   [15:0] HwReg_K11_2_channel_dout;
wire   [2:0] HwReg_K11_2_channel_num_data_valid;
wire   [2:0] HwReg_K11_2_channel_fifo_cap;
wire    HwReg_K11_2_channel_empty_n;
wire   [15:0] HwReg_K12_2_channel_dout;
wire   [2:0] HwReg_K12_2_channel_num_data_valid;
wire   [2:0] HwReg_K12_2_channel_fifo_cap;
wire    HwReg_K12_2_channel_empty_n;
wire   [15:0] HwReg_K13_2_channel_dout;
wire   [2:0] HwReg_K13_2_channel_num_data_valid;
wire   [2:0] HwReg_K13_2_channel_fifo_cap;
wire    HwReg_K13_2_channel_empty_n;
wire   [15:0] HwReg_K21_2_channel_dout;
wire   [2:0] HwReg_K21_2_channel_num_data_valid;
wire   [2:0] HwReg_K21_2_channel_fifo_cap;
wire    HwReg_K21_2_channel_empty_n;
wire   [15:0] HwReg_K22_2_channel_dout;
wire   [2:0] HwReg_K22_2_channel_num_data_valid;
wire   [2:0] HwReg_K22_2_channel_fifo_cap;
wire    HwReg_K22_2_channel_empty_n;
wire   [15:0] HwReg_K23_2_channel_dout;
wire   [2:0] HwReg_K23_2_channel_num_data_valid;
wire   [2:0] HwReg_K23_2_channel_fifo_cap;
wire    HwReg_K23_2_channel_empty_n;
wire   [15:0] HwReg_K31_2_channel_dout;
wire   [2:0] HwReg_K31_2_channel_num_data_valid;
wire   [2:0] HwReg_K31_2_channel_fifo_cap;
wire    HwReg_K31_2_channel_empty_n;
wire   [15:0] HwReg_K32_2_channel_dout;
wire   [2:0] HwReg_K32_2_channel_num_data_valid;
wire   [2:0] HwReg_K32_2_channel_fifo_cap;
wire    HwReg_K32_2_channel_empty_n;
wire   [15:0] HwReg_K33_2_channel_dout;
wire   [2:0] HwReg_K33_2_channel_num_data_valid;
wire   [2:0] HwReg_K33_2_channel_fifo_cap;
wire    HwReg_K33_2_channel_empty_n;
wire   [9:0] HwReg_ROffset_2_V_channel_dout;
wire   [2:0] HwReg_ROffset_2_V_channel_num_data_valid;
wire   [2:0] HwReg_ROffset_2_V_channel_fifo_cap;
wire    HwReg_ROffset_2_V_channel_empty_n;
wire   [9:0] HwReg_GOffset_2_V_channel_dout;
wire   [2:0] HwReg_GOffset_2_V_channel_num_data_valid;
wire   [2:0] HwReg_GOffset_2_V_channel_fifo_cap;
wire    HwReg_GOffset_2_V_channel_empty_n;
wire   [9:0] HwReg_BOffset_2_V_channel_dout;
wire   [2:0] HwReg_BOffset_2_V_channel_num_data_valid;
wire   [2:0] HwReg_BOffset_2_V_channel_fifo_cap;
wire    HwReg_BOffset_2_V_channel_empty_n;
wire   [7:0] HwReg_ClampMin_2_V_channel_dout;
wire   [2:0] HwReg_ClampMin_2_V_channel_num_data_valid;
wire   [2:0] HwReg_ClampMin_2_V_channel_fifo_cap;
wire    HwReg_ClampMin_2_V_channel_empty_n;
wire   [7:0] HwReg_ClipMax_2_V_channel_dout;
wire   [2:0] HwReg_ClipMax_2_V_channel_num_data_valid;
wire   [2:0] HwReg_ClipMax_2_V_channel_fifo_cap;
wire    HwReg_ClipMax_2_V_channel_empty_n;
wire   [0:0] bPassThru_422_or_420_In_loc_channel_dout;
wire   [2:0] bPassThru_422_or_420_In_loc_channel_num_data_valid;
wire   [2:0] bPassThru_422_or_420_In_loc_channel_fifo_cap;
wire    bPassThru_422_or_420_In_loc_channel_empty_n;
wire   [0:0] bPassThru_422_or_420_Out_loc_channel_dout;
wire   [3:0] bPassThru_422_or_420_Out_loc_channel_num_data_valid;
wire   [3:0] bPassThru_422_or_420_Out_loc_channel_fifo_cap;
wire    bPassThru_422_or_420_Out_loc_channel_empty_n;
wire   [10:0] HwReg_width_c18_channel_dout;
wire   [1:0] HwReg_width_c18_channel_num_data_valid;
wire   [1:0] HwReg_width_c18_channel_fifo_cap;
wire    HwReg_width_c18_channel_empty_n;
wire   [10:0] HwReg_height_c22_channel_dout;
wire   [1:0] HwReg_height_c22_channel_num_data_valid;
wire   [1:0] HwReg_height_c22_channel_fifo_cap;
wire    HwReg_height_c22_channel_empty_n;
wire    stream_in_full_n;
wire   [23:0] stream_in_dout;
wire   [4:0] stream_in_num_data_valid;
wire   [4:0] stream_in_fifo_cap;
wire    stream_in_empty_n;
wire    HwReg_width_c17_full_n;
wire   [10:0] HwReg_width_c17_dout;
wire   [1:0] HwReg_width_c17_num_data_valid;
wire   [1:0] HwReg_width_c17_fifo_cap;
wire    HwReg_width_c17_empty_n;
wire    HwReg_height_c21_full_n;
wire   [10:0] HwReg_height_c21_dout;
wire   [1:0] HwReg_height_c21_num_data_valid;
wire   [1:0] HwReg_height_c21_fifo_cap;
wire    HwReg_height_c21_empty_n;
wire    stream_in_hresampled_full_n;
wire   [23:0] stream_in_hresampled_dout;
wire   [4:0] stream_in_hresampled_num_data_valid;
wire   [4:0] stream_in_hresampled_fifo_cap;
wire    stream_in_hresampled_empty_n;
wire    HwReg_width_c16_full_n;
wire   [10:0] HwReg_width_c16_dout;
wire   [1:0] HwReg_width_c16_num_data_valid;
wire   [1:0] HwReg_width_c16_fifo_cap;
wire    HwReg_width_c16_empty_n;
wire    HwReg_height_c20_full_n;
wire   [10:0] HwReg_height_c20_dout;
wire   [1:0] HwReg_height_c20_num_data_valid;
wire   [1:0] HwReg_height_c20_fifo_cap;
wire    HwReg_height_c20_empty_n;
wire    stream_csc_full_n;
wire   [23:0] stream_csc_dout;
wire   [4:0] stream_csc_num_data_valid;
wire   [4:0] stream_csc_fifo_cap;
wire    stream_csc_empty_n;
wire    HwReg_width_c15_full_n;
wire   [10:0] HwReg_width_c15_dout;
wire   [1:0] HwReg_width_c15_num_data_valid;
wire   [1:0] HwReg_width_c15_fifo_cap;
wire    HwReg_width_c15_empty_n;
wire    HwReg_height_c19_full_n;
wire   [10:0] HwReg_height_c19_dout;
wire   [1:0] HwReg_height_c19_num_data_valid;
wire   [1:0] HwReg_height_c19_fifo_cap;
wire    HwReg_height_c19_empty_n;
wire    stream_out_hresampled_full_n;
wire   [23:0] stream_out_hresampled_dout;
wire   [4:0] stream_out_hresampled_num_data_valid;
wire   [4:0] stream_out_hresampled_fifo_cap;
wire    stream_out_hresampled_empty_n;
wire    HwReg_width_c_full_n;
wire   [10:0] HwReg_width_c_dout;
wire   [1:0] HwReg_width_c_num_data_valid;
wire   [1:0] HwReg_width_c_fifo_cap;
wire    HwReg_width_c_empty_n;
wire    HwReg_height_c_full_n;
wire   [10:0] HwReg_height_c_dout;
wire   [1:0] HwReg_height_c_num_data_valid;
wire   [1:0] HwReg_height_c_fifo_cap;
wire    HwReg_height_c_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_HwReg_height_c22_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_width_c18_channel = 1'b0;
#0 ap_sync_reg_channel_write_bPassThru_422_or_420_Out_loc_channel = 1'b0;
#0 ap_sync_reg_channel_write_bPassThru_422_or_420_In_loc_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_ClipMax_2_V_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_ClampMin_2_V_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_BOffset_2_V_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_GOffset_2_V_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_ROffset_2_V_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K33_2_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K32_2_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K31_2_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K23_2_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K22_2_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K21_2_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K13_2_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K12_2_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K11_2_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_ClipMax_V_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_ClampMin_V_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_BOffset_V_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_GOffset_V_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_ROffset_V_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K33_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K32_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K31_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K23_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K22_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K21_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K13_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K12_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_K11_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_RowEnd_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_RowStart_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_ColEnd_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_ColStart_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_OutVideoFormat_channel = 1'b0;
#0 ap_sync_reg_channel_write_HwReg_InVideoFormat_channel = 1'b0;
end

bd_3a92_csc_0_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .InVideoFormat(InVideoFormat),
    .OutVideoFormat(OutVideoFormat),
    .width(width),
    .height(height),
    .ColStart(ColStart),
    .ColEnd(ColEnd),
    .RowStart(RowStart),
    .RowEnd(RowEnd),
    .K11(K11),
    .K12(K12),
    .K13(K13),
    .K21(K21),
    .K22(K22),
    .K23(K23),
    .K31(K31),
    .K32(K32),
    .K33(K33),
    .ROffset(ROffset),
    .GOffset(GOffset),
    .BOffset(BOffset),
    .ClampMin(ClampMin),
    .ClipMax(ClipMax),
    .K11_2(K11_2),
    .K12_2(K12_2),
    .K13_2(K13_2),
    .K21_2(K21_2),
    .K22_2(K22_2),
    .K23_2(K23_2),
    .K31_2(K31_2),
    .K32_2(K32_2),
    .K33_2(K33_2),
    .ROffset_2(ROffset_2),
    .GOffset_2(GOffset_2),
    .BOffset_2(BOffset_2),
    .ClampMin_2(ClampMin_2),
    .ClipMax_2(ClipMax_2),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

bd_3a92_csc_0_Block_entry3_proc Block_entry3_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_entry3_proc_U0_ap_start),
    .ap_done(Block_entry3_proc_U0_ap_done),
    .ap_continue(Block_entry3_proc_U0_ap_continue),
    .ap_idle(Block_entry3_proc_U0_ap_idle),
    .ap_ready(Block_entry3_proc_U0_ap_ready),
    .InVideoFormat(InVideoFormat),
    .OutVideoFormat(OutVideoFormat),
    .width(width),
    .height(height),
    .ColStart(ColStart),
    .ColEnd(ColEnd),
    .RowStart(RowStart),
    .RowEnd(RowEnd),
    .K11(K11),
    .K12(K12),
    .K13(K13),
    .K21(K21),
    .K22(K22),
    .K23(K23),
    .K31(K31),
    .K32(K32),
    .K33(K33),
    .ROffset(ROffset),
    .GOffset(GOffset),
    .BOffset(BOffset),
    .ClampMin(ClampMin),
    .ClipMax(ClipMax),
    .K11_2(K11_2),
    .K12_2(K12_2),
    .K13_2(K13_2),
    .K21_2(K21_2),
    .K22_2(K22_2),
    .K23_2(K23_2),
    .K31_2(K31_2),
    .K32_2(K32_2),
    .K33_2(K33_2),
    .ROffset_2(ROffset_2),
    .GOffset_2(GOffset_2),
    .BOffset_2(BOffset_2),
    .ClampMin_2(ClampMin_2),
    .ClipMax_2(ClipMax_2),
    .ap_return_0(Block_entry3_proc_U0_ap_return_0),
    .ap_return_1(Block_entry3_proc_U0_ap_return_1),
    .ap_return_2(Block_entry3_proc_U0_ap_return_2),
    .ap_return_3(Block_entry3_proc_U0_ap_return_3),
    .ap_return_4(Block_entry3_proc_U0_ap_return_4),
    .ap_return_5(Block_entry3_proc_U0_ap_return_5),
    .ap_return_6(Block_entry3_proc_U0_ap_return_6),
    .ap_return_7(Block_entry3_proc_U0_ap_return_7),
    .ap_return_8(Block_entry3_proc_U0_ap_return_8),
    .ap_return_9(Block_entry3_proc_U0_ap_return_9),
    .ap_return_10(Block_entry3_proc_U0_ap_return_10),
    .ap_return_11(Block_entry3_proc_U0_ap_return_11),
    .ap_return_12(Block_entry3_proc_U0_ap_return_12),
    .ap_return_13(Block_entry3_proc_U0_ap_return_13),
    .ap_return_14(Block_entry3_proc_U0_ap_return_14),
    .ap_return_15(Block_entry3_proc_U0_ap_return_15),
    .ap_return_16(Block_entry3_proc_U0_ap_return_16),
    .ap_return_17(Block_entry3_proc_U0_ap_return_17),
    .ap_return_18(Block_entry3_proc_U0_ap_return_18),
    .ap_return_19(Block_entry3_proc_U0_ap_return_19),
    .ap_return_20(Block_entry3_proc_U0_ap_return_20),
    .ap_return_21(Block_entry3_proc_U0_ap_return_21),
    .ap_return_22(Block_entry3_proc_U0_ap_return_22),
    .ap_return_23(Block_entry3_proc_U0_ap_return_23),
    .ap_return_24(Block_entry3_proc_U0_ap_return_24),
    .ap_return_25(Block_entry3_proc_U0_ap_return_25),
    .ap_return_26(Block_entry3_proc_U0_ap_return_26),
    .ap_return_27(Block_entry3_proc_U0_ap_return_27),
    .ap_return_28(Block_entry3_proc_U0_ap_return_28),
    .ap_return_29(Block_entry3_proc_U0_ap_return_29),
    .ap_return_30(Block_entry3_proc_U0_ap_return_30),
    .ap_return_31(Block_entry3_proc_U0_ap_return_31),
    .ap_return_32(Block_entry3_proc_U0_ap_return_32),
    .ap_return_33(Block_entry3_proc_U0_ap_return_33),
    .ap_return_34(Block_entry3_proc_U0_ap_return_34),
    .ap_return_35(Block_entry3_proc_U0_ap_return_35),
    .ap_return_36(Block_entry3_proc_U0_ap_return_36),
    .ap_return_37(Block_entry3_proc_U0_ap_return_37)
);

bd_3a92_csc_0_AXIvideo2MultiPixStream AXIvideo2MultiPixStream_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2MultiPixStream_U0_ap_start),
    .ap_done(AXIvideo2MultiPixStream_U0_ap_done),
    .ap_continue(AXIvideo2MultiPixStream_U0_ap_continue),
    .ap_idle(AXIvideo2MultiPixStream_U0_ap_idle),
    .ap_ready(AXIvideo2MultiPixStream_U0_ap_ready),
    .s_axis_video_TDATA(s_axis_video_TDATA),
    .s_axis_video_TVALID(s_axis_video_TVALID),
    .s_axis_video_TREADY(AXIvideo2MultiPixStream_U0_s_axis_video_TREADY),
    .s_axis_video_TKEEP(s_axis_video_TKEEP),
    .s_axis_video_TSTRB(s_axis_video_TSTRB),
    .s_axis_video_TUSER(s_axis_video_TUSER),
    .s_axis_video_TLAST(s_axis_video_TLAST),
    .s_axis_video_TID(s_axis_video_TID),
    .s_axis_video_TDEST(s_axis_video_TDEST),
    .stream_in_din(AXIvideo2MultiPixStream_U0_stream_in_din),
    .stream_in_num_data_valid(stream_in_num_data_valid),
    .stream_in_fifo_cap(stream_in_fifo_cap),
    .stream_in_full_n(stream_in_full_n),
    .stream_in_write(AXIvideo2MultiPixStream_U0_stream_in_write),
    .p_read(HwReg_height_c22_channel_dout),
    .p_read1(HwReg_width_c18_channel_dout),
    .p_read2(HwReg_InVideoFormat_channel_dout),
    .HwReg_width_c17_din(AXIvideo2MultiPixStream_U0_HwReg_width_c17_din),
    .HwReg_width_c17_num_data_valid(HwReg_width_c17_num_data_valid),
    .HwReg_width_c17_fifo_cap(HwReg_width_c17_fifo_cap),
    .HwReg_width_c17_full_n(HwReg_width_c17_full_n),
    .HwReg_width_c17_write(AXIvideo2MultiPixStream_U0_HwReg_width_c17_write),
    .HwReg_height_c21_din(AXIvideo2MultiPixStream_U0_HwReg_height_c21_din),
    .HwReg_height_c21_num_data_valid(HwReg_height_c21_num_data_valid),
    .HwReg_height_c21_fifo_cap(HwReg_height_c21_fifo_cap),
    .HwReg_height_c21_full_n(HwReg_height_c21_full_n),
    .HwReg_height_c21_write(AXIvideo2MultiPixStream_U0_HwReg_height_c21_write)
);

bd_3a92_csc_0_v_hcresampler_core v_hcresampler_core_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(v_hcresampler_core_U0_ap_start),
    .ap_done(v_hcresampler_core_U0_ap_done),
    .ap_continue(v_hcresampler_core_U0_ap_continue),
    .ap_idle(v_hcresampler_core_U0_ap_idle),
    .ap_ready(v_hcresampler_core_U0_ap_ready),
    .stream_in_dout(stream_in_dout),
    .stream_in_num_data_valid(stream_in_num_data_valid),
    .stream_in_fifo_cap(stream_in_fifo_cap),
    .stream_in_empty_n(stream_in_empty_n),
    .stream_in_read(v_hcresampler_core_U0_stream_in_read),
    .HwReg_height_dout(HwReg_height_c21_dout),
    .HwReg_height_num_data_valid(HwReg_height_c21_num_data_valid),
    .HwReg_height_fifo_cap(HwReg_height_c21_fifo_cap),
    .HwReg_height_empty_n(HwReg_height_c21_empty_n),
    .HwReg_height_read(v_hcresampler_core_U0_HwReg_height_read),
    .HwReg_width_dout(HwReg_width_c17_dout),
    .HwReg_width_num_data_valid(HwReg_width_c17_num_data_valid),
    .HwReg_width_fifo_cap(HwReg_width_c17_fifo_cap),
    .HwReg_width_empty_n(HwReg_width_c17_empty_n),
    .HwReg_width_read(v_hcresampler_core_U0_HwReg_width_read),
    .p_read(bPassThru_422_or_420_In_loc_channel_dout),
    .stream_in_hresampled_din(v_hcresampler_core_U0_stream_in_hresampled_din),
    .stream_in_hresampled_num_data_valid(stream_in_hresampled_num_data_valid),
    .stream_in_hresampled_fifo_cap(stream_in_hresampled_fifo_cap),
    .stream_in_hresampled_full_n(stream_in_hresampled_full_n),
    .stream_in_hresampled_write(v_hcresampler_core_U0_stream_in_hresampled_write),
    .HwReg_width_c16_din(v_hcresampler_core_U0_HwReg_width_c16_din),
    .HwReg_width_c16_num_data_valid(HwReg_width_c16_num_data_valid),
    .HwReg_width_c16_fifo_cap(HwReg_width_c16_fifo_cap),
    .HwReg_width_c16_full_n(HwReg_width_c16_full_n),
    .HwReg_width_c16_write(v_hcresampler_core_U0_HwReg_width_c16_write),
    .HwReg_height_c20_din(v_hcresampler_core_U0_HwReg_height_c20_din),
    .HwReg_height_c20_num_data_valid(HwReg_height_c20_num_data_valid),
    .HwReg_height_c20_fifo_cap(HwReg_height_c20_fifo_cap),
    .HwReg_height_c20_full_n(HwReg_height_c20_full_n),
    .HwReg_height_c20_write(v_hcresampler_core_U0_HwReg_height_c20_write)
);

bd_3a92_csc_0_v_csc_core v_csc_core_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(v_csc_core_U0_ap_start),
    .ap_done(v_csc_core_U0_ap_done),
    .ap_continue(v_csc_core_U0_ap_continue),
    .ap_idle(v_csc_core_U0_ap_idle),
    .ap_ready(v_csc_core_U0_ap_ready),
    .stream_in_hresampled_dout(stream_in_hresampled_dout),
    .stream_in_hresampled_num_data_valid(stream_in_hresampled_num_data_valid),
    .stream_in_hresampled_fifo_cap(stream_in_hresampled_fifo_cap),
    .stream_in_hresampled_empty_n(stream_in_hresampled_empty_n),
    .stream_in_hresampled_read(v_csc_core_U0_stream_in_hresampled_read),
    .height_dout(HwReg_height_c20_dout),
    .height_num_data_valid(HwReg_height_c20_num_data_valid),
    .height_fifo_cap(HwReg_height_c20_fifo_cap),
    .height_empty_n(HwReg_height_c20_empty_n),
    .height_read(v_csc_core_U0_height_read),
    .width_dout(HwReg_width_c16_dout),
    .width_num_data_valid(HwReg_width_c16_num_data_valid),
    .width_fifo_cap(HwReg_width_c16_fifo_cap),
    .width_empty_n(HwReg_width_c16_empty_n),
    .width_read(v_csc_core_U0_width_read),
    .p_read(HwReg_ColStart_channel_dout),
    .p_read1(HwReg_ColEnd_channel_dout),
    .p_read2(HwReg_RowStart_channel_dout),
    .p_read3(HwReg_RowEnd_channel_dout),
    .p_read4(HwReg_K11_channel_dout),
    .p_read5(HwReg_K12_channel_dout),
    .p_read6(HwReg_K13_channel_dout),
    .p_read7(HwReg_K21_channel_dout),
    .p_read8(HwReg_K22_channel_dout),
    .p_read9(HwReg_K23_channel_dout),
    .p_read10(HwReg_K31_channel_dout),
    .p_read11(HwReg_K32_channel_dout),
    .p_read12(HwReg_K33_channel_dout),
    .p_read13(HwReg_ROffset_V_channel_dout),
    .p_read14(HwReg_GOffset_V_channel_dout),
    .p_read15(HwReg_BOffset_V_channel_dout),
    .p_read16(HwReg_ClampMin_V_channel_dout),
    .p_read17(HwReg_ClipMax_V_channel_dout),
    .p_read18(HwReg_K11_2_channel_dout),
    .p_read19(HwReg_K12_2_channel_dout),
    .p_read20(HwReg_K13_2_channel_dout),
    .p_read21(HwReg_K21_2_channel_dout),
    .p_read22(HwReg_K22_2_channel_dout),
    .p_read23(HwReg_K23_2_channel_dout),
    .p_read24(HwReg_K31_2_channel_dout),
    .p_read25(HwReg_K32_2_channel_dout),
    .p_read26(HwReg_K33_2_channel_dout),
    .p_read27(HwReg_ROffset_2_V_channel_dout),
    .p_read28(HwReg_GOffset_2_V_channel_dout),
    .p_read29(HwReg_BOffset_2_V_channel_dout),
    .p_read30(HwReg_ClampMin_2_V_channel_dout),
    .p_read31(HwReg_ClipMax_2_V_channel_dout),
    .stream_csc_din(v_csc_core_U0_stream_csc_din),
    .stream_csc_num_data_valid(stream_csc_num_data_valid),
    .stream_csc_fifo_cap(stream_csc_fifo_cap),
    .stream_csc_full_n(stream_csc_full_n),
    .stream_csc_write(v_csc_core_U0_stream_csc_write),
    .HwReg_width_c15_din(v_csc_core_U0_HwReg_width_c15_din),
    .HwReg_width_c15_num_data_valid(HwReg_width_c15_num_data_valid),
    .HwReg_width_c15_fifo_cap(HwReg_width_c15_fifo_cap),
    .HwReg_width_c15_full_n(HwReg_width_c15_full_n),
    .HwReg_width_c15_write(v_csc_core_U0_HwReg_width_c15_write),
    .HwReg_height_c19_din(v_csc_core_U0_HwReg_height_c19_din),
    .HwReg_height_c19_num_data_valid(HwReg_height_c19_num_data_valid),
    .HwReg_height_c19_fifo_cap(HwReg_height_c19_fifo_cap),
    .HwReg_height_c19_full_n(HwReg_height_c19_full_n),
    .HwReg_height_c19_write(v_csc_core_U0_HwReg_height_c19_write)
);

bd_3a92_csc_0_v_hcresampler_core_1 v_hcresampler_core_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(v_hcresampler_core_1_U0_ap_start),
    .ap_done(v_hcresampler_core_1_U0_ap_done),
    .ap_continue(v_hcresampler_core_1_U0_ap_continue),
    .ap_idle(v_hcresampler_core_1_U0_ap_idle),
    .ap_ready(v_hcresampler_core_1_U0_ap_ready),
    .stream_csc_dout(stream_csc_dout),
    .stream_csc_num_data_valid(stream_csc_num_data_valid),
    .stream_csc_fifo_cap(stream_csc_fifo_cap),
    .stream_csc_empty_n(stream_csc_empty_n),
    .stream_csc_read(v_hcresampler_core_1_U0_stream_csc_read),
    .HwReg_height_dout(HwReg_height_c19_dout),
    .HwReg_height_num_data_valid(HwReg_height_c19_num_data_valid),
    .HwReg_height_fifo_cap(HwReg_height_c19_fifo_cap),
    .HwReg_height_empty_n(HwReg_height_c19_empty_n),
    .HwReg_height_read(v_hcresampler_core_1_U0_HwReg_height_read),
    .HwReg_width_dout(HwReg_width_c15_dout),
    .HwReg_width_num_data_valid(HwReg_width_c15_num_data_valid),
    .HwReg_width_fifo_cap(HwReg_width_c15_fifo_cap),
    .HwReg_width_empty_n(HwReg_width_c15_empty_n),
    .HwReg_width_read(v_hcresampler_core_1_U0_HwReg_width_read),
    .p_read(bPassThru_422_or_420_Out_loc_channel_dout),
    .stream_out_hresampled_din(v_hcresampler_core_1_U0_stream_out_hresampled_din),
    .stream_out_hresampled_num_data_valid(stream_out_hresampled_num_data_valid),
    .stream_out_hresampled_fifo_cap(stream_out_hresampled_fifo_cap),
    .stream_out_hresampled_full_n(stream_out_hresampled_full_n),
    .stream_out_hresampled_write(v_hcresampler_core_1_U0_stream_out_hresampled_write),
    .HwReg_width_c_din(v_hcresampler_core_1_U0_HwReg_width_c_din),
    .HwReg_width_c_num_data_valid(HwReg_width_c_num_data_valid),
    .HwReg_width_c_fifo_cap(HwReg_width_c_fifo_cap),
    .HwReg_width_c_full_n(HwReg_width_c_full_n),
    .HwReg_width_c_write(v_hcresampler_core_1_U0_HwReg_width_c_write),
    .HwReg_height_c_din(v_hcresampler_core_1_U0_HwReg_height_c_din),
    .HwReg_height_c_num_data_valid(HwReg_height_c_num_data_valid),
    .HwReg_height_c_fifo_cap(HwReg_height_c_fifo_cap),
    .HwReg_height_c_full_n(HwReg_height_c_full_n),
    .HwReg_height_c_write(v_hcresampler_core_1_U0_HwReg_height_c_write)
);

bd_3a92_csc_0_MultiPixStream2AXIvideo MultiPixStream2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(MultiPixStream2AXIvideo_U0_ap_start),
    .ap_done(MultiPixStream2AXIvideo_U0_ap_done),
    .ap_continue(MultiPixStream2AXIvideo_U0_ap_continue),
    .ap_idle(MultiPixStream2AXIvideo_U0_ap_idle),
    .ap_ready(MultiPixStream2AXIvideo_U0_ap_ready),
    .stream_out_hresampled_dout(stream_out_hresampled_dout),
    .stream_out_hresampled_num_data_valid(stream_out_hresampled_num_data_valid),
    .stream_out_hresampled_fifo_cap(stream_out_hresampled_fifo_cap),
    .stream_out_hresampled_empty_n(stream_out_hresampled_empty_n),
    .stream_out_hresampled_read(MultiPixStream2AXIvideo_U0_stream_out_hresampled_read),
    .m_axis_video_TDATA(MultiPixStream2AXIvideo_U0_m_axis_video_TDATA),
    .m_axis_video_TVALID(MultiPixStream2AXIvideo_U0_m_axis_video_TVALID),
    .m_axis_video_TREADY(m_axis_video_TREADY),
    .m_axis_video_TKEEP(MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP),
    .m_axis_video_TSTRB(MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB),
    .m_axis_video_TUSER(MultiPixStream2AXIvideo_U0_m_axis_video_TUSER),
    .m_axis_video_TLAST(MultiPixStream2AXIvideo_U0_m_axis_video_TLAST),
    .m_axis_video_TID(MultiPixStream2AXIvideo_U0_m_axis_video_TID),
    .m_axis_video_TDEST(MultiPixStream2AXIvideo_U0_m_axis_video_TDEST),
    .Height_dout(HwReg_height_c_dout),
    .Height_num_data_valid(HwReg_height_c_num_data_valid),
    .Height_fifo_cap(HwReg_height_c_fifo_cap),
    .Height_empty_n(HwReg_height_c_empty_n),
    .Height_read(MultiPixStream2AXIvideo_U0_Height_read),
    .WidthOut_dout(HwReg_width_c_dout),
    .WidthOut_num_data_valid(HwReg_width_c_num_data_valid),
    .WidthOut_fifo_cap(HwReg_width_c_fifo_cap),
    .WidthOut_empty_n(HwReg_width_c_empty_n),
    .WidthOut_read(MultiPixStream2AXIvideo_U0_WidthOut_read),
    .p_read(HwReg_OutVideoFormat_channel_dout)
);

bd_3a92_csc_0_fifo_w8_d2_S HwReg_InVideoFormat_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_0),
    .if_full_n(HwReg_InVideoFormat_channel_full_n),
    .if_write(ap_channel_done_HwReg_InVideoFormat_channel),
    .if_dout(HwReg_InVideoFormat_channel_dout),
    .if_num_data_valid(HwReg_InVideoFormat_channel_num_data_valid),
    .if_fifo_cap(HwReg_InVideoFormat_channel_fifo_cap),
    .if_empty_n(HwReg_InVideoFormat_channel_empty_n),
    .if_read(AXIvideo2MultiPixStream_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w8_d6_S HwReg_OutVideoFormat_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_1),
    .if_full_n(HwReg_OutVideoFormat_channel_full_n),
    .if_write(ap_channel_done_HwReg_OutVideoFormat_channel),
    .if_dout(HwReg_OutVideoFormat_channel_dout),
    .if_num_data_valid(HwReg_OutVideoFormat_channel_num_data_valid),
    .if_fifo_cap(HwReg_OutVideoFormat_channel_fifo_cap),
    .if_empty_n(HwReg_OutVideoFormat_channel_empty_n),
    .if_read(MultiPixStream2AXIvideo_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_ColStart_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_2),
    .if_full_n(HwReg_ColStart_channel_full_n),
    .if_write(ap_channel_done_HwReg_ColStart_channel),
    .if_dout(HwReg_ColStart_channel_dout),
    .if_num_data_valid(HwReg_ColStart_channel_num_data_valid),
    .if_fifo_cap(HwReg_ColStart_channel_fifo_cap),
    .if_empty_n(HwReg_ColStart_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_ColEnd_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_3),
    .if_full_n(HwReg_ColEnd_channel_full_n),
    .if_write(ap_channel_done_HwReg_ColEnd_channel),
    .if_dout(HwReg_ColEnd_channel_dout),
    .if_num_data_valid(HwReg_ColEnd_channel_num_data_valid),
    .if_fifo_cap(HwReg_ColEnd_channel_fifo_cap),
    .if_empty_n(HwReg_ColEnd_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_RowStart_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_4),
    .if_full_n(HwReg_RowStart_channel_full_n),
    .if_write(ap_channel_done_HwReg_RowStart_channel),
    .if_dout(HwReg_RowStart_channel_dout),
    .if_num_data_valid(HwReg_RowStart_channel_num_data_valid),
    .if_fifo_cap(HwReg_RowStart_channel_fifo_cap),
    .if_empty_n(HwReg_RowStart_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_RowEnd_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_5),
    .if_full_n(HwReg_RowEnd_channel_full_n),
    .if_write(ap_channel_done_HwReg_RowEnd_channel),
    .if_dout(HwReg_RowEnd_channel_dout),
    .if_num_data_valid(HwReg_RowEnd_channel_num_data_valid),
    .if_fifo_cap(HwReg_RowEnd_channel_fifo_cap),
    .if_empty_n(HwReg_RowEnd_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K11_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_6),
    .if_full_n(HwReg_K11_channel_full_n),
    .if_write(ap_channel_done_HwReg_K11_channel),
    .if_dout(HwReg_K11_channel_dout),
    .if_num_data_valid(HwReg_K11_channel_num_data_valid),
    .if_fifo_cap(HwReg_K11_channel_fifo_cap),
    .if_empty_n(HwReg_K11_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K12_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_7),
    .if_full_n(HwReg_K12_channel_full_n),
    .if_write(ap_channel_done_HwReg_K12_channel),
    .if_dout(HwReg_K12_channel_dout),
    .if_num_data_valid(HwReg_K12_channel_num_data_valid),
    .if_fifo_cap(HwReg_K12_channel_fifo_cap),
    .if_empty_n(HwReg_K12_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K13_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_8),
    .if_full_n(HwReg_K13_channel_full_n),
    .if_write(ap_channel_done_HwReg_K13_channel),
    .if_dout(HwReg_K13_channel_dout),
    .if_num_data_valid(HwReg_K13_channel_num_data_valid),
    .if_fifo_cap(HwReg_K13_channel_fifo_cap),
    .if_empty_n(HwReg_K13_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K21_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_9),
    .if_full_n(HwReg_K21_channel_full_n),
    .if_write(ap_channel_done_HwReg_K21_channel),
    .if_dout(HwReg_K21_channel_dout),
    .if_num_data_valid(HwReg_K21_channel_num_data_valid),
    .if_fifo_cap(HwReg_K21_channel_fifo_cap),
    .if_empty_n(HwReg_K21_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K22_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_10),
    .if_full_n(HwReg_K22_channel_full_n),
    .if_write(ap_channel_done_HwReg_K22_channel),
    .if_dout(HwReg_K22_channel_dout),
    .if_num_data_valid(HwReg_K22_channel_num_data_valid),
    .if_fifo_cap(HwReg_K22_channel_fifo_cap),
    .if_empty_n(HwReg_K22_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K23_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_11),
    .if_full_n(HwReg_K23_channel_full_n),
    .if_write(ap_channel_done_HwReg_K23_channel),
    .if_dout(HwReg_K23_channel_dout),
    .if_num_data_valid(HwReg_K23_channel_num_data_valid),
    .if_fifo_cap(HwReg_K23_channel_fifo_cap),
    .if_empty_n(HwReg_K23_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K31_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_12),
    .if_full_n(HwReg_K31_channel_full_n),
    .if_write(ap_channel_done_HwReg_K31_channel),
    .if_dout(HwReg_K31_channel_dout),
    .if_num_data_valid(HwReg_K31_channel_num_data_valid),
    .if_fifo_cap(HwReg_K31_channel_fifo_cap),
    .if_empty_n(HwReg_K31_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K32_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_13),
    .if_full_n(HwReg_K32_channel_full_n),
    .if_write(ap_channel_done_HwReg_K32_channel),
    .if_dout(HwReg_K32_channel_dout),
    .if_num_data_valid(HwReg_K32_channel_num_data_valid),
    .if_fifo_cap(HwReg_K32_channel_fifo_cap),
    .if_empty_n(HwReg_K32_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K33_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_14),
    .if_full_n(HwReg_K33_channel_full_n),
    .if_write(ap_channel_done_HwReg_K33_channel),
    .if_dout(HwReg_K33_channel_dout),
    .if_num_data_valid(HwReg_K33_channel_num_data_valid),
    .if_fifo_cap(HwReg_K33_channel_fifo_cap),
    .if_empty_n(HwReg_K33_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w10_d4_S HwReg_ROffset_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_15),
    .if_full_n(HwReg_ROffset_V_channel_full_n),
    .if_write(ap_channel_done_HwReg_ROffset_V_channel),
    .if_dout(HwReg_ROffset_V_channel_dout),
    .if_num_data_valid(HwReg_ROffset_V_channel_num_data_valid),
    .if_fifo_cap(HwReg_ROffset_V_channel_fifo_cap),
    .if_empty_n(HwReg_ROffset_V_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w10_d4_S HwReg_GOffset_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_16),
    .if_full_n(HwReg_GOffset_V_channel_full_n),
    .if_write(ap_channel_done_HwReg_GOffset_V_channel),
    .if_dout(HwReg_GOffset_V_channel_dout),
    .if_num_data_valid(HwReg_GOffset_V_channel_num_data_valid),
    .if_fifo_cap(HwReg_GOffset_V_channel_fifo_cap),
    .if_empty_n(HwReg_GOffset_V_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w10_d4_S HwReg_BOffset_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_17),
    .if_full_n(HwReg_BOffset_V_channel_full_n),
    .if_write(ap_channel_done_HwReg_BOffset_V_channel),
    .if_dout(HwReg_BOffset_V_channel_dout),
    .if_num_data_valid(HwReg_BOffset_V_channel_num_data_valid),
    .if_fifo_cap(HwReg_BOffset_V_channel_fifo_cap),
    .if_empty_n(HwReg_BOffset_V_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w8_d4_S HwReg_ClampMin_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_18),
    .if_full_n(HwReg_ClampMin_V_channel_full_n),
    .if_write(ap_channel_done_HwReg_ClampMin_V_channel),
    .if_dout(HwReg_ClampMin_V_channel_dout),
    .if_num_data_valid(HwReg_ClampMin_V_channel_num_data_valid),
    .if_fifo_cap(HwReg_ClampMin_V_channel_fifo_cap),
    .if_empty_n(HwReg_ClampMin_V_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w8_d4_S HwReg_ClipMax_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_19),
    .if_full_n(HwReg_ClipMax_V_channel_full_n),
    .if_write(ap_channel_done_HwReg_ClipMax_V_channel),
    .if_dout(HwReg_ClipMax_V_channel_dout),
    .if_num_data_valid(HwReg_ClipMax_V_channel_num_data_valid),
    .if_fifo_cap(HwReg_ClipMax_V_channel_fifo_cap),
    .if_empty_n(HwReg_ClipMax_V_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K11_2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_20),
    .if_full_n(HwReg_K11_2_channel_full_n),
    .if_write(ap_channel_done_HwReg_K11_2_channel),
    .if_dout(HwReg_K11_2_channel_dout),
    .if_num_data_valid(HwReg_K11_2_channel_num_data_valid),
    .if_fifo_cap(HwReg_K11_2_channel_fifo_cap),
    .if_empty_n(HwReg_K11_2_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K12_2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_21),
    .if_full_n(HwReg_K12_2_channel_full_n),
    .if_write(ap_channel_done_HwReg_K12_2_channel),
    .if_dout(HwReg_K12_2_channel_dout),
    .if_num_data_valid(HwReg_K12_2_channel_num_data_valid),
    .if_fifo_cap(HwReg_K12_2_channel_fifo_cap),
    .if_empty_n(HwReg_K12_2_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K13_2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_22),
    .if_full_n(HwReg_K13_2_channel_full_n),
    .if_write(ap_channel_done_HwReg_K13_2_channel),
    .if_dout(HwReg_K13_2_channel_dout),
    .if_num_data_valid(HwReg_K13_2_channel_num_data_valid),
    .if_fifo_cap(HwReg_K13_2_channel_fifo_cap),
    .if_empty_n(HwReg_K13_2_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K21_2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_23),
    .if_full_n(HwReg_K21_2_channel_full_n),
    .if_write(ap_channel_done_HwReg_K21_2_channel),
    .if_dout(HwReg_K21_2_channel_dout),
    .if_num_data_valid(HwReg_K21_2_channel_num_data_valid),
    .if_fifo_cap(HwReg_K21_2_channel_fifo_cap),
    .if_empty_n(HwReg_K21_2_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K22_2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_24),
    .if_full_n(HwReg_K22_2_channel_full_n),
    .if_write(ap_channel_done_HwReg_K22_2_channel),
    .if_dout(HwReg_K22_2_channel_dout),
    .if_num_data_valid(HwReg_K22_2_channel_num_data_valid),
    .if_fifo_cap(HwReg_K22_2_channel_fifo_cap),
    .if_empty_n(HwReg_K22_2_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K23_2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_25),
    .if_full_n(HwReg_K23_2_channel_full_n),
    .if_write(ap_channel_done_HwReg_K23_2_channel),
    .if_dout(HwReg_K23_2_channel_dout),
    .if_num_data_valid(HwReg_K23_2_channel_num_data_valid),
    .if_fifo_cap(HwReg_K23_2_channel_fifo_cap),
    .if_empty_n(HwReg_K23_2_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K31_2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_26),
    .if_full_n(HwReg_K31_2_channel_full_n),
    .if_write(ap_channel_done_HwReg_K31_2_channel),
    .if_dout(HwReg_K31_2_channel_dout),
    .if_num_data_valid(HwReg_K31_2_channel_num_data_valid),
    .if_fifo_cap(HwReg_K31_2_channel_fifo_cap),
    .if_empty_n(HwReg_K31_2_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K32_2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_27),
    .if_full_n(HwReg_K32_2_channel_full_n),
    .if_write(ap_channel_done_HwReg_K32_2_channel),
    .if_dout(HwReg_K32_2_channel_dout),
    .if_num_data_valid(HwReg_K32_2_channel_num_data_valid),
    .if_fifo_cap(HwReg_K32_2_channel_fifo_cap),
    .if_empty_n(HwReg_K32_2_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w16_d4_S HwReg_K33_2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_28),
    .if_full_n(HwReg_K33_2_channel_full_n),
    .if_write(ap_channel_done_HwReg_K33_2_channel),
    .if_dout(HwReg_K33_2_channel_dout),
    .if_num_data_valid(HwReg_K33_2_channel_num_data_valid),
    .if_fifo_cap(HwReg_K33_2_channel_fifo_cap),
    .if_empty_n(HwReg_K33_2_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w10_d4_S HwReg_ROffset_2_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_29),
    .if_full_n(HwReg_ROffset_2_V_channel_full_n),
    .if_write(ap_channel_done_HwReg_ROffset_2_V_channel),
    .if_dout(HwReg_ROffset_2_V_channel_dout),
    .if_num_data_valid(HwReg_ROffset_2_V_channel_num_data_valid),
    .if_fifo_cap(HwReg_ROffset_2_V_channel_fifo_cap),
    .if_empty_n(HwReg_ROffset_2_V_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w10_d4_S HwReg_GOffset_2_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_30),
    .if_full_n(HwReg_GOffset_2_V_channel_full_n),
    .if_write(ap_channel_done_HwReg_GOffset_2_V_channel),
    .if_dout(HwReg_GOffset_2_V_channel_dout),
    .if_num_data_valid(HwReg_GOffset_2_V_channel_num_data_valid),
    .if_fifo_cap(HwReg_GOffset_2_V_channel_fifo_cap),
    .if_empty_n(HwReg_GOffset_2_V_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w10_d4_S HwReg_BOffset_2_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_31),
    .if_full_n(HwReg_BOffset_2_V_channel_full_n),
    .if_write(ap_channel_done_HwReg_BOffset_2_V_channel),
    .if_dout(HwReg_BOffset_2_V_channel_dout),
    .if_num_data_valid(HwReg_BOffset_2_V_channel_num_data_valid),
    .if_fifo_cap(HwReg_BOffset_2_V_channel_fifo_cap),
    .if_empty_n(HwReg_BOffset_2_V_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w8_d4_S HwReg_ClampMin_2_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_32),
    .if_full_n(HwReg_ClampMin_2_V_channel_full_n),
    .if_write(ap_channel_done_HwReg_ClampMin_2_V_channel),
    .if_dout(HwReg_ClampMin_2_V_channel_dout),
    .if_num_data_valid(HwReg_ClampMin_2_V_channel_num_data_valid),
    .if_fifo_cap(HwReg_ClampMin_2_V_channel_fifo_cap),
    .if_empty_n(HwReg_ClampMin_2_V_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w8_d4_S HwReg_ClipMax_2_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_33),
    .if_full_n(HwReg_ClipMax_2_V_channel_full_n),
    .if_write(ap_channel_done_HwReg_ClipMax_2_V_channel),
    .if_dout(HwReg_ClipMax_2_V_channel_dout),
    .if_num_data_valid(HwReg_ClipMax_2_V_channel_num_data_valid),
    .if_fifo_cap(HwReg_ClipMax_2_V_channel_fifo_cap),
    .if_empty_n(HwReg_ClipMax_2_V_channel_empty_n),
    .if_read(v_csc_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w1_d3_S bPassThru_422_or_420_In_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_34),
    .if_full_n(bPassThru_422_or_420_In_loc_channel_full_n),
    .if_write(ap_channel_done_bPassThru_422_or_420_In_loc_channel),
    .if_dout(bPassThru_422_or_420_In_loc_channel_dout),
    .if_num_data_valid(bPassThru_422_or_420_In_loc_channel_num_data_valid),
    .if_fifo_cap(bPassThru_422_or_420_In_loc_channel_fifo_cap),
    .if_empty_n(bPassThru_422_or_420_In_loc_channel_empty_n),
    .if_read(v_hcresampler_core_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w1_d5_S bPassThru_422_or_420_Out_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_35),
    .if_full_n(bPassThru_422_or_420_Out_loc_channel_full_n),
    .if_write(ap_channel_done_bPassThru_422_or_420_Out_loc_channel),
    .if_dout(bPassThru_422_or_420_Out_loc_channel_dout),
    .if_num_data_valid(bPassThru_422_or_420_Out_loc_channel_num_data_valid),
    .if_fifo_cap(bPassThru_422_or_420_Out_loc_channel_fifo_cap),
    .if_empty_n(bPassThru_422_or_420_Out_loc_channel_empty_n),
    .if_read(v_hcresampler_core_1_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w11_d2_S HwReg_width_c18_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_36),
    .if_full_n(HwReg_width_c18_channel_full_n),
    .if_write(ap_channel_done_HwReg_width_c18_channel),
    .if_dout(HwReg_width_c18_channel_dout),
    .if_num_data_valid(HwReg_width_c18_channel_num_data_valid),
    .if_fifo_cap(HwReg_width_c18_channel_fifo_cap),
    .if_empty_n(HwReg_width_c18_channel_empty_n),
    .if_read(AXIvideo2MultiPixStream_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w11_d2_S HwReg_height_c22_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry3_proc_U0_ap_return_37),
    .if_full_n(HwReg_height_c22_channel_full_n),
    .if_write(ap_channel_done_HwReg_height_c22_channel),
    .if_dout(HwReg_height_c22_channel_dout),
    .if_num_data_valid(HwReg_height_c22_channel_num_data_valid),
    .if_fifo_cap(HwReg_height_c22_channel_fifo_cap),
    .if_empty_n(HwReg_height_c22_channel_empty_n),
    .if_read(AXIvideo2MultiPixStream_U0_ap_ready)
);

bd_3a92_csc_0_fifo_w24_d16_S stream_in_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2MultiPixStream_U0_stream_in_din),
    .if_full_n(stream_in_full_n),
    .if_write(AXIvideo2MultiPixStream_U0_stream_in_write),
    .if_dout(stream_in_dout),
    .if_num_data_valid(stream_in_num_data_valid),
    .if_fifo_cap(stream_in_fifo_cap),
    .if_empty_n(stream_in_empty_n),
    .if_read(v_hcresampler_core_U0_stream_in_read)
);

bd_3a92_csc_0_fifo_w11_d2_S HwReg_width_c17_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2MultiPixStream_U0_HwReg_width_c17_din),
    .if_full_n(HwReg_width_c17_full_n),
    .if_write(AXIvideo2MultiPixStream_U0_HwReg_width_c17_write),
    .if_dout(HwReg_width_c17_dout),
    .if_num_data_valid(HwReg_width_c17_num_data_valid),
    .if_fifo_cap(HwReg_width_c17_fifo_cap),
    .if_empty_n(HwReg_width_c17_empty_n),
    .if_read(v_hcresampler_core_U0_HwReg_width_read)
);

bd_3a92_csc_0_fifo_w11_d2_S HwReg_height_c21_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2MultiPixStream_U0_HwReg_height_c21_din),
    .if_full_n(HwReg_height_c21_full_n),
    .if_write(AXIvideo2MultiPixStream_U0_HwReg_height_c21_write),
    .if_dout(HwReg_height_c21_dout),
    .if_num_data_valid(HwReg_height_c21_num_data_valid),
    .if_fifo_cap(HwReg_height_c21_fifo_cap),
    .if_empty_n(HwReg_height_c21_empty_n),
    .if_read(v_hcresampler_core_U0_HwReg_height_read)
);

bd_3a92_csc_0_fifo_w24_d16_S stream_in_hresampled_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(v_hcresampler_core_U0_stream_in_hresampled_din),
    .if_full_n(stream_in_hresampled_full_n),
    .if_write(v_hcresampler_core_U0_stream_in_hresampled_write),
    .if_dout(stream_in_hresampled_dout),
    .if_num_data_valid(stream_in_hresampled_num_data_valid),
    .if_fifo_cap(stream_in_hresampled_fifo_cap),
    .if_empty_n(stream_in_hresampled_empty_n),
    .if_read(v_csc_core_U0_stream_in_hresampled_read)
);

bd_3a92_csc_0_fifo_w11_d2_S HwReg_width_c16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(v_hcresampler_core_U0_HwReg_width_c16_din),
    .if_full_n(HwReg_width_c16_full_n),
    .if_write(v_hcresampler_core_U0_HwReg_width_c16_write),
    .if_dout(HwReg_width_c16_dout),
    .if_num_data_valid(HwReg_width_c16_num_data_valid),
    .if_fifo_cap(HwReg_width_c16_fifo_cap),
    .if_empty_n(HwReg_width_c16_empty_n),
    .if_read(v_csc_core_U0_width_read)
);

bd_3a92_csc_0_fifo_w11_d2_S HwReg_height_c20_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(v_hcresampler_core_U0_HwReg_height_c20_din),
    .if_full_n(HwReg_height_c20_full_n),
    .if_write(v_hcresampler_core_U0_HwReg_height_c20_write),
    .if_dout(HwReg_height_c20_dout),
    .if_num_data_valid(HwReg_height_c20_num_data_valid),
    .if_fifo_cap(HwReg_height_c20_fifo_cap),
    .if_empty_n(HwReg_height_c20_empty_n),
    .if_read(v_csc_core_U0_height_read)
);

bd_3a92_csc_0_fifo_w24_d16_S stream_csc_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(v_csc_core_U0_stream_csc_din),
    .if_full_n(stream_csc_full_n),
    .if_write(v_csc_core_U0_stream_csc_write),
    .if_dout(stream_csc_dout),
    .if_num_data_valid(stream_csc_num_data_valid),
    .if_fifo_cap(stream_csc_fifo_cap),
    .if_empty_n(stream_csc_empty_n),
    .if_read(v_hcresampler_core_1_U0_stream_csc_read)
);

bd_3a92_csc_0_fifo_w11_d2_S HwReg_width_c15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(v_csc_core_U0_HwReg_width_c15_din),
    .if_full_n(HwReg_width_c15_full_n),
    .if_write(v_csc_core_U0_HwReg_width_c15_write),
    .if_dout(HwReg_width_c15_dout),
    .if_num_data_valid(HwReg_width_c15_num_data_valid),
    .if_fifo_cap(HwReg_width_c15_fifo_cap),
    .if_empty_n(HwReg_width_c15_empty_n),
    .if_read(v_hcresampler_core_1_U0_HwReg_width_read)
);

bd_3a92_csc_0_fifo_w11_d2_S HwReg_height_c19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(v_csc_core_U0_HwReg_height_c19_din),
    .if_full_n(HwReg_height_c19_full_n),
    .if_write(v_csc_core_U0_HwReg_height_c19_write),
    .if_dout(HwReg_height_c19_dout),
    .if_num_data_valid(HwReg_height_c19_num_data_valid),
    .if_fifo_cap(HwReg_height_c19_fifo_cap),
    .if_empty_n(HwReg_height_c19_empty_n),
    .if_read(v_hcresampler_core_1_U0_HwReg_height_read)
);

bd_3a92_csc_0_fifo_w24_d16_S stream_out_hresampled_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(v_hcresampler_core_1_U0_stream_out_hresampled_din),
    .if_full_n(stream_out_hresampled_full_n),
    .if_write(v_hcresampler_core_1_U0_stream_out_hresampled_write),
    .if_dout(stream_out_hresampled_dout),
    .if_num_data_valid(stream_out_hresampled_num_data_valid),
    .if_fifo_cap(stream_out_hresampled_fifo_cap),
    .if_empty_n(stream_out_hresampled_empty_n),
    .if_read(MultiPixStream2AXIvideo_U0_stream_out_hresampled_read)
);

bd_3a92_csc_0_fifo_w11_d2_S HwReg_width_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(v_hcresampler_core_1_U0_HwReg_width_c_din),
    .if_full_n(HwReg_width_c_full_n),
    .if_write(v_hcresampler_core_1_U0_HwReg_width_c_write),
    .if_dout(HwReg_width_c_dout),
    .if_num_data_valid(HwReg_width_c_num_data_valid),
    .if_fifo_cap(HwReg_width_c_fifo_cap),
    .if_empty_n(HwReg_width_c_empty_n),
    .if_read(MultiPixStream2AXIvideo_U0_WidthOut_read)
);

bd_3a92_csc_0_fifo_w11_d2_S HwReg_height_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(v_hcresampler_core_1_U0_HwReg_height_c_din),
    .if_full_n(HwReg_height_c_full_n),
    .if_write(v_hcresampler_core_1_U0_HwReg_height_c_write),
    .if_dout(HwReg_height_c_dout),
    .if_num_data_valid(HwReg_height_c_num_data_valid),
    .if_fifo_cap(HwReg_height_c_fifo_cap),
    .if_empty_n(HwReg_height_c_empty_n),
    .if_read(MultiPixStream2AXIvideo_U0_Height_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_BOffset_2_V_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_BOffset_2_V_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_BOffset_2_V_channel <= ap_sync_channel_write_HwReg_BOffset_2_V_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_BOffset_V_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_BOffset_V_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_BOffset_V_channel <= ap_sync_channel_write_HwReg_BOffset_V_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_ClampMin_2_V_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_ClampMin_2_V_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_ClampMin_2_V_channel <= ap_sync_channel_write_HwReg_ClampMin_2_V_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_ClampMin_V_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_ClampMin_V_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_ClampMin_V_channel <= ap_sync_channel_write_HwReg_ClampMin_V_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_ClipMax_2_V_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_ClipMax_2_V_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_ClipMax_2_V_channel <= ap_sync_channel_write_HwReg_ClipMax_2_V_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_ClipMax_V_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_ClipMax_V_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_ClipMax_V_channel <= ap_sync_channel_write_HwReg_ClipMax_V_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_ColEnd_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_ColEnd_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_ColEnd_channel <= ap_sync_channel_write_HwReg_ColEnd_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_ColStart_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_ColStart_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_ColStart_channel <= ap_sync_channel_write_HwReg_ColStart_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_GOffset_2_V_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_GOffset_2_V_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_GOffset_2_V_channel <= ap_sync_channel_write_HwReg_GOffset_2_V_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_GOffset_V_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_GOffset_V_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_GOffset_V_channel <= ap_sync_channel_write_HwReg_GOffset_V_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_InVideoFormat_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_InVideoFormat_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_InVideoFormat_channel <= ap_sync_channel_write_HwReg_InVideoFormat_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K11_2_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K11_2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K11_2_channel <= ap_sync_channel_write_HwReg_K11_2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K11_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K11_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K11_channel <= ap_sync_channel_write_HwReg_K11_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K12_2_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K12_2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K12_2_channel <= ap_sync_channel_write_HwReg_K12_2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K12_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K12_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K12_channel <= ap_sync_channel_write_HwReg_K12_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K13_2_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K13_2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K13_2_channel <= ap_sync_channel_write_HwReg_K13_2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K13_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K13_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K13_channel <= ap_sync_channel_write_HwReg_K13_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K21_2_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K21_2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K21_2_channel <= ap_sync_channel_write_HwReg_K21_2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K21_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K21_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K21_channel <= ap_sync_channel_write_HwReg_K21_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K22_2_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K22_2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K22_2_channel <= ap_sync_channel_write_HwReg_K22_2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K22_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K22_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K22_channel <= ap_sync_channel_write_HwReg_K22_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K23_2_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K23_2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K23_2_channel <= ap_sync_channel_write_HwReg_K23_2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K23_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K23_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K23_channel <= ap_sync_channel_write_HwReg_K23_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K31_2_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K31_2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K31_2_channel <= ap_sync_channel_write_HwReg_K31_2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K31_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K31_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K31_channel <= ap_sync_channel_write_HwReg_K31_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K32_2_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K32_2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K32_2_channel <= ap_sync_channel_write_HwReg_K32_2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K32_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K32_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K32_channel <= ap_sync_channel_write_HwReg_K32_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K33_2_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K33_2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K33_2_channel <= ap_sync_channel_write_HwReg_K33_2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_K33_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_K33_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_K33_channel <= ap_sync_channel_write_HwReg_K33_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_OutVideoFormat_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_OutVideoFormat_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_OutVideoFormat_channel <= ap_sync_channel_write_HwReg_OutVideoFormat_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_ROffset_2_V_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_ROffset_2_V_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_ROffset_2_V_channel <= ap_sync_channel_write_HwReg_ROffset_2_V_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_ROffset_V_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_ROffset_V_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_ROffset_V_channel <= ap_sync_channel_write_HwReg_ROffset_V_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_RowEnd_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_RowEnd_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_RowEnd_channel <= ap_sync_channel_write_HwReg_RowEnd_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_RowStart_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_RowStart_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_RowStart_channel <= ap_sync_channel_write_HwReg_RowStart_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_height_c22_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_height_c22_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_height_c22_channel <= ap_sync_channel_write_HwReg_height_c22_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_HwReg_width_c18_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_HwReg_width_c18_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_HwReg_width_c18_channel <= ap_sync_channel_write_HwReg_width_c18_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_bPassThru_422_or_420_In_loc_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_bPassThru_422_or_420_In_loc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_bPassThru_422_or_420_In_loc_channel <= ap_sync_channel_write_bPassThru_422_or_420_In_loc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_bPassThru_422_or_420_Out_loc_channel <= 1'b0;
    end else begin
        if (((Block_entry3_proc_U0_ap_done & Block_entry3_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_bPassThru_422_or_420_Out_loc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_bPassThru_422_or_420_Out_loc_channel <= ap_sync_channel_write_bPassThru_422_or_420_Out_loc_channel;
        end
    end
end

assign AXIvideo2MultiPixStream_U0_ap_continue = 1'b1;

assign AXIvideo2MultiPixStream_U0_ap_start = (HwReg_width_c18_channel_empty_n & HwReg_height_c22_channel_empty_n & HwReg_InVideoFormat_channel_empty_n);

assign Block_entry3_proc_U0_ap_continue = (ap_sync_channel_write_bPassThru_422_or_420_Out_loc_channel & ap_sync_channel_write_bPassThru_422_or_420_In_loc_channel & ap_sync_channel_write_HwReg_width_c18_channel & ap_sync_channel_write_HwReg_height_c22_channel & ap_sync_channel_write_HwReg_RowStart_channel & ap_sync_channel_write_HwReg_RowEnd_channel & ap_sync_channel_write_HwReg_ROffset_V_channel & ap_sync_channel_write_HwReg_ROffset_2_V_channel & ap_sync_channel_write_HwReg_OutVideoFormat_channel & ap_sync_channel_write_HwReg_K33_channel & ap_sync_channel_write_HwReg_K33_2_channel & ap_sync_channel_write_HwReg_K32_channel & ap_sync_channel_write_HwReg_K32_2_channel & ap_sync_channel_write_HwReg_K31_channel & ap_sync_channel_write_HwReg_K31_2_channel & ap_sync_channel_write_HwReg_K23_channel & ap_sync_channel_write_HwReg_K23_2_channel & ap_sync_channel_write_HwReg_K22_channel & ap_sync_channel_write_HwReg_K22_2_channel & ap_sync_channel_write_HwReg_K21_channel & ap_sync_channel_write_HwReg_K21_2_channel & ap_sync_channel_write_HwReg_K13_channel & ap_sync_channel_write_HwReg_K13_2_channel & ap_sync_channel_write_HwReg_K12_channel & ap_sync_channel_write_HwReg_K12_2_channel & ap_sync_channel_write_HwReg_K11_channel & ap_sync_channel_write_HwReg_K11_2_channel & ap_sync_channel_write_HwReg_InVideoFormat_channel & ap_sync_channel_write_HwReg_GOffset_V_channel & ap_sync_channel_write_HwReg_GOffset_2_V_channel & ap_sync_channel_write_HwReg_ColStart_channel & ap_sync_channel_write_HwReg_ColEnd_channel & ap_sync_channel_write_HwReg_ClipMax_V_channel & ap_sync_channel_write_HwReg_ClipMax_2_V_channel & ap_sync_channel_write_HwReg_ClampMin_V_channel & ap_sync_channel_write_HwReg_ClampMin_2_V_channel & ap_sync_channel_write_HwReg_BOffset_V_channel & ap_sync_channel_write_HwReg_BOffset_2_V_channel);

assign Block_entry3_proc_U0_ap_start = ap_start;

assign MultiPixStream2AXIvideo_U0_ap_continue = 1'b1;

assign MultiPixStream2AXIvideo_U0_ap_start = HwReg_OutVideoFormat_channel_empty_n;

assign ap_channel_done_HwReg_BOffset_2_V_channel = ((ap_sync_reg_channel_write_HwReg_BOffset_2_V_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_BOffset_V_channel = ((ap_sync_reg_channel_write_HwReg_BOffset_V_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_ClampMin_2_V_channel = ((ap_sync_reg_channel_write_HwReg_ClampMin_2_V_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_ClampMin_V_channel = ((ap_sync_reg_channel_write_HwReg_ClampMin_V_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_ClipMax_2_V_channel = ((ap_sync_reg_channel_write_HwReg_ClipMax_2_V_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_ClipMax_V_channel = ((ap_sync_reg_channel_write_HwReg_ClipMax_V_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_ColEnd_channel = ((ap_sync_reg_channel_write_HwReg_ColEnd_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_ColStart_channel = ((ap_sync_reg_channel_write_HwReg_ColStart_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_GOffset_2_V_channel = ((ap_sync_reg_channel_write_HwReg_GOffset_2_V_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_GOffset_V_channel = ((ap_sync_reg_channel_write_HwReg_GOffset_V_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_InVideoFormat_channel = ((ap_sync_reg_channel_write_HwReg_InVideoFormat_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K11_2_channel = ((ap_sync_reg_channel_write_HwReg_K11_2_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K11_channel = ((ap_sync_reg_channel_write_HwReg_K11_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K12_2_channel = ((ap_sync_reg_channel_write_HwReg_K12_2_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K12_channel = ((ap_sync_reg_channel_write_HwReg_K12_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K13_2_channel = ((ap_sync_reg_channel_write_HwReg_K13_2_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K13_channel = ((ap_sync_reg_channel_write_HwReg_K13_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K21_2_channel = ((ap_sync_reg_channel_write_HwReg_K21_2_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K21_channel = ((ap_sync_reg_channel_write_HwReg_K21_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K22_2_channel = ((ap_sync_reg_channel_write_HwReg_K22_2_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K22_channel = ((ap_sync_reg_channel_write_HwReg_K22_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K23_2_channel = ((ap_sync_reg_channel_write_HwReg_K23_2_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K23_channel = ((ap_sync_reg_channel_write_HwReg_K23_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K31_2_channel = ((ap_sync_reg_channel_write_HwReg_K31_2_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K31_channel = ((ap_sync_reg_channel_write_HwReg_K31_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K32_2_channel = ((ap_sync_reg_channel_write_HwReg_K32_2_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K32_channel = ((ap_sync_reg_channel_write_HwReg_K32_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K33_2_channel = ((ap_sync_reg_channel_write_HwReg_K33_2_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_K33_channel = ((ap_sync_reg_channel_write_HwReg_K33_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_OutVideoFormat_channel = ((ap_sync_reg_channel_write_HwReg_OutVideoFormat_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_ROffset_2_V_channel = ((ap_sync_reg_channel_write_HwReg_ROffset_2_V_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_ROffset_V_channel = ((ap_sync_reg_channel_write_HwReg_ROffset_V_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_RowEnd_channel = ((ap_sync_reg_channel_write_HwReg_RowEnd_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_RowStart_channel = ((ap_sync_reg_channel_write_HwReg_RowStart_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_height_c22_channel = ((ap_sync_reg_channel_write_HwReg_height_c22_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_HwReg_width_c18_channel = ((ap_sync_reg_channel_write_HwReg_width_c18_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_bPassThru_422_or_420_In_loc_channel = ((ap_sync_reg_channel_write_bPassThru_422_or_420_In_loc_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_channel_done_bPassThru_422_or_420_Out_loc_channel = ((ap_sync_reg_channel_write_bPassThru_422_or_420_Out_loc_channel ^ 1'b1) & Block_entry3_proc_U0_ap_done);

assign ap_done = MultiPixStream2AXIvideo_U0_ap_done;

assign ap_idle = (v_hcresampler_core_U0_ap_idle & v_hcresampler_core_1_U0_ap_idle & v_csc_core_U0_ap_idle & (1'b1 ^ HwReg_K11_2_channel_empty_n) & (1'b1 ^ HwReg_ClipMax_V_channel_empty_n) & (1'b1 ^ HwReg_ClampMin_V_channel_empty_n) & (1'b1 ^ HwReg_BOffset_V_channel_empty_n) & (1'b1 ^ HwReg_GOffset_V_channel_empty_n) & (1'b1 ^ HwReg_ROffset_V_channel_empty_n) & (1'b1 ^ HwReg_K33_channel_empty_n) & (1'b1 ^ HwReg_K32_channel_empty_n) & (1'b1 ^ HwReg_K31_channel_empty_n) & (1'b1 ^ HwReg_K23_channel_empty_n) & (1'b1 ^ HwReg_K22_channel_empty_n) & (1'b1 ^ HwReg_K21_channel_empty_n) & (1'b1 ^ HwReg_K13_channel_empty_n) & (1'b1 ^ HwReg_K12_channel_empty_n) & (1'b1 ^ HwReg_K11_channel_empty_n) & (1'b1 ^ HwReg_RowEnd_channel_empty_n) & (1'b1 ^ HwReg_RowStart_channel_empty_n) & (1'b1 ^ HwReg_ColEnd_channel_empty_n) & (1'b1 ^ HwReg_ColStart_channel_empty_n) & (1'b1 ^ HwReg_OutVideoFormat_channel_empty_n) & (1'b1 ^ HwReg_InVideoFormat_channel_empty_n) & (1'b1 ^ HwReg_height_c22_channel_empty_n) & (1'b1 ^ HwReg_width_c18_channel_empty_n) & (1'b1 ^ HwReg_ClipMax_2_V_channel_empty_n) & (1'b1 ^ HwReg_ClampMin_2_V_channel_empty_n) & (1'b1 ^ HwReg_BOffset_2_V_channel_empty_n) & (1'b1 ^ HwReg_GOffset_2_V_channel_empty_n) & (1'b1 ^ HwReg_ROffset_2_V_channel_empty_n) & (1'b1 ^ HwReg_K33_2_channel_empty_n) & (1'b1 ^ HwReg_K32_2_channel_empty_n) & (1'b1 ^ HwReg_K31_2_channel_empty_n) & (1'b1 ^ HwReg_K23_2_channel_empty_n) & (1'b1 ^ HwReg_K22_2_channel_empty_n) & (1'b1 ^ HwReg_K21_2_channel_empty_n) & (1'b1 ^ HwReg_K13_2_channel_empty_n) & (1'b1 ^ HwReg_K12_2_channel_empty_n) & (bPassThru_422_or_420_Out_loc_channel_empty_n ^ 1'b1) & (bPassThru_422_or_420_In_loc_channel_empty_n ^ 1'b1) & MultiPixStream2AXIvideo_U0_ap_idle & Block_entry3_proc_U0_ap_idle & AXIvideo2MultiPixStream_U0_ap_idle);

assign ap_ready = Block_entry3_proc_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_channel_write_HwReg_BOffset_2_V_channel = ((ap_channel_done_HwReg_BOffset_2_V_channel & HwReg_BOffset_2_V_channel_full_n) | ap_sync_reg_channel_write_HwReg_BOffset_2_V_channel);

assign ap_sync_channel_write_HwReg_BOffset_V_channel = ((ap_channel_done_HwReg_BOffset_V_channel & HwReg_BOffset_V_channel_full_n) | ap_sync_reg_channel_write_HwReg_BOffset_V_channel);

assign ap_sync_channel_write_HwReg_ClampMin_2_V_channel = ((ap_channel_done_HwReg_ClampMin_2_V_channel & HwReg_ClampMin_2_V_channel_full_n) | ap_sync_reg_channel_write_HwReg_ClampMin_2_V_channel);

assign ap_sync_channel_write_HwReg_ClampMin_V_channel = ((ap_channel_done_HwReg_ClampMin_V_channel & HwReg_ClampMin_V_channel_full_n) | ap_sync_reg_channel_write_HwReg_ClampMin_V_channel);

assign ap_sync_channel_write_HwReg_ClipMax_2_V_channel = ((ap_channel_done_HwReg_ClipMax_2_V_channel & HwReg_ClipMax_2_V_channel_full_n) | ap_sync_reg_channel_write_HwReg_ClipMax_2_V_channel);

assign ap_sync_channel_write_HwReg_ClipMax_V_channel = ((ap_channel_done_HwReg_ClipMax_V_channel & HwReg_ClipMax_V_channel_full_n) | ap_sync_reg_channel_write_HwReg_ClipMax_V_channel);

assign ap_sync_channel_write_HwReg_ColEnd_channel = ((ap_channel_done_HwReg_ColEnd_channel & HwReg_ColEnd_channel_full_n) | ap_sync_reg_channel_write_HwReg_ColEnd_channel);

assign ap_sync_channel_write_HwReg_ColStart_channel = ((ap_channel_done_HwReg_ColStart_channel & HwReg_ColStart_channel_full_n) | ap_sync_reg_channel_write_HwReg_ColStart_channel);

assign ap_sync_channel_write_HwReg_GOffset_2_V_channel = ((ap_channel_done_HwReg_GOffset_2_V_channel & HwReg_GOffset_2_V_channel_full_n) | ap_sync_reg_channel_write_HwReg_GOffset_2_V_channel);

assign ap_sync_channel_write_HwReg_GOffset_V_channel = ((ap_channel_done_HwReg_GOffset_V_channel & HwReg_GOffset_V_channel_full_n) | ap_sync_reg_channel_write_HwReg_GOffset_V_channel);

assign ap_sync_channel_write_HwReg_InVideoFormat_channel = ((ap_channel_done_HwReg_InVideoFormat_channel & HwReg_InVideoFormat_channel_full_n) | ap_sync_reg_channel_write_HwReg_InVideoFormat_channel);

assign ap_sync_channel_write_HwReg_K11_2_channel = ((ap_channel_done_HwReg_K11_2_channel & HwReg_K11_2_channel_full_n) | ap_sync_reg_channel_write_HwReg_K11_2_channel);

assign ap_sync_channel_write_HwReg_K11_channel = ((ap_channel_done_HwReg_K11_channel & HwReg_K11_channel_full_n) | ap_sync_reg_channel_write_HwReg_K11_channel);

assign ap_sync_channel_write_HwReg_K12_2_channel = ((ap_channel_done_HwReg_K12_2_channel & HwReg_K12_2_channel_full_n) | ap_sync_reg_channel_write_HwReg_K12_2_channel);

assign ap_sync_channel_write_HwReg_K12_channel = ((ap_channel_done_HwReg_K12_channel & HwReg_K12_channel_full_n) | ap_sync_reg_channel_write_HwReg_K12_channel);

assign ap_sync_channel_write_HwReg_K13_2_channel = ((ap_channel_done_HwReg_K13_2_channel & HwReg_K13_2_channel_full_n) | ap_sync_reg_channel_write_HwReg_K13_2_channel);

assign ap_sync_channel_write_HwReg_K13_channel = ((ap_channel_done_HwReg_K13_channel & HwReg_K13_channel_full_n) | ap_sync_reg_channel_write_HwReg_K13_channel);

assign ap_sync_channel_write_HwReg_K21_2_channel = ((ap_channel_done_HwReg_K21_2_channel & HwReg_K21_2_channel_full_n) | ap_sync_reg_channel_write_HwReg_K21_2_channel);

assign ap_sync_channel_write_HwReg_K21_channel = ((ap_channel_done_HwReg_K21_channel & HwReg_K21_channel_full_n) | ap_sync_reg_channel_write_HwReg_K21_channel);

assign ap_sync_channel_write_HwReg_K22_2_channel = ((ap_channel_done_HwReg_K22_2_channel & HwReg_K22_2_channel_full_n) | ap_sync_reg_channel_write_HwReg_K22_2_channel);

assign ap_sync_channel_write_HwReg_K22_channel = ((ap_channel_done_HwReg_K22_channel & HwReg_K22_channel_full_n) | ap_sync_reg_channel_write_HwReg_K22_channel);

assign ap_sync_channel_write_HwReg_K23_2_channel = ((ap_channel_done_HwReg_K23_2_channel & HwReg_K23_2_channel_full_n) | ap_sync_reg_channel_write_HwReg_K23_2_channel);

assign ap_sync_channel_write_HwReg_K23_channel = ((ap_channel_done_HwReg_K23_channel & HwReg_K23_channel_full_n) | ap_sync_reg_channel_write_HwReg_K23_channel);

assign ap_sync_channel_write_HwReg_K31_2_channel = ((ap_channel_done_HwReg_K31_2_channel & HwReg_K31_2_channel_full_n) | ap_sync_reg_channel_write_HwReg_K31_2_channel);

assign ap_sync_channel_write_HwReg_K31_channel = ((ap_channel_done_HwReg_K31_channel & HwReg_K31_channel_full_n) | ap_sync_reg_channel_write_HwReg_K31_channel);

assign ap_sync_channel_write_HwReg_K32_2_channel = ((ap_channel_done_HwReg_K32_2_channel & HwReg_K32_2_channel_full_n) | ap_sync_reg_channel_write_HwReg_K32_2_channel);

assign ap_sync_channel_write_HwReg_K32_channel = ((ap_channel_done_HwReg_K32_channel & HwReg_K32_channel_full_n) | ap_sync_reg_channel_write_HwReg_K32_channel);

assign ap_sync_channel_write_HwReg_K33_2_channel = ((ap_channel_done_HwReg_K33_2_channel & HwReg_K33_2_channel_full_n) | ap_sync_reg_channel_write_HwReg_K33_2_channel);

assign ap_sync_channel_write_HwReg_K33_channel = ((ap_channel_done_HwReg_K33_channel & HwReg_K33_channel_full_n) | ap_sync_reg_channel_write_HwReg_K33_channel);

assign ap_sync_channel_write_HwReg_OutVideoFormat_channel = ((ap_channel_done_HwReg_OutVideoFormat_channel & HwReg_OutVideoFormat_channel_full_n) | ap_sync_reg_channel_write_HwReg_OutVideoFormat_channel);

assign ap_sync_channel_write_HwReg_ROffset_2_V_channel = ((ap_channel_done_HwReg_ROffset_2_V_channel & HwReg_ROffset_2_V_channel_full_n) | ap_sync_reg_channel_write_HwReg_ROffset_2_V_channel);

assign ap_sync_channel_write_HwReg_ROffset_V_channel = ((ap_channel_done_HwReg_ROffset_V_channel & HwReg_ROffset_V_channel_full_n) | ap_sync_reg_channel_write_HwReg_ROffset_V_channel);

assign ap_sync_channel_write_HwReg_RowEnd_channel = ((ap_channel_done_HwReg_RowEnd_channel & HwReg_RowEnd_channel_full_n) | ap_sync_reg_channel_write_HwReg_RowEnd_channel);

assign ap_sync_channel_write_HwReg_RowStart_channel = ((ap_channel_done_HwReg_RowStart_channel & HwReg_RowStart_channel_full_n) | ap_sync_reg_channel_write_HwReg_RowStart_channel);

assign ap_sync_channel_write_HwReg_height_c22_channel = ((ap_channel_done_HwReg_height_c22_channel & HwReg_height_c22_channel_full_n) | ap_sync_reg_channel_write_HwReg_height_c22_channel);

assign ap_sync_channel_write_HwReg_width_c18_channel = ((ap_channel_done_HwReg_width_c18_channel & HwReg_width_c18_channel_full_n) | ap_sync_reg_channel_write_HwReg_width_c18_channel);

assign ap_sync_channel_write_bPassThru_422_or_420_In_loc_channel = ((bPassThru_422_or_420_In_loc_channel_full_n & ap_channel_done_bPassThru_422_or_420_In_loc_channel) | ap_sync_reg_channel_write_bPassThru_422_or_420_In_loc_channel);

assign ap_sync_channel_write_bPassThru_422_or_420_Out_loc_channel = ((bPassThru_422_or_420_Out_loc_channel_full_n & ap_channel_done_bPassThru_422_or_420_Out_loc_channel) | ap_sync_reg_channel_write_bPassThru_422_or_420_Out_loc_channel);

assign m_axis_video_TDATA = MultiPixStream2AXIvideo_U0_m_axis_video_TDATA;

assign m_axis_video_TDEST = MultiPixStream2AXIvideo_U0_m_axis_video_TDEST;

assign m_axis_video_TID = MultiPixStream2AXIvideo_U0_m_axis_video_TID;

assign m_axis_video_TKEEP = MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP;

assign m_axis_video_TLAST = MultiPixStream2AXIvideo_U0_m_axis_video_TLAST;

assign m_axis_video_TSTRB = MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB;

assign m_axis_video_TUSER = MultiPixStream2AXIvideo_U0_m_axis_video_TUSER;

assign m_axis_video_TVALID = MultiPixStream2AXIvideo_U0_m_axis_video_TVALID;

assign s_axis_video_TREADY = AXIvideo2MultiPixStream_U0_s_axis_video_TREADY;

assign v_csc_core_U0_ap_continue = 1'b1;

assign v_csc_core_U0_ap_start = (HwReg_RowStart_channel_empty_n & HwReg_RowEnd_channel_empty_n & HwReg_ROffset_V_channel_empty_n & HwReg_ROffset_2_V_channel_empty_n & HwReg_K33_channel_empty_n & HwReg_K33_2_channel_empty_n & HwReg_K32_channel_empty_n & HwReg_K32_2_channel_empty_n & HwReg_K31_channel_empty_n & HwReg_K31_2_channel_empty_n & HwReg_K23_channel_empty_n & HwReg_K23_2_channel_empty_n & HwReg_K22_channel_empty_n & HwReg_K22_2_channel_empty_n & HwReg_K21_channel_empty_n & HwReg_K21_2_channel_empty_n & HwReg_K13_channel_empty_n & HwReg_K13_2_channel_empty_n & HwReg_K12_channel_empty_n & HwReg_K12_2_channel_empty_n & HwReg_K11_channel_empty_n & HwReg_K11_2_channel_empty_n & HwReg_GOffset_V_channel_empty_n & HwReg_GOffset_2_V_channel_empty_n & HwReg_ColStart_channel_empty_n & HwReg_ColEnd_channel_empty_n & HwReg_ClipMax_V_channel_empty_n & HwReg_ClipMax_2_V_channel_empty_n & HwReg_ClampMin_V_channel_empty_n & HwReg_ClampMin_2_V_channel_empty_n & HwReg_BOffset_V_channel_empty_n & HwReg_BOffset_2_V_channel_empty_n);

assign v_hcresampler_core_1_U0_ap_continue = 1'b1;

assign v_hcresampler_core_1_U0_ap_start = bPassThru_422_or_420_Out_loc_channel_empty_n;

assign v_hcresampler_core_U0_ap_continue = 1'b1;

assign v_hcresampler_core_U0_ap_start = bPassThru_422_or_420_In_loc_channel_empty_n;


reg find_df_deadlock = 0;
// synthesis translate_off
`include "bd_3a92_csc_0_hls_deadlock_detector.vh"
// synthesis translate_on

reg find_kernel_block = 0;
// synthesis translate_off
`include "bd_3a92_csc_0_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //bd_3a92_csc_0_v_csc

