// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bd_3a92_ltr_0_v_letterbox,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=5.625000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.132000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=826,HLS_SYN_LUT=1619,HLS_VERSION=2022_1}" *)

module bd_3a92_ltr_0_v_letterbox (
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        s_axis_video_TDATA,
        s_axis_video_TKEEP,
        s_axis_video_TSTRB,
        s_axis_video_TUSER,
        s_axis_video_TLAST,
        s_axis_video_TID,
        s_axis_video_TDEST,
        m_axis_video_TDATA,
        m_axis_video_TKEEP,
        m_axis_video_TSTRB,
        m_axis_video_TUSER,
        m_axis_video_TLAST,
        m_axis_video_TID,
        m_axis_video_TDEST,
        s_axis_video_TVALID,
        s_axis_video_TREADY,
        m_axis_video_TVALID,
        m_axis_video_TREADY
);

parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [23:0] s_axis_video_TDATA;
input  [2:0] s_axis_video_TKEEP;
input  [2:0] s_axis_video_TSTRB;
input  [0:0] s_axis_video_TUSER;
input  [0:0] s_axis_video_TLAST;
input  [0:0] s_axis_video_TID;
input  [0:0] s_axis_video_TDEST;
output  [23:0] m_axis_video_TDATA;
output  [2:0] m_axis_video_TKEEP;
output  [2:0] m_axis_video_TSTRB;
output  [0:0] m_axis_video_TUSER;
output  [0:0] m_axis_video_TLAST;
output  [0:0] m_axis_video_TID;
output  [0:0] m_axis_video_TDEST;
input   s_axis_video_TVALID;
output   s_axis_video_TREADY;
output   m_axis_video_TVALID;
input   m_axis_video_TREADY;

 reg    ap_rst_n_inv;
wire   [15:0] width;
wire   [15:0] height;
wire   [15:0] video_format;
wire   [15:0] col_start;
wire   [15:0] col_end;
wire   [15:0] row_start;
wire   [15:0] row_end;
wire   [15:0] Y_R_value;
wire   [15:0] Cb_G_value;
wire   [15:0] Cr_B_value;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    AXIvideo2MultiPixStream_U0_ap_start;
wire    AXIvideo2MultiPixStream_U0_ap_done;
wire    AXIvideo2MultiPixStream_U0_ap_continue;
wire    AXIvideo2MultiPixStream_U0_ap_idle;
wire    AXIvideo2MultiPixStream_U0_ap_ready;
wire    AXIvideo2MultiPixStream_U0_start_out;
wire    AXIvideo2MultiPixStream_U0_start_write;
wire    AXIvideo2MultiPixStream_U0_s_axis_video_TREADY;
wire   [23:0] AXIvideo2MultiPixStream_U0_srcYUV_din;
wire    AXIvideo2MultiPixStream_U0_srcYUV_write;
wire    v_letterbox_core_U0_ap_start;
wire    v_letterbox_core_U0_ap_done;
wire    v_letterbox_core_U0_ap_continue;
wire    v_letterbox_core_U0_ap_idle;
wire    v_letterbox_core_U0_ap_ready;
wire    v_letterbox_core_U0_start_out;
wire    v_letterbox_core_U0_start_write;
wire    v_letterbox_core_U0_srcYUV_read;
wire   [23:0] v_letterbox_core_U0_outYUV_din;
wire    v_letterbox_core_U0_outYUV_write;
wire    MultiPixStream2AXIvideo_U0_ap_start;
wire    MultiPixStream2AXIvideo_U0_ap_done;
wire    MultiPixStream2AXIvideo_U0_ap_continue;
wire    MultiPixStream2AXIvideo_U0_ap_idle;
wire    MultiPixStream2AXIvideo_U0_ap_ready;
wire    MultiPixStream2AXIvideo_U0_outYUV_read;
wire   [23:0] MultiPixStream2AXIvideo_U0_m_axis_video_TDATA;
wire    MultiPixStream2AXIvideo_U0_m_axis_video_TVALID;
wire   [2:0] MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP;
wire   [2:0] MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TUSER;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TLAST;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TID;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TDEST;
wire    srcYUV_full_n;
wire   [23:0] srcYUV_dout;
wire   [4:0] srcYUV_num_data_valid;
wire   [4:0] srcYUV_fifo_cap;
wire    srcYUV_empty_n;
wire    outYUV_full_n;
wire   [23:0] outYUV_dout;
wire   [4:0] outYUV_num_data_valid;
wire   [4:0] outYUV_fifo_cap;
wire    outYUV_empty_n;
wire   [0:0] start_for_v_letterbox_core_U0_din;
wire    start_for_v_letterbox_core_U0_full_n;
wire   [0:0] start_for_v_letterbox_core_U0_dout;
wire    start_for_v_letterbox_core_U0_empty_n;
wire   [0:0] start_for_MultiPixStream2AXIvideo_U0_din;
wire    start_for_MultiPixStream2AXIvideo_U0_full_n;
wire   [0:0] start_for_MultiPixStream2AXIvideo_U0_dout;
wire    start_for_MultiPixStream2AXIvideo_U0_empty_n;

bd_3a92_ltr_0_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .width(width),
    .height(height),
    .video_format(video_format),
    .col_start(col_start),
    .col_end(col_end),
    .row_start(row_start),
    .row_end(row_end),
    .Y_R_value(Y_R_value),
    .Cb_G_value(Cb_G_value),
    .Cr_B_value(Cr_B_value),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

bd_3a92_ltr_0_AXIvideo2MultiPixStream AXIvideo2MultiPixStream_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2MultiPixStream_U0_ap_start),
    .start_full_n(start_for_v_letterbox_core_U0_full_n),
    .ap_done(AXIvideo2MultiPixStream_U0_ap_done),
    .ap_continue(AXIvideo2MultiPixStream_U0_ap_continue),
    .ap_idle(AXIvideo2MultiPixStream_U0_ap_idle),
    .ap_ready(AXIvideo2MultiPixStream_U0_ap_ready),
    .start_out(AXIvideo2MultiPixStream_U0_start_out),
    .start_write(AXIvideo2MultiPixStream_U0_start_write),
    .s_axis_video_TDATA(s_axis_video_TDATA),
    .s_axis_video_TVALID(s_axis_video_TVALID),
    .s_axis_video_TREADY(AXIvideo2MultiPixStream_U0_s_axis_video_TREADY),
    .s_axis_video_TKEEP(s_axis_video_TKEEP),
    .s_axis_video_TSTRB(s_axis_video_TSTRB),
    .s_axis_video_TUSER(s_axis_video_TUSER),
    .s_axis_video_TLAST(s_axis_video_TLAST),
    .s_axis_video_TID(s_axis_video_TID),
    .s_axis_video_TDEST(s_axis_video_TDEST),
    .srcYUV_din(AXIvideo2MultiPixStream_U0_srcYUV_din),
    .srcYUV_num_data_valid(srcYUV_num_data_valid),
    .srcYUV_fifo_cap(srcYUV_fifo_cap),
    .srcYUV_full_n(srcYUV_full_n),
    .srcYUV_write(AXIvideo2MultiPixStream_U0_srcYUV_write),
    .height(height),
    .width(width),
    .video_format(video_format)
);

bd_3a92_ltr_0_v_letterbox_core v_letterbox_core_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(v_letterbox_core_U0_ap_start),
    .start_full_n(start_for_MultiPixStream2AXIvideo_U0_full_n),
    .ap_done(v_letterbox_core_U0_ap_done),
    .ap_continue(v_letterbox_core_U0_ap_continue),
    .ap_idle(v_letterbox_core_U0_ap_idle),
    .ap_ready(v_letterbox_core_U0_ap_ready),
    .start_out(v_letterbox_core_U0_start_out),
    .start_write(v_letterbox_core_U0_start_write),
    .srcYUV_dout(srcYUV_dout),
    .srcYUV_num_data_valid(srcYUV_num_data_valid),
    .srcYUV_fifo_cap(srcYUV_fifo_cap),
    .srcYUV_empty_n(srcYUV_empty_n),
    .srcYUV_read(v_letterbox_core_U0_srcYUV_read),
    .height(height),
    .width(width),
    .video_format(video_format),
    .col_start(col_start),
    .col_end(col_end),
    .row_start(row_start),
    .row_end(row_end),
    .Y_R_value(Y_R_value),
    .Cb_G_value(Cb_G_value),
    .Cr_B_value(Cr_B_value),
    .outYUV_din(v_letterbox_core_U0_outYUV_din),
    .outYUV_num_data_valid(outYUV_num_data_valid),
    .outYUV_fifo_cap(outYUV_fifo_cap),
    .outYUV_full_n(outYUV_full_n),
    .outYUV_write(v_letterbox_core_U0_outYUV_write)
);

bd_3a92_ltr_0_MultiPixStream2AXIvideo MultiPixStream2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(MultiPixStream2AXIvideo_U0_ap_start),
    .ap_done(MultiPixStream2AXIvideo_U0_ap_done),
    .ap_continue(MultiPixStream2AXIvideo_U0_ap_continue),
    .ap_idle(MultiPixStream2AXIvideo_U0_ap_idle),
    .ap_ready(MultiPixStream2AXIvideo_U0_ap_ready),
    .outYUV_dout(outYUV_dout),
    .outYUV_num_data_valid(outYUV_num_data_valid),
    .outYUV_fifo_cap(outYUV_fifo_cap),
    .outYUV_empty_n(outYUV_empty_n),
    .outYUV_read(MultiPixStream2AXIvideo_U0_outYUV_read),
    .m_axis_video_TDATA(MultiPixStream2AXIvideo_U0_m_axis_video_TDATA),
    .m_axis_video_TVALID(MultiPixStream2AXIvideo_U0_m_axis_video_TVALID),
    .m_axis_video_TREADY(m_axis_video_TREADY),
    .m_axis_video_TKEEP(MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP),
    .m_axis_video_TSTRB(MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB),
    .m_axis_video_TUSER(MultiPixStream2AXIvideo_U0_m_axis_video_TUSER),
    .m_axis_video_TLAST(MultiPixStream2AXIvideo_U0_m_axis_video_TLAST),
    .m_axis_video_TID(MultiPixStream2AXIvideo_U0_m_axis_video_TID),
    .m_axis_video_TDEST(MultiPixStream2AXIvideo_U0_m_axis_video_TDEST),
    .height(height),
    .width(width),
    .video_format(video_format)
);

bd_3a92_ltr_0_fifo_w24_d16_S srcYUV_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2MultiPixStream_U0_srcYUV_din),
    .if_full_n(srcYUV_full_n),
    .if_write(AXIvideo2MultiPixStream_U0_srcYUV_write),
    .if_dout(srcYUV_dout),
    .if_num_data_valid(srcYUV_num_data_valid),
    .if_fifo_cap(srcYUV_fifo_cap),
    .if_empty_n(srcYUV_empty_n),
    .if_read(v_letterbox_core_U0_srcYUV_read)
);

bd_3a92_ltr_0_fifo_w24_d16_S outYUV_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(v_letterbox_core_U0_outYUV_din),
    .if_full_n(outYUV_full_n),
    .if_write(v_letterbox_core_U0_outYUV_write),
    .if_dout(outYUV_dout),
    .if_num_data_valid(outYUV_num_data_valid),
    .if_fifo_cap(outYUV_fifo_cap),
    .if_empty_n(outYUV_empty_n),
    .if_read(MultiPixStream2AXIvideo_U0_outYUV_read)
);

bd_3a92_ltr_0_start_for_v_letterbox_core_U0 start_for_v_letterbox_core_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_v_letterbox_core_U0_din),
    .if_full_n(start_for_v_letterbox_core_U0_full_n),
    .if_write(AXIvideo2MultiPixStream_U0_start_write),
    .if_dout(start_for_v_letterbox_core_U0_dout),
    .if_empty_n(start_for_v_letterbox_core_U0_empty_n),
    .if_read(v_letterbox_core_U0_ap_ready)
);

bd_3a92_ltr_0_start_for_MultiPixStream2AXIvideo_U0 start_for_MultiPixStream2AXIvideo_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_MultiPixStream2AXIvideo_U0_din),
    .if_full_n(start_for_MultiPixStream2AXIvideo_U0_full_n),
    .if_write(v_letterbox_core_U0_start_write),
    .if_dout(start_for_MultiPixStream2AXIvideo_U0_dout),
    .if_empty_n(start_for_MultiPixStream2AXIvideo_U0_empty_n),
    .if_read(MultiPixStream2AXIvideo_U0_ap_ready)
);

assign AXIvideo2MultiPixStream_U0_ap_continue = 1'b1;

assign AXIvideo2MultiPixStream_U0_ap_start = ap_start;

assign MultiPixStream2AXIvideo_U0_ap_continue = 1'b1;

assign MultiPixStream2AXIvideo_U0_ap_start = start_for_MultiPixStream2AXIvideo_U0_empty_n;

assign ap_done = MultiPixStream2AXIvideo_U0_ap_done;

assign ap_idle = (v_letterbox_core_U0_ap_idle & MultiPixStream2AXIvideo_U0_ap_idle & AXIvideo2MultiPixStream_U0_ap_idle);

assign ap_ready = AXIvideo2MultiPixStream_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign m_axis_video_TDATA = MultiPixStream2AXIvideo_U0_m_axis_video_TDATA;

assign m_axis_video_TDEST = MultiPixStream2AXIvideo_U0_m_axis_video_TDEST;

assign m_axis_video_TID = MultiPixStream2AXIvideo_U0_m_axis_video_TID;

assign m_axis_video_TKEEP = MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP;

assign m_axis_video_TLAST = MultiPixStream2AXIvideo_U0_m_axis_video_TLAST;

assign m_axis_video_TSTRB = MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB;

assign m_axis_video_TUSER = MultiPixStream2AXIvideo_U0_m_axis_video_TUSER;

assign m_axis_video_TVALID = MultiPixStream2AXIvideo_U0_m_axis_video_TVALID;

assign s_axis_video_TREADY = AXIvideo2MultiPixStream_U0_s_axis_video_TREADY;

assign start_for_MultiPixStream2AXIvideo_U0_din = 1'b1;

assign start_for_v_letterbox_core_U0_din = 1'b1;

assign v_letterbox_core_U0_ap_continue = 1'b1;

assign v_letterbox_core_U0_ap_start = start_for_v_letterbox_core_U0_empty_n;


reg find_df_deadlock = 0;
// synthesis translate_off
`include "bd_3a92_ltr_0_hls_deadlock_detector.vh"
// synthesis translate_on

reg find_kernel_block = 0;
// synthesis translate_off
`include "bd_3a92_ltr_0_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //bd_3a92_ltr_0_v_letterbox

