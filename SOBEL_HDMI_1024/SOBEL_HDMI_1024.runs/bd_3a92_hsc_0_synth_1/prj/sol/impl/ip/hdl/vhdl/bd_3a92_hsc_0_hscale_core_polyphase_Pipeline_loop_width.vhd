-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_3a92_hsc_0_hscale_core_polyphase_Pipeline_loop_width is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stream_upsampled_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    stream_upsampled_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_upsampled_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_upsampled_empty_n : IN STD_LOGIC;
    stream_upsampled_read : OUT STD_LOGIC;
    stream_scaled_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_scaled_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_scaled_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_scaled_full_n : IN STD_LOGIC;
    stream_scaled_write : OUT STD_LOGIC;
    add_ln637 : IN STD_LOGIC_VECTOR (10 downto 0);
    zext_ln224 : IN STD_LOGIC_VECTOR (15 downto 0);
    phasesH_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    phasesH_ce0 : OUT STD_LOGIC;
    phasesH_q0 : IN STD_LOGIC_VECTOR (8 downto 0);
    FiltCoeff_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FiltCoeff_ce0 : OUT STD_LOGIC;
    FiltCoeff_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FiltCoeff_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FiltCoeff_1_ce0 : OUT STD_LOGIC;
    FiltCoeff_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FiltCoeff_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FiltCoeff_2_ce0 : OUT STD_LOGIC;
    FiltCoeff_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FiltCoeff_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FiltCoeff_3_ce0 : OUT STD_LOGIC;
    FiltCoeff_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FiltCoeff_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FiltCoeff_4_ce0 : OUT STD_LOGIC;
    FiltCoeff_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FiltCoeff_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FiltCoeff_5_ce0 : OUT STD_LOGIC;
    FiltCoeff_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    LoopSize : IN STD_LOGIC_VECTOR (10 downto 0);
    PixArray_val_V_5_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_5_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_5_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_4_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_4_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_4_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_3_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_3_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_3_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_20_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_20_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_20_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_19_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_19_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_19_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_18_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_18_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_18_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_17_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_17_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_17_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_16_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_16_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_16_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_15_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_15_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_15_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_14_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_14_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_14_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_13_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_13_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_13_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_12_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_12_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_12_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_11_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_11_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_11_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_10_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_10_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_10_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_9_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_9_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_9_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_8_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_8_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_8_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_7_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_7_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_7_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_6_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_6_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_6_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_5_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_5_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_5_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_4_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_4_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_4_1_out_o_ap_vld : OUT STD_LOGIC;
    PixArray_val_V_3_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_3_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    PixArray_val_V_3_1_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of bd_3a92_hsc_0_hscale_core_polyphase_Pipeline_loop_width is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv11_7FC : STD_LOGIC_VECTOR (10 downto 0) := "11111111100";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv17_4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter4 : BOOLEAN;
    signal icmp_ln663_reg_946 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln663_reg_946_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln676_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op135_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal icmp_ln715_reg_937 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op189_write_state22 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln653_fu_281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal stream_upsampled_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal stream_scaled_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln224_cast_fu_259_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal x_5_reg_927 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_5_reg_927_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal x_5_reg_927_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln715_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln715_reg_937_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xbySamples_fu_309_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal xbySamples_reg_941 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln663_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp29_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp29_reg_950 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp29_reg_950_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln676_fu_351_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln676_reg_969 : STD_LOGIC_VECTOR (16 downto 0);
    signal PhaseH_0_fu_360_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal PhaseH_0_reg_974 : STD_LOGIC_VECTOR (5 downto 0);
    signal PhaseH_0_reg_974_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal PhaseH_0_reg_974_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ArrayLoc_fu_363_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ArrayLoc_reg_979 : STD_LOGIC_VECTOR (1 downto 0);
    signal ArrayLoc_reg_979_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal ArrayLoc_reg_979_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln757_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln757_reg_984_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln676_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_hscale_polyphase_fu_220_ap_start : STD_LOGIC;
    signal grp_hscale_polyphase_fu_220_ap_done : STD_LOGIC;
    signal grp_hscale_polyphase_fu_220_ap_idle : STD_LOGIC;
    signal grp_hscale_polyphase_fu_220_ap_ready : STD_LOGIC;
    signal grp_hscale_polyphase_fu_220_ap_ce : STD_LOGIC;
    signal grp_hscale_polyphase_fu_220_FiltCoeff_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_hscale_polyphase_fu_220_FiltCoeff_0_ce0 : STD_LOGIC;
    signal grp_hscale_polyphase_fu_220_FiltCoeff_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_hscale_polyphase_fu_220_FiltCoeff_1_ce0 : STD_LOGIC;
    signal grp_hscale_polyphase_fu_220_FiltCoeff_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_hscale_polyphase_fu_220_FiltCoeff_2_ce0 : STD_LOGIC;
    signal grp_hscale_polyphase_fu_220_FiltCoeff_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_hscale_polyphase_fu_220_FiltCoeff_3_ce0 : STD_LOGIC;
    signal grp_hscale_polyphase_fu_220_FiltCoeff_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_hscale_polyphase_fu_220_FiltCoeff_4_ce0 : STD_LOGIC;
    signal grp_hscale_polyphase_fu_220_FiltCoeff_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_hscale_polyphase_fu_220_FiltCoeff_5_ce0 : STD_LOGIC;
    signal grp_hscale_polyphase_fu_220_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_hscale_polyphase_fu_220_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_hscale_polyphase_fu_220_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call32 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1_ignore_call32 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2_ignore_call32 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter3_ignore_call32 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter4_ignore_call32 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter5_ignore_call32 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call32 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call32 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call32 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call32 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call32 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call32 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call32 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call32 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call32 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call32 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16_ignore_call32 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17_ignore_call32 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18_ignore_call32 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19_ignore_call32 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20_ignore_call32 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21_ignore_call32 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp169 : BOOLEAN;
    signal grp_reg_ap_uint_9_s_fu_758_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_reg_ap_uint_9_s_fu_758_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call26 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1_ignore_call26 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2_ignore_call26 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter3_ignore_call26 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter4_ignore_call26 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter5_ignore_call26 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call26 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call26 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call26 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call26 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call26 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call26 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call26 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call26 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call26 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call26 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16_ignore_call26 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17_ignore_call26 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18_ignore_call26 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19_ignore_call26 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20_ignore_call26 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21_ignore_call26 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp147 : BOOLEAN;
    signal grp_hscale_polyphase_fu_220_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln722_fu_754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal PixArray_val_V_3_fu_712_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_2_fu_597_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_1_fu_590_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_fu_583_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln671_fu_499_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln671_1_fu_506_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln671_2_fu_513_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln671_3_fu_520_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln671_4_fu_527_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln671_5_fu_534_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln671_6_fu_541_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln671_7_fu_548_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln671_8_fu_555_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln671_9_fu_562_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln671_10_fu_569_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln671_11_fu_576_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_fu_164 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_6_fu_287_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_x_5 : STD_LOGIC_VECTOR (10 downto 0);
    signal xReadPos_fu_168 : STD_LOGIC_VECTOR (15 downto 0);
    signal xReadPos_2_fu_395_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ReadEn_fu_172 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln737_fu_385_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_17_fu_293_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_332_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln676_fu_347_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ReadEn_1_fu_379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xReadPos_1_fu_389_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_372_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln757_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter18_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter19_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter20_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component bd_3a92_hsc_0_hscale_polyphase IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        FiltCoeff_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_0_ce0 : OUT STD_LOGIC;
        FiltCoeff_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        FiltCoeff_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_1_ce0 : OUT STD_LOGIC;
        FiltCoeff_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        FiltCoeff_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_2_ce0 : OUT STD_LOGIC;
        FiltCoeff_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        FiltCoeff_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_3_ce0 : OUT STD_LOGIC;
        FiltCoeff_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        FiltCoeff_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_4_ce0 : OUT STD_LOGIC;
        FiltCoeff_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        FiltCoeff_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_5_ce0 : OUT STD_LOGIC;
        FiltCoeff_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read18 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read19 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read20 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read21 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read22 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read23 : IN STD_LOGIC_VECTOR (7 downto 0);
        PhasesH_0_read : IN STD_LOGIC_VECTOR (5 downto 0);
        p_read2425 : IN STD_LOGIC_VECTOR (1 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bd_3a92_hsc_0_reg_ap_uint_9_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        d : IN STD_LOGIC_VECTOR (8 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (8 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component bd_3a92_hsc_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    grp_hscale_polyphase_fu_220 : component bd_3a92_hsc_0_hscale_polyphase
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_hscale_polyphase_fu_220_ap_start,
        ap_done => grp_hscale_polyphase_fu_220_ap_done,
        ap_idle => grp_hscale_polyphase_fu_220_ap_idle,
        ap_ready => grp_hscale_polyphase_fu_220_ap_ready,
        ap_ce => grp_hscale_polyphase_fu_220_ap_ce,
        FiltCoeff_0_address0 => grp_hscale_polyphase_fu_220_FiltCoeff_0_address0,
        FiltCoeff_0_ce0 => grp_hscale_polyphase_fu_220_FiltCoeff_0_ce0,
        FiltCoeff_0_q0 => FiltCoeff_q0,
        FiltCoeff_1_address0 => grp_hscale_polyphase_fu_220_FiltCoeff_1_address0,
        FiltCoeff_1_ce0 => grp_hscale_polyphase_fu_220_FiltCoeff_1_ce0,
        FiltCoeff_1_q0 => FiltCoeff_1_q0,
        FiltCoeff_2_address0 => grp_hscale_polyphase_fu_220_FiltCoeff_2_address0,
        FiltCoeff_2_ce0 => grp_hscale_polyphase_fu_220_FiltCoeff_2_ce0,
        FiltCoeff_2_q0 => FiltCoeff_2_q0,
        FiltCoeff_3_address0 => grp_hscale_polyphase_fu_220_FiltCoeff_3_address0,
        FiltCoeff_3_ce0 => grp_hscale_polyphase_fu_220_FiltCoeff_3_ce0,
        FiltCoeff_3_q0 => FiltCoeff_3_q0,
        FiltCoeff_4_address0 => grp_hscale_polyphase_fu_220_FiltCoeff_4_address0,
        FiltCoeff_4_ce0 => grp_hscale_polyphase_fu_220_FiltCoeff_4_ce0,
        FiltCoeff_4_q0 => FiltCoeff_4_q0,
        FiltCoeff_5_address0 => grp_hscale_polyphase_fu_220_FiltCoeff_5_address0,
        FiltCoeff_5_ce0 => grp_hscale_polyphase_fu_220_FiltCoeff_5_ce0,
        FiltCoeff_5_q0 => FiltCoeff_5_q0,
        p_read3 => PixArray_val_V_3_1_out_i,
        p_read4 => PixArray_val_V_4_1_out_i,
        p_read5 => PixArray_val_V_5_1_out_i,
        p_read6 => PixArray_val_V_6_1_out_i,
        p_read7 => PixArray_val_V_7_1_out_i,
        p_read8 => PixArray_val_V_8_1_out_i,
        p_read9 => PixArray_val_V_9_1_out_i,
        p_read10 => PixArray_val_V_10_1_out_i,
        p_read11 => PixArray_val_V_11_1_out_i,
        p_read12 => PixArray_val_V_12_1_out_i,
        p_read13 => PixArray_val_V_13_1_out_i,
        p_read14 => PixArray_val_V_14_1_out_i,
        p_read15 => PixArray_val_V_15_1_out_i,
        p_read16 => PixArray_val_V_16_1_out_i,
        p_read17 => PixArray_val_V_17_1_out_i,
        p_read18 => PixArray_val_V_18_1_out_i,
        p_read19 => PixArray_val_V_19_1_out_i,
        p_read20 => PixArray_val_V_20_1_out_i,
        p_read21 => PixArray_val_V_3_out_i,
        p_read22 => PixArray_val_V_4_out_i,
        p_read23 => PixArray_val_V_5_out_i,
        PhasesH_0_read => PhaseH_0_reg_974_pp0_iter5_reg,
        p_read2425 => ArrayLoc_reg_979_pp0_iter5_reg,
        ap_return_0 => grp_hscale_polyphase_fu_220_ap_return_0,
        ap_return_1 => grp_hscale_polyphase_fu_220_ap_return_1,
        ap_return_2 => grp_hscale_polyphase_fu_220_ap_return_2);

    grp_reg_ap_uint_9_s_fu_758 : component bd_3a92_hsc_0_reg_ap_uint_9_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        d => phasesH_q0,
        ap_return => grp_reg_ap_uint_9_s_fu_758_ap_return,
        ap_ce => grp_reg_ap_uint_9_s_fu_758_ap_ce);

    flow_control_loop_pipe_sequential_init_U : component bd_3a92_hsc_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter20_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_hscale_polyphase_fu_220_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_hscale_polyphase_fu_220_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln715_reg_937_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_hscale_polyphase_fu_220_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hscale_polyphase_fu_220_ap_ready = ap_const_logic_1)) then 
                    grp_hscale_polyphase_fu_220_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ReadEn_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ReadEn_fu_172(0) <= '1';
                elsif (((icmp_ln715_reg_937_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                                        ReadEn_fu_172(0) <= zext_ln737_fu_385_p1(0);
                end if;
            end if; 
        end if;
    end process;

    xReadPos_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    xReadPos_fu_168 <= ap_const_lv16_0;
                elsif (((icmp_ln715_reg_937_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                    xReadPos_fu_168 <= xReadPos_2_fu_395_p3;
                end if;
            end if; 
        end if;
    end process;

    x_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln653_fu_281_p2 = ap_const_lv1_0))) then 
                    x_fu_164 <= x_6_fu_287_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_164 <= ap_const_lv11_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln715_reg_937_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ArrayLoc_reg_979 <= grp_reg_ap_uint_9_s_fu_758_ap_return(7 downto 6);
                PhaseH_0_reg_974 <= PhaseH_0_fu_360_p1;
                and_ln757_reg_984 <= and_ln757_fu_407_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ArrayLoc_reg_979_pp0_iter4_reg <= ArrayLoc_reg_979;
                ArrayLoc_reg_979_pp0_iter5_reg <= ArrayLoc_reg_979_pp0_iter4_reg;
                PhaseH_0_reg_974_pp0_iter4_reg <= PhaseH_0_reg_974;
                PhaseH_0_reg_974_pp0_iter5_reg <= PhaseH_0_reg_974_pp0_iter4_reg;
                and_ln757_reg_984_pp0_iter10_reg <= and_ln757_reg_984_pp0_iter9_reg;
                and_ln757_reg_984_pp0_iter11_reg <= and_ln757_reg_984_pp0_iter10_reg;
                and_ln757_reg_984_pp0_iter12_reg <= and_ln757_reg_984_pp0_iter11_reg;
                and_ln757_reg_984_pp0_iter13_reg <= and_ln757_reg_984_pp0_iter12_reg;
                and_ln757_reg_984_pp0_iter14_reg <= and_ln757_reg_984_pp0_iter13_reg;
                and_ln757_reg_984_pp0_iter15_reg <= and_ln757_reg_984_pp0_iter14_reg;
                and_ln757_reg_984_pp0_iter16_reg <= and_ln757_reg_984_pp0_iter15_reg;
                and_ln757_reg_984_pp0_iter17_reg <= and_ln757_reg_984_pp0_iter16_reg;
                and_ln757_reg_984_pp0_iter18_reg <= and_ln757_reg_984_pp0_iter17_reg;
                and_ln757_reg_984_pp0_iter19_reg <= and_ln757_reg_984_pp0_iter18_reg;
                and_ln757_reg_984_pp0_iter20_reg <= and_ln757_reg_984_pp0_iter19_reg;
                and_ln757_reg_984_pp0_iter4_reg <= and_ln757_reg_984;
                and_ln757_reg_984_pp0_iter5_reg <= and_ln757_reg_984_pp0_iter4_reg;
                and_ln757_reg_984_pp0_iter6_reg <= and_ln757_reg_984_pp0_iter5_reg;
                and_ln757_reg_984_pp0_iter7_reg <= and_ln757_reg_984_pp0_iter6_reg;
                and_ln757_reg_984_pp0_iter8_reg <= and_ln757_reg_984_pp0_iter7_reg;
                and_ln757_reg_984_pp0_iter9_reg <= and_ln757_reg_984_pp0_iter8_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
                ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
                ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
                ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                icmp29_reg_950_pp0_iter4_reg <= icmp29_reg_950;
                icmp_ln663_reg_946 <= icmp_ln663_fu_323_p2;
                icmp_ln663_reg_946_pp0_iter4_reg <= icmp_ln663_reg_946;
                icmp_ln715_reg_937_pp0_iter10_reg <= icmp_ln715_reg_937_pp0_iter9_reg;
                icmp_ln715_reg_937_pp0_iter11_reg <= icmp_ln715_reg_937_pp0_iter10_reg;
                icmp_ln715_reg_937_pp0_iter12_reg <= icmp_ln715_reg_937_pp0_iter11_reg;
                icmp_ln715_reg_937_pp0_iter13_reg <= icmp_ln715_reg_937_pp0_iter12_reg;
                icmp_ln715_reg_937_pp0_iter14_reg <= icmp_ln715_reg_937_pp0_iter13_reg;
                icmp_ln715_reg_937_pp0_iter15_reg <= icmp_ln715_reg_937_pp0_iter14_reg;
                icmp_ln715_reg_937_pp0_iter16_reg <= icmp_ln715_reg_937_pp0_iter15_reg;
                icmp_ln715_reg_937_pp0_iter17_reg <= icmp_ln715_reg_937_pp0_iter16_reg;
                icmp_ln715_reg_937_pp0_iter18_reg <= icmp_ln715_reg_937_pp0_iter17_reg;
                icmp_ln715_reg_937_pp0_iter19_reg <= icmp_ln715_reg_937_pp0_iter18_reg;
                icmp_ln715_reg_937_pp0_iter20_reg <= icmp_ln715_reg_937_pp0_iter19_reg;
                icmp_ln715_reg_937_pp0_iter2_reg <= icmp_ln715_reg_937_pp0_iter1_reg;
                icmp_ln715_reg_937_pp0_iter3_reg <= icmp_ln715_reg_937_pp0_iter2_reg;
                icmp_ln715_reg_937_pp0_iter4_reg <= icmp_ln715_reg_937_pp0_iter3_reg;
                icmp_ln715_reg_937_pp0_iter5_reg <= icmp_ln715_reg_937_pp0_iter4_reg;
                icmp_ln715_reg_937_pp0_iter6_reg <= icmp_ln715_reg_937_pp0_iter5_reg;
                icmp_ln715_reg_937_pp0_iter7_reg <= icmp_ln715_reg_937_pp0_iter6_reg;
                icmp_ln715_reg_937_pp0_iter8_reg <= icmp_ln715_reg_937_pp0_iter7_reg;
                icmp_ln715_reg_937_pp0_iter9_reg <= icmp_ln715_reg_937_pp0_iter8_reg;
                x_5_reg_927_pp0_iter2_reg <= x_5_reg_927_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln663_fu_323_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln676_reg_969 <= add_ln676_fu_351_p2;
                icmp29_reg_950 <= icmp29_fu_341_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln715_reg_937_pp0_iter1_reg <= icmp_ln715_reg_937;
                x_5_reg_927 <= ap_sig_allocacmp_x_5;
                x_5_reg_927_pp0_iter1_reg <= x_5_reg_927;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946 = ap_const_lv1_0))) then
                icmp_ln676_reg_988 <= icmp_ln676_fu_423_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln653_fu_281_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln715_reg_937 <= icmp_ln715_fu_303_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln715_fu_303_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln653_fu_281_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                xbySamples_reg_941 <= xbySamples_fu_309_p2;
            end if;
        end if;
    end process;
    ReadEn_fu_172(31 downto 1) <= "0000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ArrayLoc_fu_363_p4 <= grp_reg_ap_uint_9_s_fu_758_ap_return(7 downto 6);
    FiltCoeff_1_address0 <= grp_hscale_polyphase_fu_220_FiltCoeff_1_address0;
    FiltCoeff_1_ce0 <= grp_hscale_polyphase_fu_220_FiltCoeff_1_ce0;
    FiltCoeff_2_address0 <= grp_hscale_polyphase_fu_220_FiltCoeff_2_address0;
    FiltCoeff_2_ce0 <= grp_hscale_polyphase_fu_220_FiltCoeff_2_ce0;
    FiltCoeff_3_address0 <= grp_hscale_polyphase_fu_220_FiltCoeff_3_address0;
    FiltCoeff_3_ce0 <= grp_hscale_polyphase_fu_220_FiltCoeff_3_ce0;
    FiltCoeff_4_address0 <= grp_hscale_polyphase_fu_220_FiltCoeff_4_address0;
    FiltCoeff_4_ce0 <= grp_hscale_polyphase_fu_220_FiltCoeff_4_ce0;
    FiltCoeff_5_address0 <= grp_hscale_polyphase_fu_220_FiltCoeff_5_address0;
    FiltCoeff_5_ce0 <= grp_hscale_polyphase_fu_220_FiltCoeff_5_ce0;
    FiltCoeff_address0 <= grp_hscale_polyphase_fu_220_FiltCoeff_0_address0;
    FiltCoeff_ce0 <= grp_hscale_polyphase_fu_220_FiltCoeff_0_ce0;
    PhaseH_0_fu_360_p1 <= grp_reg_ap_uint_9_s_fu_758_ap_return(6 - 1 downto 0);

    PixArray_val_V_10_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_10_1_out_i, ap_block_pp0_stage0, select_ln671_4_fu_527_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_10_1_out_o <= select_ln671_4_fu_527_p3;
        else 
            PixArray_val_V_10_1_out_o <= PixArray_val_V_10_1_out_i;
        end if; 
    end process;


    PixArray_val_V_10_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_10_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_10_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_11_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_11_1_out_i, ap_block_pp0_stage0, select_ln671_3_fu_520_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_11_1_out_o <= select_ln671_3_fu_520_p3;
        else 
            PixArray_val_V_11_1_out_o <= PixArray_val_V_11_1_out_i;
        end if; 
    end process;


    PixArray_val_V_11_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_11_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_11_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_12_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_12_1_out_i, ap_block_pp0_stage0, select_ln671_2_fu_513_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_12_1_out_o <= select_ln671_2_fu_513_p3;
        else 
            PixArray_val_V_12_1_out_o <= PixArray_val_V_12_1_out_i;
        end if; 
    end process;


    PixArray_val_V_12_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_12_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_12_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_13_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_13_1_out_i, ap_block_pp0_stage0, select_ln671_1_fu_506_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_13_1_out_o <= select_ln671_1_fu_506_p3;
        else 
            PixArray_val_V_13_1_out_o <= PixArray_val_V_13_1_out_i;
        end if; 
    end process;


    PixArray_val_V_13_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_13_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_13_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_14_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_14_1_out_i, ap_block_pp0_stage0, select_ln671_fu_499_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_14_1_out_o <= select_ln671_fu_499_p3;
        else 
            PixArray_val_V_14_1_out_o <= PixArray_val_V_14_1_out_i;
        end if; 
    end process;


    PixArray_val_V_14_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_14_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_14_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_15_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_15_1_out_i, ap_block_pp0_stage0, PixArray_val_V_fu_583_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_15_1_out_o <= PixArray_val_V_fu_583_p3;
        else 
            PixArray_val_V_15_1_out_o <= PixArray_val_V_15_1_out_i;
        end if; 
    end process;


    PixArray_val_V_15_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_15_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_15_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_16_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_16_1_out_i, ap_block_pp0_stage0, PixArray_val_V_1_fu_590_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_16_1_out_o <= PixArray_val_V_1_fu_590_p3;
        else 
            PixArray_val_V_16_1_out_o <= PixArray_val_V_16_1_out_i;
        end if; 
    end process;


    PixArray_val_V_16_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_16_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_16_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_17_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_17_1_out_i, ap_block_pp0_stage0, PixArray_val_V_2_fu_597_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_17_1_out_o <= PixArray_val_V_2_fu_597_p3;
        else 
            PixArray_val_V_17_1_out_o <= PixArray_val_V_17_1_out_i;
        end if; 
    end process;


    PixArray_val_V_17_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_17_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_17_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_18_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_3_out_i, PixArray_val_V_18_1_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_18_1_out_o <= PixArray_val_V_3_out_i;
        else 
            PixArray_val_V_18_1_out_o <= PixArray_val_V_18_1_out_i;
        end if; 
    end process;


    PixArray_val_V_18_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_18_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_18_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_19_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_4_out_i, PixArray_val_V_19_1_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_19_1_out_o <= PixArray_val_V_4_out_i;
        else 
            PixArray_val_V_19_1_out_o <= PixArray_val_V_19_1_out_i;
        end if; 
    end process;


    PixArray_val_V_19_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_19_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_19_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    PixArray_val_V_1_fu_590_p3 <= 
        PixArray_val_V_4_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_19_1_out_i;

    PixArray_val_V_20_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_5_out_i, PixArray_val_V_20_1_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_20_1_out_o <= PixArray_val_V_5_out_i;
        else 
            PixArray_val_V_20_1_out_o <= PixArray_val_V_20_1_out_i;
        end if; 
    end process;


    PixArray_val_V_20_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_20_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_20_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    PixArray_val_V_2_fu_597_p3 <= 
        PixArray_val_V_5_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_20_1_out_i;

    PixArray_val_V_3_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_3_1_out_i, ap_block_pp0_stage0, select_ln671_11_fu_576_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_3_1_out_o <= select_ln671_11_fu_576_p3;
        else 
            PixArray_val_V_3_1_out_o <= PixArray_val_V_3_1_out_i;
        end if; 
    end process;


    PixArray_val_V_3_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_3_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_3_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    PixArray_val_V_3_fu_712_p1 <= stream_upsampled_dout(8 - 1 downto 0);

    PixArray_val_V_3_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, icmp_ln676_reg_988, PixArray_val_V_3_out_i, ap_block_pp0_stage0, PixArray_val_V_3_fu_712_p1)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln676_reg_988 = ap_const_lv1_1) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_3_out_o <= PixArray_val_V_3_fu_712_p1;
        else 
            PixArray_val_V_3_out_o <= PixArray_val_V_3_out_i;
        end if; 
    end process;


    PixArray_val_V_3_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, icmp_ln676_reg_988, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln676_reg_988 = ap_const_lv1_1) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_3_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_3_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_4_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_4_1_out_i, ap_block_pp0_stage0, select_ln671_10_fu_569_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_4_1_out_o <= select_ln671_10_fu_569_p3;
        else 
            PixArray_val_V_4_1_out_o <= PixArray_val_V_4_1_out_i;
        end if; 
    end process;


    PixArray_val_V_4_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_4_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_4_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_4_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, stream_upsampled_dout, icmp_ln663_reg_946_pp0_iter4_reg, icmp_ln676_reg_988, PixArray_val_V_4_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln676_reg_988 = ap_const_lv1_1) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_4_out_o <= stream_upsampled_dout(15 downto 8);
        else 
            PixArray_val_V_4_out_o <= PixArray_val_V_4_out_i;
        end if; 
    end process;


    PixArray_val_V_4_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, icmp_ln676_reg_988, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln676_reg_988 = ap_const_lv1_1) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_4_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_4_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_5_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_5_1_out_i, ap_block_pp0_stage0, select_ln671_9_fu_562_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_5_1_out_o <= select_ln671_9_fu_562_p3;
        else 
            PixArray_val_V_5_1_out_o <= PixArray_val_V_5_1_out_i;
        end if; 
    end process;


    PixArray_val_V_5_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_5_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_5_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_5_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, stream_upsampled_dout, icmp_ln663_reg_946_pp0_iter4_reg, icmp_ln676_reg_988, PixArray_val_V_5_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln676_reg_988 = ap_const_lv1_1) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_5_out_o <= stream_upsampled_dout(23 downto 16);
        else 
            PixArray_val_V_5_out_o <= PixArray_val_V_5_out_i;
        end if; 
    end process;


    PixArray_val_V_5_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, icmp_ln676_reg_988, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln676_reg_988 = ap_const_lv1_1) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_5_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_5_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_6_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_6_1_out_i, ap_block_pp0_stage0, select_ln671_8_fu_555_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_6_1_out_o <= select_ln671_8_fu_555_p3;
        else 
            PixArray_val_V_6_1_out_o <= PixArray_val_V_6_1_out_i;
        end if; 
    end process;


    PixArray_val_V_6_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_6_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_6_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_7_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_7_1_out_i, ap_block_pp0_stage0, select_ln671_7_fu_548_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_7_1_out_o <= select_ln671_7_fu_548_p3;
        else 
            PixArray_val_V_7_1_out_o <= PixArray_val_V_7_1_out_i;
        end if; 
    end process;


    PixArray_val_V_7_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_7_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_7_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_8_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_8_1_out_i, ap_block_pp0_stage0, select_ln671_6_fu_541_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_8_1_out_o <= select_ln671_6_fu_541_p3;
        else 
            PixArray_val_V_8_1_out_o <= PixArray_val_V_8_1_out_i;
        end if; 
    end process;


    PixArray_val_V_8_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_8_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_8_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    PixArray_val_V_9_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, PixArray_val_V_9_1_out_i, ap_block_pp0_stage0, select_ln671_5_fu_534_p3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_9_1_out_o <= select_ln671_5_fu_534_p3;
        else 
            PixArray_val_V_9_1_out_o <= PixArray_val_V_9_1_out_i;
        end if; 
    end process;


    PixArray_val_V_9_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln663_reg_946_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0))) then 
            PixArray_val_V_9_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            PixArray_val_V_9_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    PixArray_val_V_fu_583_p3 <= 
        PixArray_val_V_3_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_18_1_out_i;
    ReadEn_1_fu_379_p2 <= "0" when (ArrayLoc_fu_363_p4 = ap_const_lv2_0) else "1";
    add_ln676_fu_351_p2 <= std_logic_vector(unsigned(zext_ln676_fu_347_p1) + unsigned(ap_const_lv17_4));
    and_ln757_fu_407_p2 <= (p_Result_s_fu_372_p3 and icmp_ln757_fu_403_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter21, stream_upsampled_empty_n, ap_predicate_op135_read_state4, stream_scaled_full_n, ap_predicate_op189_write_state22)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_predicate_op189_write_state22 = ap_const_boolean_1) and (stream_scaled_full_n = ap_const_logic_0)) or ((stream_upsampled_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_predicate_op135_read_state4 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter21, stream_upsampled_empty_n, ap_predicate_op135_read_state4, stream_scaled_full_n, ap_predicate_op189_write_state22)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_predicate_op189_write_state22 = ap_const_boolean_1) and (stream_scaled_full_n = ap_const_logic_0)) or ((stream_upsampled_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_predicate_op135_read_state4 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp147_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter21, stream_upsampled_empty_n, ap_predicate_op135_read_state4, stream_scaled_full_n, ap_predicate_op189_write_state22)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp147 <= (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_predicate_op189_write_state22 = ap_const_boolean_1) and (stream_scaled_full_n = ap_const_logic_0)) or ((stream_upsampled_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_predicate_op135_read_state4 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp169_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter21, stream_upsampled_empty_n, ap_predicate_op135_read_state4, stream_scaled_full_n, ap_predicate_op189_write_state22)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp169 <= (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_predicate_op189_write_state22 = ap_const_boolean_1) and (stream_scaled_full_n = ap_const_logic_0)) or ((stream_upsampled_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_predicate_op135_read_state4 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter21, stream_upsampled_empty_n, ap_predicate_op135_read_state4, stream_scaled_full_n, ap_predicate_op189_write_state22)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_predicate_op189_write_state22 = ap_const_boolean_1) and (stream_scaled_full_n = ap_const_logic_0)) or ((stream_upsampled_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_predicate_op135_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state22_pp0_stage0_iter21_assign_proc : process(stream_scaled_full_n, ap_predicate_op189_write_state22)
    begin
                ap_block_state22_pp0_stage0_iter21 <= ((ap_predicate_op189_write_state22 = ap_const_boolean_1) and (stream_scaled_full_n = ap_const_logic_0));
    end process;


    ap_block_state22_pp0_stage0_iter21_ignore_call26_assign_proc : process(stream_scaled_full_n, ap_predicate_op189_write_state22)
    begin
                ap_block_state22_pp0_stage0_iter21_ignore_call26 <= ((ap_predicate_op189_write_state22 = ap_const_boolean_1) and (stream_scaled_full_n = ap_const_logic_0));
    end process;


    ap_block_state22_pp0_stage0_iter21_ignore_call32_assign_proc : process(stream_scaled_full_n, ap_predicate_op189_write_state22)
    begin
                ap_block_state22_pp0_stage0_iter21_ignore_call32 <= ((ap_predicate_op189_write_state22 = ap_const_boolean_1) and (stream_scaled_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter3_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter3_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter4_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter4_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter5_assign_proc : process(stream_upsampled_empty_n, ap_predicate_op135_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter5 <= ((stream_upsampled_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state4 = ap_const_boolean_1));
    end process;


    ap_block_state4_pp0_stage0_iter5_ignore_call26_assign_proc : process(stream_upsampled_empty_n, ap_predicate_op135_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter5_ignore_call26 <= ((stream_upsampled_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state4 = ap_const_boolean_1));
    end process;


    ap_block_state4_pp0_stage0_iter5_ignore_call32_assign_proc : process(stream_upsampled_empty_n, ap_predicate_op135_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter5_ignore_call32 <= ((stream_upsampled_empty_n = ap_const_logic_0) and (ap_predicate_op135_read_state4 = ap_const_boolean_1));
    end process;

        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln653_fu_281_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln653_fu_281_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter20_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter20_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21)
    begin
        if (((ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op135_read_state4_assign_proc : process(icmp_ln663_reg_946_pp0_iter4_reg, icmp_ln676_reg_988)
    begin
                ap_predicate_op135_read_state4 <= ((icmp_ln676_reg_988 = ap_const_lv1_1) and (icmp_ln663_reg_946_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op189_write_state22_assign_proc : process(icmp_ln715_reg_937_pp0_iter20_reg, and_ln757_reg_984_pp0_iter20_reg)
    begin
                ap_predicate_op189_write_state22 <= ((icmp_ln715_reg_937_pp0_iter20_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln757_reg_984_pp0_iter20_reg));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_x_5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_fu_164, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_x_5 <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_x_5 <= x_fu_164;
        end if; 
    end process;


    grp_hscale_polyphase_fu_220_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp169)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp169))) then 
            grp_hscale_polyphase_fu_220_ap_ce <= ap_const_logic_1;
        else 
            grp_hscale_polyphase_fu_220_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_hscale_polyphase_fu_220_ap_start <= grp_hscale_polyphase_fu_220_ap_start_reg;

    grp_reg_ap_uint_9_s_fu_758_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp147)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp147))) then 
            grp_reg_ap_uint_9_s_fu_758_ap_ce <= ap_const_logic_1;
        else 
            grp_reg_ap_uint_9_s_fu_758_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp29_fu_341_p2 <= "1" when (tmp_fu_332_p4 = ap_const_lv10_0) else "0";
    icmp_ln653_fu_281_p2 <= "1" when (ap_sig_allocacmp_x_5 = add_ln637) else "0";
    icmp_ln663_fu_323_p2 <= "1" when (ReadEn_fu_172 = ap_const_lv32_0) else "0";
    icmp_ln676_fu_423_p2 <= "1" when (unsigned(zext_ln224_cast_fu_259_p1) > unsigned(add_ln676_reg_969)) else "0";
    icmp_ln715_fu_303_p2 <= "1" when (tmp_17_fu_293_p4 = ap_const_lv9_0) else "0";
    icmp_ln757_fu_403_p2 <= "1" when (unsigned(x_5_reg_927_pp0_iter2_reg) < unsigned(LoopSize)) else "0";
    p_Result_s_fu_372_p3 <= grp_reg_ap_uint_9_s_fu_758_ap_return(8 downto 8);
    phasesH_address0 <= zext_ln722_fu_754_p1(11 - 1 downto 0);

    phasesH_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            phasesH_ce0 <= ap_const_logic_1;
        else 
            phasesH_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln671_10_fu_569_p3 <= 
        PixArray_val_V_4_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_7_1_out_i;
    select_ln671_11_fu_576_p3 <= 
        PixArray_val_V_3_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_6_1_out_i;
    select_ln671_1_fu_506_p3 <= 
        PixArray_val_V_4_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_16_1_out_i;
    select_ln671_2_fu_513_p3 <= 
        PixArray_val_V_3_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_15_1_out_i;
    select_ln671_3_fu_520_p3 <= 
        PixArray_val_V_5_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_14_1_out_i;
    select_ln671_4_fu_527_p3 <= 
        PixArray_val_V_4_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_13_1_out_i;
    select_ln671_5_fu_534_p3 <= 
        PixArray_val_V_3_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_12_1_out_i;
    select_ln671_6_fu_541_p3 <= 
        PixArray_val_V_5_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_11_1_out_i;
    select_ln671_7_fu_548_p3 <= 
        PixArray_val_V_4_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_10_1_out_i;
    select_ln671_8_fu_555_p3 <= 
        PixArray_val_V_3_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_9_1_out_i;
    select_ln671_9_fu_562_p3 <= 
        PixArray_val_V_5_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_8_1_out_i;
    select_ln671_fu_499_p3 <= 
        PixArray_val_V_5_out_i when (icmp29_reg_950_pp0_iter4_reg(0) = '1') else 
        PixArray_val_V_17_1_out_i;

    stream_scaled_blk_n_assign_proc : process(ap_enable_reg_pp0_iter21, stream_scaled_full_n, ap_predicate_op189_write_state22, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op189_write_state22 = ap_const_boolean_1))) then 
            stream_scaled_blk_n <= stream_scaled_full_n;
        else 
            stream_scaled_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_scaled_din <= ((grp_hscale_polyphase_fu_220_ap_return_2 & grp_hscale_polyphase_fu_220_ap_return_1) & grp_hscale_polyphase_fu_220_ap_return_0);

    stream_scaled_write_assign_proc : process(ap_enable_reg_pp0_iter21, ap_predicate_op189_write_state22, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op189_write_state22 = ap_const_boolean_1))) then 
            stream_scaled_write <= ap_const_logic_1;
        else 
            stream_scaled_write <= ap_const_logic_0;
        end if; 
    end process;


    stream_upsampled_blk_n_assign_proc : process(ap_enable_reg_pp0_iter5, stream_upsampled_empty_n, ap_predicate_op135_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op135_read_state4 = ap_const_boolean_1))) then 
            stream_upsampled_blk_n <= stream_upsampled_empty_n;
        else 
            stream_upsampled_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_upsampled_read_assign_proc : process(ap_enable_reg_pp0_iter5, ap_predicate_op135_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op135_read_state4 = ap_const_boolean_1))) then 
            stream_upsampled_read <= ap_const_logic_1;
        else 
            stream_upsampled_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_17_fu_293_p4 <= ap_sig_allocacmp_x_5(10 downto 2);
    tmp_fu_332_p4 <= x_5_reg_927_pp0_iter2_reg(10 downto 1);
    xReadPos_1_fu_389_p2 <= std_logic_vector(unsigned(xReadPos_fu_168) + unsigned(ap_const_lv16_1));
    xReadPos_2_fu_395_p3 <= 
        xReadPos_1_fu_389_p2 when (ReadEn_1_fu_379_p2(0) = '1') else 
        xReadPos_fu_168;
    x_6_fu_287_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x_5) + unsigned(ap_const_lv11_1));
    xbySamples_fu_309_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x_5) + unsigned(ap_const_lv11_7FC));
    zext_ln224_cast_fu_259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln224),17));
    zext_ln676_fu_347_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xReadPos_fu_168),17));
    zext_ln722_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xbySamples_reg_941),64));
    zext_ln737_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ReadEn_1_fu_379_p2),32));
end behav;
