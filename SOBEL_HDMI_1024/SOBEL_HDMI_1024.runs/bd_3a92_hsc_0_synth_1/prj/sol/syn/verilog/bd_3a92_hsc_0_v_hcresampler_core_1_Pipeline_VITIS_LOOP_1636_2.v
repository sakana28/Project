// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_3a92_hsc_0_v_hcresampler_core_1_Pipeline_VITIS_LOOP_1636_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_scaled_dout,
        stream_scaled_num_data_valid,
        stream_scaled_fifo_cap,
        stream_scaled_empty_n,
        stream_scaled_read,
        stream_out_422_din,
        stream_out_422_num_data_valid,
        stream_out_422_fifo_cap,
        stream_out_422_full_n,
        stream_out_422_write,
        pixbuf_y_val_V_4,
        pixbuf_y_val_V_3,
        pixbuf_y_val_V_2,
        pixbuf_y_val_V,
        p_0_0_0_0_0_21061_lcssa1087,
        p_0_0_0_0_0511_21058_lcssa1084,
        p_0_1_0_0_01021_lcssa1046,
        p_0_1_0_0_01017_lcssa1043,
        p_0_0_0_0_05191015_lcssa1040,
        loopWidth,
        conv263_cast_cast_cast_cast,
        select_ln1632,
        WidthOut_load,
        p_read,
        pixbuf_y_val_V_9_out,
        pixbuf_y_val_V_9_out_ap_vld,
        pixbuf_y_val_V_8_out,
        pixbuf_y_val_V_8_out_ap_vld,
        pixbuf_y_val_V_7_out,
        pixbuf_y_val_V_7_out_ap_vld,
        pixbuf_y_val_V_6_out_i,
        pixbuf_y_val_V_6_out_o,
        pixbuf_y_val_V_6_out_o_ap_vld,
        pixbuf_y_val_V_5_out,
        pixbuf_y_val_V_5_out_ap_vld,
        p_0_0_0_0_0_21063_out,
        p_0_0_0_0_0_21063_out_ap_vld,
        p_0_0_0_0_0511_21060_out,
        p_0_0_0_0_0511_21060_out_ap_vld,
        p_out_i,
        p_out_o,
        p_out_o_ap_vld,
        p_out1_i,
        p_out1_o,
        p_out1_o_ap_vld,
        p_out2_i,
        p_out2_o,
        p_out2_o_ap_vld,
        p_out3_i,
        p_out3_o,
        p_out3_o_ap_vld,
        p_0_2_0_0_01014_out_i,
        p_0_2_0_0_01014_out_o,
        p_0_2_0_0_01014_out_o_ap_vld,
        p_0_1_0_0_01012_out_i,
        p_0_1_0_0_01012_out_o,
        p_0_1_0_0_01012_out_o_ap_vld,
        p_0_0_0_0_05191010_out_i,
        p_0_0_0_0_05191010_out_o,
        p_0_0_0_0_05191010_out_o_ap_vld,
        filt_res1_1_out_i,
        filt_res1_1_out_o,
        filt_res1_1_out_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] stream_scaled_dout;
input  [4:0] stream_scaled_num_data_valid;
input  [4:0] stream_scaled_fifo_cap;
input   stream_scaled_empty_n;
output   stream_scaled_read;
output  [23:0] stream_out_422_din;
input  [4:0] stream_out_422_num_data_valid;
input  [4:0] stream_out_422_fifo_cap;
input   stream_out_422_full_n;
output   stream_out_422_write;
input  [7:0] pixbuf_y_val_V_4;
input  [7:0] pixbuf_y_val_V_3;
input  [7:0] pixbuf_y_val_V_2;
input  [7:0] pixbuf_y_val_V;
input  [7:0] p_0_0_0_0_0_21061_lcssa1087;
input  [7:0] p_0_0_0_0_0511_21058_lcssa1084;
input  [7:0] p_0_1_0_0_01021_lcssa1046;
input  [7:0] p_0_1_0_0_01017_lcssa1043;
input  [7:0] p_0_0_0_0_05191015_lcssa1040;
input  [14:0] loopWidth;
input  [0:0] conv263_cast_cast_cast_cast;
input  [1:0] select_ln1632;
input  [15:0] WidthOut_load;
input  [0:0] p_read;
output  [7:0] pixbuf_y_val_V_9_out;
output   pixbuf_y_val_V_9_out_ap_vld;
output  [7:0] pixbuf_y_val_V_8_out;
output   pixbuf_y_val_V_8_out_ap_vld;
output  [7:0] pixbuf_y_val_V_7_out;
output   pixbuf_y_val_V_7_out_ap_vld;
input  [7:0] pixbuf_y_val_V_6_out_i;
output  [7:0] pixbuf_y_val_V_6_out_o;
output   pixbuf_y_val_V_6_out_o_ap_vld;
output  [7:0] pixbuf_y_val_V_5_out;
output   pixbuf_y_val_V_5_out_ap_vld;
output  [7:0] p_0_0_0_0_0_21063_out;
output   p_0_0_0_0_0_21063_out_ap_vld;
output  [7:0] p_0_0_0_0_0511_21060_out;
output   p_0_0_0_0_0511_21060_out_ap_vld;
input  [7:0] p_out_i;
output  [7:0] p_out_o;
output   p_out_o_ap_vld;
input  [7:0] p_out1_i;
output  [7:0] p_out1_o;
output   p_out1_o_ap_vld;
input  [7:0] p_out2_i;
output  [7:0] p_out2_o;
output   p_out2_o_ap_vld;
input  [7:0] p_out3_i;
output  [7:0] p_out3_o;
output   p_out3_o_ap_vld;
input  [7:0] p_0_2_0_0_01014_out_i;
output  [7:0] p_0_2_0_0_01014_out_o;
output   p_0_2_0_0_01014_out_o_ap_vld;
input  [7:0] p_0_1_0_0_01012_out_i;
output  [7:0] p_0_1_0_0_01012_out_o;
output   p_0_1_0_0_01012_out_o_ap_vld;
input  [7:0] p_0_0_0_0_05191010_out_i;
output  [7:0] p_0_0_0_0_05191010_out_o;
output   p_0_0_0_0_05191010_out_o_ap_vld;
input  [63:0] filt_res1_1_out_i;
output  [63:0] filt_res1_1_out_o;
output   filt_res1_1_out_o_ap_vld;

reg ap_idle;
reg stream_scaled_read;
reg[23:0] stream_out_422_din;
reg stream_out_422_write;
reg pixbuf_y_val_V_9_out_ap_vld;
reg pixbuf_y_val_V_8_out_ap_vld;
reg pixbuf_y_val_V_7_out_ap_vld;
reg[7:0] pixbuf_y_val_V_6_out_o;
reg pixbuf_y_val_V_6_out_o_ap_vld;
reg pixbuf_y_val_V_5_out_ap_vld;
reg p_0_0_0_0_0_21063_out_ap_vld;
reg p_0_0_0_0_0511_21060_out_ap_vld;
reg[7:0] p_out_o;
reg p_out_o_ap_vld;
reg[7:0] p_out1_o;
reg p_out1_o_ap_vld;
reg[7:0] p_out2_o;
reg p_out2_o_ap_vld;
reg[7:0] p_out3_o;
reg p_out3_o_ap_vld;
reg[7:0] p_0_2_0_0_01014_out_o;
reg p_0_2_0_0_01014_out_o_ap_vld;
reg[7:0] p_0_1_0_0_01012_out_o;
reg p_0_1_0_0_01012_out_o_ap_vld;
reg[7:0] p_0_0_0_0_05191010_out_o;
reg p_0_0_0_0_05191010_out_o_ap_vld;
reg[63:0] filt_res1_1_out_o;
reg filt_res1_1_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln1636_reg_901;
reg   [0:0] icmp_ln1643_reg_911;
reg    ap_predicate_op64_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln1636_reg_901_pp0_iter1_reg;
reg   [0:0] tmp_reg_925;
reg   [0:0] tmp_reg_925_pp0_iter1_reg;
reg    ap_predicate_op102_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg   [0:0] tmp_reg_925_pp0_iter3_reg;
reg    ap_predicate_op139_write_state5;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1636_fu_367_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    stream_scaled_blk_n;
wire    ap_block_pp0_stage0;
reg    stream_out_422_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] conv263_cast_cast_cast_cast_cast_cast_fu_302_p3;
reg   [31:0] conv263_cast_cast_cast_cast_cast_cast_reg_896;
reg   [0:0] icmp_ln1636_reg_901_pp0_iter2_reg;
wire   [0:0] odd_col_fu_385_p1;
reg   [0:0] odd_col_reg_905;
reg   [0:0] odd_col_reg_905_pp0_iter1_reg;
reg   [0:0] odd_col_reg_905_pp0_iter2_reg;
reg   [0:0] odd_col_reg_905_pp0_iter3_reg;
wire   [0:0] icmp_ln1643_fu_389_p2;
wire   [0:0] cmp148_fu_395_p2;
reg   [0:0] cmp148_reg_915;
reg   [0:0] cmp148_reg_915_pp0_iter1_reg;
reg   [0:0] tmp_reg_925_pp0_iter2_reg;
reg   [7:0] pixbuf_y_val_V_11_reg_929;
reg   [7:0] pixbuf_y_val_V_12_reg_936;
reg   [7:0] pixbuf_y_val_V_13_reg_942;
wire   [7:0] lhs_V_fu_525_p3;
reg   [7:0] lhs_V_reg_948;
wire   [7:0] rhs_V_fu_532_p3;
reg   [7:0] rhs_V_reg_953;
wire   [7:0] lhs_fu_539_p3;
reg   [7:0] lhs_reg_958;
wire   [7:0] rhs_fu_546_p3;
reg   [7:0] rhs_reg_963;
wire   [8:0] ret_V_2_fu_557_p2;
reg   [8:0] ret_V_2_reg_968;
wire   [8:0] ret_V_4_fu_567_p2;
reg   [8:0] ret_V_4_reg_973;
wire   [7:0] tmp_2_fu_657_p6;
reg   [7:0] tmp_2_reg_978;
reg   [7:0] trunc_ln2_reg_983;
reg   [7:0] filt_res1_4_reg_988;
reg    ap_condition_exit_pp0_iter2_stage0;
wire   [7:0] rhs_V_2_fu_511_p3;
wire   [7:0] rhs_3_fu_518_p3;
wire   [7:0] trunc_ln145_fu_414_p1;
wire   [63:0] filt_res1_fu_757_p3;
reg   [14:0] x_fu_140;
wire   [14:0] x_4_fu_373_p2;
wire    ap_loop_init;
reg   [14:0] ap_sig_allocacmp_x_3;
reg   [7:0] p_0_0_0_0_0511_21060_fu_144;
reg   [7:0] p_0_0_0_0_0_21063_fu_148;
reg   [7:0] pixbuf_y_val_V_5_fu_152;
reg   [7:0] pixbuf_y_val_V_10_fu_156;
reg   [7:0] p_0_1_0_0_01020_fu_160;
reg   [7:0] p_0_1_0_0_01024_fu_164;
reg   [7:0] pixbuf_y_val_V_7_fu_168;
reg   [7:0] pixbuf_y_val_V_8_fu_172;
reg   [7:0] pixbuf_y_val_V_9_fu_176;
wire   [23:0] p_0_fu_585_p4;
reg    ap_block_pp0_stage0_01001;
wire   [23:0] zext_ln174_fu_781_p1;
wire   [15:0] zext_ln1636_fu_363_p1;
wire   [15:0] select_ln1632_cast_fu_298_p1;
wire   [15:0] out_x_fu_379_p2;
wire   [8:0] zext_ln1541_2_fu_553_p1;
wire   [8:0] zext_ln1541_6_fu_563_p1;
wire   [8:0] ret_V_fu_667_p3;
wire   [9:0] zext_ln1541_3_fu_681_p1;
wire   [9:0] zext_ln1541_fu_674_p1;
wire   [9:0] add_ln1541_2_fu_684_p2;
wire   [9:0] zext_ln1541_1_fu_677_p1;
wire   [9:0] add_ln1541_1_fu_690_p2;
wire   [8:0] ret_V_3_fu_706_p3;
wire   [9:0] zext_ln1541_7_fu_720_p1;
wire   [9:0] zext_ln1541_4_fu_713_p1;
wire   [9:0] add_ln1541_5_fu_723_p2;
wire   [9:0] zext_ln1541_5_fu_716_p1;
wire   [9:0] add_ln1541_4_fu_729_p2;
wire   [63:0] zext_ln587_fu_754_p1;
wire   [7:0] trunc_ln1636_fu_764_p1;
wire   [7:0] select_ln1757_fu_768_p3;
wire   [15:0] tmp_1_fu_774_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_614;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

bd_3a92_hsc_0_mux_432_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
mux_432_8_1_1_U211(
    .din0(pixbuf_y_val_V_6_out_i),
    .din1(pixbuf_y_val_V_11_reg_929),
    .din2(pixbuf_y_val_V_12_reg_936),
    .din3(pixbuf_y_val_V_13_reg_942),
    .din4(conv263_cast_cast_cast_cast_cast_cast_reg_896),
    .dout(tmp_2_fu_657_p6)
);

bd_3a92_hsc_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0_0_0511_21060_fu_144 <= p_0_0_0_0_0511_21058_lcssa1084;
        end else if (((icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            p_0_0_0_0_0511_21060_fu_144 <= p_0_1_0_0_01020_fu_160;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0_0_0_21063_fu_148 <= p_0_0_0_0_0_21061_lcssa1087;
        end else if (((icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            p_0_0_0_0_0_21063_fu_148 <= p_0_1_0_0_01024_fu_164;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_1_0_0_01020_fu_160 <= p_0_1_0_0_01017_lcssa1043;
        end else if ((1'b1 == ap_condition_614)) begin
            p_0_1_0_0_01020_fu_160 <= {{stream_scaled_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_1_0_0_01024_fu_164 <= p_0_1_0_0_01021_lcssa1046;
        end else if ((1'b1 == ap_condition_614)) begin
            p_0_1_0_0_01024_fu_164 <= {{stream_scaled_dout[23:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pixbuf_y_val_V_10_fu_156 <= p_0_0_0_0_05191015_lcssa1040;
        end else if ((1'b1 == ap_condition_614)) begin
            pixbuf_y_val_V_10_fu_156 <= trunc_ln145_fu_414_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_val_V_5_fu_152 <= pixbuf_y_val_V;
        end else if (((icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_val_V_5_fu_152 <= pixbuf_y_val_V_10_fu_156;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_val_V_7_fu_168 <= pixbuf_y_val_V_2;
        end else if (((icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_val_V_7_fu_168 <= pixbuf_y_val_V_8_fu_172;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_val_V_8_fu_172 <= pixbuf_y_val_V_3;
        end else if (((icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_val_V_8_fu_172 <= pixbuf_y_val_V_9_fu_176;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_val_V_9_fu_176 <= pixbuf_y_val_V_4;
        end else if (((icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_val_V_9_fu_176 <= pixbuf_y_val_V_5_fu_152;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1636_fu_367_p2 == 1'd0))) begin
            x_fu_140 <= x_4_fu_373_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_140 <= 15'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        cmp148_reg_915_pp0_iter1_reg <= cmp148_reg_915;
        conv263_cast_cast_cast_cast_cast_cast_reg_896[1 : 0] <= conv263_cast_cast_cast_cast_cast_cast_fu_302_p3[1 : 0];
        icmp_ln1636_reg_901 <= icmp_ln1636_fu_367_p2;
        icmp_ln1636_reg_901_pp0_iter1_reg <= icmp_ln1636_reg_901;
        odd_col_reg_905_pp0_iter1_reg <= odd_col_reg_905;
        tmp_reg_925_pp0_iter1_reg <= tmp_reg_925;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln1636_reg_901_pp0_iter2_reg <= icmp_ln1636_reg_901_pp0_iter1_reg;
        odd_col_reg_905_pp0_iter2_reg <= odd_col_reg_905_pp0_iter1_reg;
        odd_col_reg_905_pp0_iter3_reg <= odd_col_reg_905_pp0_iter2_reg;
        tmp_2_reg_978 <= tmp_2_fu_657_p6;
        tmp_reg_925_pp0_iter2_reg <= tmp_reg_925_pp0_iter1_reg;
        tmp_reg_925_pp0_iter3_reg <= tmp_reg_925_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1636_fu_367_p2 == 1'd0))) begin
        cmp148_reg_915 <= cmp148_fu_395_p2;
        icmp_ln1643_reg_911 <= icmp_ln1643_fu_389_p2;
        odd_col_reg_905 <= odd_col_fu_385_p1;
        tmp_reg_925 <= out_x_fu_379_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (odd_col_reg_905_pp0_iter2_reg == 1'd0))) begin
        filt_res1_4_reg_988 <= {{add_ln1541_4_fu_729_p2[9:2]}};
        trunc_ln2_reg_983 <= {{add_ln1541_1_fu_690_p2[9:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (odd_col_reg_905_pp0_iter1_reg == 1'd0))) begin
        lhs_V_reg_948 <= lhs_V_fu_525_p3;
        lhs_reg_958 <= lhs_fu_539_p3;
        ret_V_2_reg_968 <= ret_V_2_fu_557_p2;
        ret_V_4_reg_973 <= ret_V_4_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pixbuf_y_val_V_11_reg_929 <= pixbuf_y_val_V_7_fu_168;
        pixbuf_y_val_V_12_reg_936 <= pixbuf_y_val_V_8_fu_172;
        pixbuf_y_val_V_13_reg_942 <= pixbuf_y_val_V_9_fu_176;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0))) begin
        rhs_V_reg_953 <= rhs_V_fu_532_p3;
        rhs_reg_963 <= rhs_fu_546_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1636_fu_367_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln1636_reg_901_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_3 = 15'd0;
    end else begin
        ap_sig_allocacmp_x_3 = x_fu_140;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        filt_res1_1_out_o = filt_res1_fu_757_p3;
    end else begin
        filt_res1_1_out_o = filt_res1_1_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        filt_res1_1_out_o_ap_vld = 1'b1;
    end else begin
        filt_res1_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1636_reg_901_pp0_iter2_reg == 1'd1))) begin
        p_0_0_0_0_0511_21060_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0511_21060_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1643_reg_911 == 1'd1) & (icmp_ln1636_reg_901 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_0_0_05191010_out_o = trunc_ln145_fu_414_p1;
    end else begin
        p_0_0_0_0_05191010_out_o = p_0_0_0_0_05191010_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1643_reg_911 == 1'd1) & (icmp_ln1636_reg_901 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_0_0_05191010_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_05191010_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1636_reg_901_pp0_iter2_reg == 1'd1))) begin
        p_0_0_0_0_0_21063_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0_21063_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1643_reg_911 == 1'd1) & (icmp_ln1636_reg_901 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_01012_out_o = {{stream_scaled_dout[15:8]}};
    end else begin
        p_0_1_0_0_01012_out_o = p_0_1_0_0_01012_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1643_reg_911 == 1'd1) & (icmp_ln1636_reg_901 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_01012_out_o_ap_vld = 1'b1;
    end else begin
        p_0_1_0_0_01012_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1643_reg_911 == 1'd1) & (icmp_ln1636_reg_901 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_2_0_0_01014_out_o = {{stream_scaled_dout[23:16]}};
    end else begin
        p_0_2_0_0_01014_out_o = p_0_2_0_0_01014_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1643_reg_911 == 1'd1) & (icmp_ln1636_reg_901 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_2_0_0_01014_out_o_ap_vld = 1'b1;
    end else begin
        p_0_2_0_0_01014_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out1_o = rhs_3_fu_518_p3;
    end else begin
        p_out1_o = p_out1_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out1_o_ap_vld = 1'b1;
    end else begin
        p_out1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out2_o = rhs_V_fu_532_p3;
    end else begin
        p_out2_o = p_out2_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out2_o_ap_vld = 1'b1;
    end else begin
        p_out2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out3_o = rhs_fu_546_p3;
    end else begin
        p_out3_o = p_out3_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out3_o_ap_vld = 1'b1;
    end else begin
        p_out3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out_o = rhs_V_2_fu_511_p3;
    end else begin
        p_out_o = p_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out_o_ap_vld = 1'b1;
    end else begin
        p_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1636_reg_901_pp0_iter2_reg == 1'd1))) begin
        pixbuf_y_val_V_5_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_val_V_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        pixbuf_y_val_V_6_out_o = pixbuf_y_val_V_11_reg_929;
    end else begin
        pixbuf_y_val_V_6_out_o = pixbuf_y_val_V_6_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        pixbuf_y_val_V_6_out_o_ap_vld = 1'b1;
    end else begin
        pixbuf_y_val_V_6_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1636_reg_901_pp0_iter2_reg == 1'd1))) begin
        pixbuf_y_val_V_7_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_val_V_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1636_reg_901_pp0_iter2_reg == 1'd1))) begin
        pixbuf_y_val_V_8_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_val_V_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1636_reg_901_pp0_iter2_reg == 1'd1))) begin
        pixbuf_y_val_V_9_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_val_V_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op139_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op102_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        stream_out_422_blk_n = stream_out_422_full_n;
    end else begin
        stream_out_422_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_01001)) begin
        if (((ap_predicate_op139_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            stream_out_422_din = zext_ln174_fu_781_p1;
        end else if (((ap_predicate_op102_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            stream_out_422_din = p_0_fu_585_p4;
        end else begin
            stream_out_422_din = 'bx;
        end
    end else begin
        stream_out_422_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op139_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op102_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        stream_out_422_write = 1'b1;
    end else begin
        stream_out_422_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op64_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_scaled_blk_n = stream_scaled_empty_n;
    end else begin
        stream_scaled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op64_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_scaled_read = 1'b1;
    end else begin
        stream_scaled_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1541_1_fu_690_p2 = (add_ln1541_2_fu_684_p2 + zext_ln1541_1_fu_677_p1);

assign add_ln1541_2_fu_684_p2 = (zext_ln1541_3_fu_681_p1 + zext_ln1541_fu_674_p1);

assign add_ln1541_4_fu_729_p2 = (add_ln1541_5_fu_723_p2 + zext_ln1541_5_fu_716_p1);

assign add_ln1541_5_fu_723_p2 = (zext_ln1541_7_fu_720_p1 + zext_ln1541_4_fu_713_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_predicate_op139_write_state5 == 1'b1) & (stream_out_422_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_predicate_op102_write_state3 == 1'b1) & (stream_out_422_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op64_read_state2 == 1'b1) & (stream_scaled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_predicate_op139_write_state5 == 1'b1) & (stream_out_422_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_predicate_op102_write_state3 == 1'b1) & (stream_out_422_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op64_read_state2 == 1'b1) & (stream_scaled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_predicate_op139_write_state5 == 1'b1) & (stream_out_422_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_predicate_op102_write_state3 == 1'b1) & (stream_out_422_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op64_read_state2 == 1'b1) & (stream_scaled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op64_read_state2 == 1'b1) & (stream_scaled_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op102_write_state3 == 1'b1) & (stream_out_422_full_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((ap_predicate_op139_write_state5 == 1'b1) & (stream_out_422_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_614 = ((icmp_ln1643_reg_911 == 1'd1) & (icmp_ln1636_reg_901 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op102_write_state3 = ((p_read == 1'd1) & (tmp_reg_925_pp0_iter1_reg == 1'd0) & (icmp_ln1636_reg_901_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op139_write_state5 = ((tmp_reg_925_pp0_iter3_reg == 1'd0) & (p_read == 1'd0));
end

always @ (*) begin
    ap_predicate_op64_read_state2 = ((icmp_ln1643_reg_911 == 1'd1) & (icmp_ln1636_reg_901 == 1'd0));
end

assign cmp148_fu_395_p2 = ((ap_sig_allocacmp_x_3 == 15'd0) ? 1'b1 : 1'b0);

assign conv263_cast_cast_cast_cast_cast_cast_fu_302_p3 = ((conv263_cast_cast_cast_cast[0:0] == 1'b1) ? 32'd3 : 32'd0);

assign filt_res1_fu_757_p3 = ((odd_col_reg_905_pp0_iter3_reg[0:0] == 1'b1) ? filt_res1_1_out_i : zext_ln587_fu_754_p1);

assign icmp_ln1636_fu_367_p2 = ((ap_sig_allocacmp_x_3 == loopWidth) ? 1'b1 : 1'b0);

assign icmp_ln1643_fu_389_p2 = ((zext_ln1636_fu_363_p1 < WidthOut_load) ? 1'b1 : 1'b0);

assign lhs_V_fu_525_p3 = ((cmp148_reg_915_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_01024_fu_164 : p_out2_i);

assign lhs_fu_539_p3 = ((cmp148_reg_915_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_01020_fu_160 : p_out3_i);

assign odd_col_fu_385_p1 = out_x_fu_379_p2[0:0];

assign out_x_fu_379_p2 = (zext_ln1636_fu_363_p1 - select_ln1632_cast_fu_298_p1);

assign p_0_0_0_0_0511_21060_out = p_0_0_0_0_0511_21060_fu_144;

assign p_0_0_0_0_0_21063_out = p_0_0_0_0_0_21063_fu_148;

assign p_0_fu_585_p4 = {{{p_0_2_0_0_01014_out_i}, {p_0_1_0_0_01012_out_i}}, {p_0_0_0_0_05191010_out_i}};

assign pixbuf_y_val_V_5_out = pixbuf_y_val_V_5_fu_152;

assign pixbuf_y_val_V_7_out = pixbuf_y_val_V_11_reg_929;

assign pixbuf_y_val_V_8_out = pixbuf_y_val_V_12_reg_936;

assign pixbuf_y_val_V_9_out = pixbuf_y_val_V_13_reg_942;

assign ret_V_2_fu_557_p2 = (zext_ln1541_2_fu_553_p1 + 9'd2);

assign ret_V_3_fu_706_p3 = {{rhs_V_reg_953}, {1'd0}};

assign ret_V_4_fu_567_p2 = (zext_ln1541_6_fu_563_p1 + 9'd2);

assign ret_V_fu_667_p3 = {{rhs_reg_963}, {1'd0}};

assign rhs_3_fu_518_p3 = ((cmp148_reg_915_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_01020_fu_160 : p_0_0_0_0_0511_21060_fu_144);

assign rhs_V_2_fu_511_p3 = ((cmp148_reg_915_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_01024_fu_164 : p_0_0_0_0_0_21063_fu_148);

assign rhs_V_fu_532_p3 = ((cmp148_reg_915_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_01024_fu_164 : p_out_i);

assign rhs_fu_546_p3 = ((cmp148_reg_915_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_01020_fu_160 : p_out1_i);

assign select_ln1632_cast_fu_298_p1 = select_ln1632;

assign select_ln1757_fu_768_p3 = ((odd_col_reg_905_pp0_iter3_reg[0:0] == 1'b1) ? trunc_ln1636_fu_764_p1 : trunc_ln2_reg_983);

assign tmp_1_fu_774_p3 = {{select_ln1757_fu_768_p3}, {tmp_2_reg_978}};

assign trunc_ln145_fu_414_p1 = stream_scaled_dout[7:0];

assign trunc_ln1636_fu_764_p1 = filt_res1_1_out_i[7:0];

assign x_4_fu_373_p2 = (ap_sig_allocacmp_x_3 + 15'd1);

assign zext_ln1541_1_fu_677_p1 = ret_V_fu_667_p3;

assign zext_ln1541_2_fu_553_p1 = rhs_3_fu_518_p3;

assign zext_ln1541_3_fu_681_p1 = ret_V_2_reg_968;

assign zext_ln1541_4_fu_713_p1 = lhs_V_reg_948;

assign zext_ln1541_5_fu_716_p1 = ret_V_3_fu_706_p3;

assign zext_ln1541_6_fu_563_p1 = rhs_V_2_fu_511_p3;

assign zext_ln1541_7_fu_720_p1 = ret_V_4_reg_973;

assign zext_ln1541_fu_674_p1 = lhs_reg_958;

assign zext_ln1636_fu_363_p1 = ap_sig_allocacmp_x_3;

assign zext_ln174_fu_781_p1 = tmp_1_fu_774_p3;

assign zext_ln587_fu_754_p1 = filt_res1_4_reg_988;

always @ (posedge ap_clk) begin
    conv263_cast_cast_cast_cast_cast_cast_reg_896[31:2] <= 30'b000000000000000000000000000000;
end

endmodule //bd_3a92_hsc_0_v_hcresampler_core_1_Pipeline_VITIS_LOOP_1636_2
