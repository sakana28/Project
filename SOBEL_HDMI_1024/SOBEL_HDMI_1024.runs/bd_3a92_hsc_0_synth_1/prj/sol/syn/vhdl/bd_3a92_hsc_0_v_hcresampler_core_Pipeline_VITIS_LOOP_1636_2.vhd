-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_3a92_hsc_0_v_hcresampler_core_Pipeline_VITIS_LOOP_1636_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stream_in_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    stream_in_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_in_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_in_empty_n : IN STD_LOGIC;
    stream_in_read : OUT STD_LOGIC;
    stream_upsampled_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_upsampled_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_upsampled_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_upsampled_full_n : IN STD_LOGIC;
    stream_upsampled_write : OUT STD_LOGIC;
    pixbuf_y_val_V_19 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_18 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_17 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_05191015_lcssa1040 : IN STD_LOGIC_VECTOR (7 downto 0);
    loopWidth : IN STD_LOGIC_VECTOR (14 downto 0);
    select_ln1632 : IN STD_LOGIC_VECTOR (2 downto 0);
    WidthIn_load : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read : IN STD_LOGIC_VECTOR (0 downto 0);
    pixbuf_y_val_V_24_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_24_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_23_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_23_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_22_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_22_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_21_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_21_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_21_out_o_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_20_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_20_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0_21063_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0_21063_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0_21063_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0511_21060_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0511_21060_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0511_21060_out_o_ap_vld : OUT STD_LOGIC;
    p_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out_o_ap_vld : OUT STD_LOGIC;
    p_out1_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out1_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out1_o_ap_vld : OUT STD_LOGIC;
    p_out2_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out2_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out2_o_ap_vld : OUT STD_LOGIC;
    p_out3_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out3_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out3_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_01024_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01024_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01024_out_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_01020_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01020_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01020_out_o_ap_vld : OUT STD_LOGIC;
    p_0_2_0_0_01014_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_01014_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_01014_out_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_01012_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01012_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01012_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_05191010_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_05191010_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_05191010_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of bd_3a92_hsc_0_v_hcresampler_core_Pipeline_VITIS_LOOP_1636_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln1636_reg_762 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1643_reg_772 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op53_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln1636_reg_762_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_786 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_786_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op95_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal tmp_reg_786_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op124_write_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln1636_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal stream_in_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal stream_upsampled_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal CRpix_fu_257_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal CRpix_reg_750 : STD_LOGIC_VECTOR (0 downto 0);
    signal CRpix_reg_750_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1636_reg_762_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_fu_279_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_766 : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_766_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_766_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_766_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1643_fu_283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp150_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp150_reg_776 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp150_reg_776_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_786_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal pixbuf_y_val_V_6_reg_790 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_7_reg_796 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_8_reg_801 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_1_fu_489_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_1_reg_806 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_fu_496_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_reg_811 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_1_fu_503_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_1_reg_816 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_1_reg_816_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_fu_510_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_reg_822 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_reg_822_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln3_reg_828 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln232_1_reg_833 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_21_out_load_reg_838 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_exit_pp0_iter2_stage0 : STD_LOGIC;
    signal select_ln1722_fu_475_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1722_1_fu_482_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1658_fu_340_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1658_1_fu_347_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_3_fu_320_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_fu_316_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_fu_118 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_2_fu_267_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_x_1 : STD_LOGIC_VECTOR (14 downto 0);
    signal pixbuf_y_val_V_1_fu_122 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_2_fu_126 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_3_fu_130 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_4_fu_134 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_5_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_fu_529_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_s_fu_674_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1636_fu_253_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1632_cast_fu_216_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_x_fu_273_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1700_fu_433_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1700_1_fu_440_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1700_2_fu_447_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1700_3_fu_454_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1700_4_fu_461_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1700_5_fu_468_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln232_1_fu_602_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1541_fu_605_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_fu_599_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_fu_611_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_3_fu_630_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1541_2_fu_633_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_2_fu_627_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_1_fu_639_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln1598_fu_664_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1598_1_fu_669_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_586 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component bd_3a92_hsc_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component bd_3a92_hsc_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    pixbuf_y_val_V_1_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_1_fu_122 <= pixbuf_y_val_V;
                elsif (((icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_val_V_1_fu_122 <= pixbuf_y_val_V_2_fu_126;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_2_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pixbuf_y_val_V_2_fu_126 <= p_0_0_0_0_05191015_lcssa1040;
                elsif ((ap_const_boolean_1 = ap_condition_586)) then 
                    pixbuf_y_val_V_2_fu_126 <= trunc_ln145_fu_316_p1;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_3_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_3_fu_130 <= pixbuf_y_val_V_17;
                elsif (((icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_val_V_3_fu_130 <= pixbuf_y_val_V_4_fu_134;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_4_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_4_fu_134 <= pixbuf_y_val_V_18;
                elsif (((icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_val_V_4_fu_134 <= pixbuf_y_val_V_5_fu_138;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_5_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_5_fu_138 <= pixbuf_y_val_V_19;
                elsif (((icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_val_V_5_fu_138 <= pixbuf_y_val_V_1_fu_122;
                end if;
            end if; 
        end if;
    end process;

    x_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1636_fu_261_p2 = ap_const_lv1_0))) then 
                    x_fu_118 <= x_2_fu_267_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_118 <= ap_const_lv15_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                CRpix_reg_750 <= CRpix_fu_257_p1;
                CRpix_reg_750_pp0_iter1_reg <= CRpix_reg_750;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                cmp150_reg_776_pp0_iter1_reg <= cmp150_reg_776;
                icmp_ln1636_reg_762 <= icmp_ln1636_fu_261_p2;
                icmp_ln1636_reg_762_pp0_iter1_reg <= icmp_ln1636_reg_762;
                odd_col_reg_766_pp0_iter1_reg <= odd_col_reg_766;
                tmp_reg_786_pp0_iter1_reg <= tmp_reg_786;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                icmp_ln1636_reg_762_pp0_iter2_reg <= icmp_ln1636_reg_762_pp0_iter1_reg;
                odd_col_reg_766_pp0_iter2_reg <= odd_col_reg_766_pp0_iter1_reg;
                odd_col_reg_766_pp0_iter3_reg <= odd_col_reg_766_pp0_iter2_reg;
                rhs_1_reg_816_pp0_iter3_reg <= rhs_1_reg_816;
                rhs_reg_822_pp0_iter3_reg <= rhs_reg_822;
                tmp_reg_786_pp0_iter2_reg <= tmp_reg_786_pp0_iter1_reg;
                tmp_reg_786_pp0_iter3_reg <= tmp_reg_786_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1636_fu_261_p2 = ap_const_lv1_0))) then
                cmp150_reg_776 <= cmp150_fu_289_p2;
                icmp_ln1643_reg_772 <= icmp_ln1643_fu_283_p2;
                odd_col_reg_766 <= odd_col_fu_279_p1;
                tmp_reg_786 <= out_x_fu_273_p2(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0))) then
                lhs_1_reg_806 <= lhs_1_fu_489_p3;
                lhs_reg_811 <= lhs_fu_496_p3;
                rhs_1_reg_816 <= rhs_1_fu_503_p3;
                rhs_reg_822 <= rhs_fu_510_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_read = ap_const_lv1_0) and (tmp_reg_786_pp0_iter2_reg = ap_const_lv1_0))) then
                pixbuf_y_val_V_21_out_load_reg_838 <= pixbuf_y_val_V_21_out_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                pixbuf_y_val_V_6_reg_790 <= pixbuf_y_val_V_3_fu_130;
                pixbuf_y_val_V_7_reg_796 <= pixbuf_y_val_V_4_fu_134;
                pixbuf_y_val_V_8_reg_801 <= pixbuf_y_val_V_5_fu_138;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (odd_col_reg_766_pp0_iter2_reg = ap_const_lv1_1))) then
                trunc_ln232_1_reg_833 <= ret_V_1_fu_639_p2(8 downto 1);
                trunc_ln3_reg_828 <= ret_V_fu_611_p2(8 downto 1);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    CRpix_fu_257_p1 <= ap_sig_allocacmp_x_1(1 - 1 downto 0);
    add_ln1541_2_fu_633_p2 <= std_logic_vector(unsigned(zext_ln232_3_fu_630_p1) + unsigned(ap_const_lv9_1));
    add_ln1541_fu_605_p2 <= std_logic_vector(unsigned(zext_ln232_1_fu_602_p1) + unsigned(ap_const_lv9_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, stream_in_empty_n, ap_predicate_op53_read_state2, stream_upsampled_full_n, ap_predicate_op95_write_state3, ap_predicate_op124_write_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op124_write_state5 = ap_const_boolean_1) and (stream_upsampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_predicate_op95_write_state3 = ap_const_boolean_1) and (stream_upsampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op53_read_state2 = ap_const_boolean_1) and (stream_in_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, stream_in_empty_n, ap_predicate_op53_read_state2, stream_upsampled_full_n, ap_predicate_op95_write_state3, ap_predicate_op124_write_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op124_write_state5 = ap_const_boolean_1) and (stream_upsampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_predicate_op95_write_state3 = ap_const_boolean_1) and (stream_upsampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op53_read_state2 = ap_const_boolean_1) and (stream_in_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, stream_in_empty_n, ap_predicate_op53_read_state2, stream_upsampled_full_n, ap_predicate_op95_write_state3, ap_predicate_op124_write_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op124_write_state5 = ap_const_boolean_1) and (stream_upsampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_predicate_op95_write_state3 = ap_const_boolean_1) and (stream_upsampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op53_read_state2 = ap_const_boolean_1) and (stream_in_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(stream_in_empty_n, ap_predicate_op53_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op53_read_state2 = ap_const_boolean_1) and (stream_in_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(stream_upsampled_full_n, ap_predicate_op95_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_predicate_op95_write_state3 = ap_const_boolean_1) and (stream_upsampled_full_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter4_assign_proc : process(stream_upsampled_full_n, ap_predicate_op124_write_state5)
    begin
                ap_block_state5_pp0_stage0_iter4 <= ((ap_predicate_op124_write_state5 = ap_const_boolean_1) and (stream_upsampled_full_n = ap_const_logic_0));
    end process;


    ap_condition_586_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln1636_reg_762, icmp_ln1643_reg_772)
    begin
                ap_condition_586 <= ((icmp_ln1643_reg_772 = ap_const_lv1_1) and (icmp_ln1636_reg_762 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln1636_fu_261_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1636_fu_261_p2 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_762_pp0_iter1_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op124_write_state5_assign_proc : process(tmp_reg_786_pp0_iter3_reg, p_read)
    begin
                ap_predicate_op124_write_state5 <= ((tmp_reg_786_pp0_iter3_reg = ap_const_lv1_0) and (p_read = ap_const_lv1_0));
    end process;


    ap_predicate_op53_read_state2_assign_proc : process(icmp_ln1636_reg_762, icmp_ln1643_reg_772)
    begin
                ap_predicate_op53_read_state2 <= ((icmp_ln1643_reg_772 = ap_const_lv1_1) and (icmp_ln1636_reg_762 = ap_const_lv1_0));
    end process;


    ap_predicate_op95_write_state3_assign_proc : process(icmp_ln1636_reg_762_pp0_iter1_reg, tmp_reg_786_pp0_iter1_reg, p_read)
    begin
                ap_predicate_op95_write_state3 <= ((p_read = ap_const_lv1_1) and (tmp_reg_786_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_x_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_fu_118, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_x_1 <= ap_const_lv15_0;
        else 
            ap_sig_allocacmp_x_1 <= x_fu_118;
        end if; 
    end process;

    cmp150_fu_289_p2 <= "1" when (ap_sig_allocacmp_x_1 = ap_const_lv15_1) else "0";
    icmp_ln1636_fu_261_p2 <= "1" when (ap_sig_allocacmp_x_1 = loopWidth) else "0";
    icmp_ln1643_fu_283_p2 <= "1" when (unsigned(zext_ln1636_fu_253_p1) < unsigned(WidthIn_load)) else "0";
    lhs_1_fu_489_p3 <= 
        p_0_1_0_0_01024_out_i when (cmp150_reg_776_pp0_iter1_reg(0) = '1') else 
        select_ln1700_2_fu_447_p3;
    lhs_fu_496_p3 <= 
        p_0_1_0_0_01020_out_i when (cmp150_reg_776_pp0_iter1_reg(0) = '1') else 
        select_ln1700_3_fu_454_p3;
    odd_col_fu_279_p1 <= out_x_fu_273_p2(1 - 1 downto 0);
    out_x_fu_273_p2 <= std_logic_vector(unsigned(zext_ln1636_fu_253_p1) - unsigned(select_ln1632_cast_fu_216_p1));

    p_0_0_0_0_0511_21060_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_762_pp0_iter1_reg, p_0_0_0_0_0511_21060_out_i, ap_block_pp0_stage0, select_ln1722_1_fu_482_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_0_0_0_0511_21060_out_o <= select_ln1722_1_fu_482_p3;
        else 
            p_0_0_0_0_0511_21060_out_o <= p_0_0_0_0_0511_21060_out_i;
        end if; 
    end process;


    p_0_0_0_0_0511_21060_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_762_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_0_0_0_0511_21060_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0511_21060_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_05191010_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1636_reg_762, icmp_ln1643_reg_772, p_0_0_0_0_05191010_out_i, ap_block_pp0_stage0, trunc_ln145_fu_316_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1643_reg_772 = ap_const_lv1_1) and (icmp_ln1636_reg_762 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_0_0_0_05191010_out_o <= trunc_ln145_fu_316_p1;
        else 
            p_0_0_0_0_05191010_out_o <= p_0_0_0_0_05191010_out_i;
        end if; 
    end process;


    p_0_0_0_0_05191010_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1636_reg_762, icmp_ln1643_reg_772, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1643_reg_772 = ap_const_lv1_1) and (icmp_ln1636_reg_762 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_0_0_0_05191010_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_05191010_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_0_21063_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_762_pp0_iter1_reg, p_0_0_0_0_0_21063_out_i, ap_block_pp0_stage0, select_ln1722_fu_475_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_0_0_0_0_21063_out_o <= select_ln1722_fu_475_p3;
        else 
            p_0_0_0_0_0_21063_out_o <= p_0_0_0_0_0_21063_out_i;
        end if; 
    end process;


    p_0_0_0_0_0_21063_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_762_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_0_0_0_0_21063_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0_21063_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_01012_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_in_dout, icmp_ln1636_reg_762, icmp_ln1643_reg_772, p_0_1_0_0_01012_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1643_reg_772 = ap_const_lv1_1) and (icmp_ln1636_reg_762 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_01012_out_o <= stream_in_dout(15 downto 8);
        else 
            p_0_1_0_0_01012_out_o <= p_0_1_0_0_01012_out_i;
        end if; 
    end process;


    p_0_1_0_0_01012_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1636_reg_762, icmp_ln1643_reg_772, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1643_reg_772 = ap_const_lv1_1) and (icmp_ln1636_reg_762 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_01012_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_01012_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_01020_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1636_reg_762, icmp_ln1643_reg_772, p_0_1_0_0_01020_out_i, ap_block_pp0_stage0, select_ln1658_1_fu_347_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1643_reg_772 = ap_const_lv1_1) and (icmp_ln1636_reg_762 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_01020_out_o <= select_ln1658_1_fu_347_p3;
        else 
            p_0_1_0_0_01020_out_o <= p_0_1_0_0_01020_out_i;
        end if; 
    end process;


    p_0_1_0_0_01020_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1636_reg_762, icmp_ln1643_reg_772, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1643_reg_772 = ap_const_lv1_1) and (icmp_ln1636_reg_762 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_01020_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_01020_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_01024_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1636_reg_762, icmp_ln1643_reg_772, p_0_1_0_0_01024_out_i, ap_block_pp0_stage0, select_ln1658_fu_340_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1643_reg_772 = ap_const_lv1_1) and (icmp_ln1636_reg_762 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_01024_out_o <= select_ln1658_fu_340_p3;
        else 
            p_0_1_0_0_01024_out_o <= p_0_1_0_0_01024_out_i;
        end if; 
    end process;


    p_0_1_0_0_01024_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1636_reg_762, icmp_ln1643_reg_772, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1643_reg_772 = ap_const_lv1_1) and (icmp_ln1636_reg_762 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_01024_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_01024_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_2_0_0_01014_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_in_dout, icmp_ln1636_reg_762, icmp_ln1643_reg_772, p_0_2_0_0_01014_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1643_reg_772 = ap_const_lv1_1) and (icmp_ln1636_reg_762 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_2_0_0_01014_out_o <= stream_in_dout(23 downto 16);
        else 
            p_0_2_0_0_01014_out_o <= p_0_2_0_0_01014_out_i;
        end if; 
    end process;


    p_0_2_0_0_01014_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1636_reg_762, icmp_ln1643_reg_772, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1643_reg_772 = ap_const_lv1_1) and (icmp_ln1636_reg_762 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_2_0_0_01014_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_2_0_0_01014_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_fu_529_p4 <= ((p_0_2_0_0_01014_out_i & p_0_1_0_0_01012_out_i) & p_0_0_0_0_05191010_out_i);

    p_out1_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_762_pp0_iter1_reg, p_out1_i, ap_block_pp0_stage0, lhs_fu_496_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out1_o <= lhs_fu_496_p3;
        else 
            p_out1_o <= p_out1_i;
        end if; 
    end process;


    p_out1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_762_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out1_o_ap_vld <= ap_const_logic_1;
        else 
            p_out1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out2_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_762_pp0_iter1_reg, p_out2_i, ap_block_pp0_stage0, rhs_1_fu_503_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out2_o <= rhs_1_fu_503_p3;
        else 
            p_out2_o <= p_out2_i;
        end if; 
    end process;


    p_out2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_762_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out2_o_ap_vld <= ap_const_logic_1;
        else 
            p_out2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out3_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_762_pp0_iter1_reg, p_out3_i, ap_block_pp0_stage0, rhs_fu_510_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out3_o <= rhs_fu_510_p3;
        else 
            p_out3_o <= p_out3_i;
        end if; 
    end process;


    p_out3_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_762_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out3_o_ap_vld <= ap_const_logic_1;
        else 
            p_out3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_762_pp0_iter1_reg, p_out_i, ap_block_pp0_stage0, lhs_1_fu_489_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out_o <= lhs_1_fu_489_p3;
        else 
            p_out_o <= p_out_i;
        end if; 
    end process;


    p_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_762_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_762_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_s_fu_674_p4 <= ((select_ln1598_fu_664_p3 & select_ln1598_1_fu_669_p3) & pixbuf_y_val_V_21_out_load_reg_838);
    pixbuf_y_val_V_20_out <= pixbuf_y_val_V_1_fu_122;

    pixbuf_y_val_V_20_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1636_reg_762_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_762_pp0_iter2_reg = ap_const_lv1_1))) then 
            pixbuf_y_val_V_20_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_20_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    pixbuf_y_val_V_21_out_o_assign_proc : process(ap_enable_reg_pp0_iter3, pixbuf_y_val_V_21_out_i, ap_block_pp0_stage0, pixbuf_y_val_V_6_reg_790)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pixbuf_y_val_V_21_out_o <= pixbuf_y_val_V_6_reg_790;
        else 
            pixbuf_y_val_V_21_out_o <= pixbuf_y_val_V_21_out_i;
        end if; 
    end process;


    pixbuf_y_val_V_21_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pixbuf_y_val_V_21_out_o_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_21_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_val_V_22_out <= pixbuf_y_val_V_6_reg_790;

    pixbuf_y_val_V_22_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1636_reg_762_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_762_pp0_iter2_reg = ap_const_lv1_1))) then 
            pixbuf_y_val_V_22_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_22_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_val_V_23_out <= pixbuf_y_val_V_7_reg_796;

    pixbuf_y_val_V_23_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1636_reg_762_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_762_pp0_iter2_reg = ap_const_lv1_1))) then 
            pixbuf_y_val_V_23_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_23_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_val_V_24_out <= pixbuf_y_val_V_8_reg_801;

    pixbuf_y_val_V_24_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1636_reg_762_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_762_pp0_iter2_reg = ap_const_lv1_1))) then 
            pixbuf_y_val_V_24_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_24_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_1_fu_639_p2 <= std_logic_vector(unsigned(add_ln1541_2_fu_633_p2) + unsigned(zext_ln232_2_fu_627_p1));
    ret_V_fu_611_p2 <= std_logic_vector(unsigned(add_ln1541_fu_605_p2) + unsigned(zext_ln232_fu_599_p1));
    rhs_1_fu_503_p3 <= 
        p_0_1_0_0_01024_out_i when (cmp150_reg_776_pp0_iter1_reg(0) = '1') else 
        select_ln1700_4_fu_461_p3;
    rhs_fu_510_p3 <= 
        p_0_1_0_0_01020_out_i when (cmp150_reg_776_pp0_iter1_reg(0) = '1') else 
        select_ln1700_5_fu_468_p3;
    select_ln1598_1_fu_669_p3 <= 
        trunc_ln3_reg_828 when (odd_col_reg_766_pp0_iter3_reg(0) = '1') else 
        rhs_reg_822_pp0_iter3_reg;
    select_ln1598_fu_664_p3 <= 
        trunc_ln232_1_reg_833 when (odd_col_reg_766_pp0_iter3_reg(0) = '1') else 
        rhs_1_reg_816_pp0_iter3_reg;
    select_ln1632_cast_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1632),16));
    select_ln1658_1_fu_347_p3 <= 
        p_0_1_0_0_01020_out_i when (CRpix_reg_750(0) = '1') else 
        trunc_ln145_3_fu_320_p4;
    select_ln1658_fu_340_p3 <= 
        trunc_ln145_3_fu_320_p4 when (CRpix_reg_750(0) = '1') else 
        p_0_1_0_0_01024_out_i;
    select_ln1700_1_fu_440_p3 <= 
        p_0_1_0_0_01020_out_i when (CRpix_reg_750_pp0_iter1_reg(0) = '1') else 
        p_0_0_0_0_0511_21060_out_i;
    select_ln1700_2_fu_447_p3 <= 
        p_0_0_0_0_0_21063_out_i when (CRpix_reg_750_pp0_iter1_reg(0) = '1') else 
        p_out_i;
    select_ln1700_3_fu_454_p3 <= 
        p_0_0_0_0_0511_21060_out_i when (CRpix_reg_750_pp0_iter1_reg(0) = '1') else 
        p_out1_i;
    select_ln1700_4_fu_461_p3 <= 
        p_out_i when (CRpix_reg_750_pp0_iter1_reg(0) = '1') else 
        p_out2_i;
    select_ln1700_5_fu_468_p3 <= 
        p_out1_i when (CRpix_reg_750_pp0_iter1_reg(0) = '1') else 
        p_out3_i;
    select_ln1700_fu_433_p3 <= 
        p_0_1_0_0_01024_out_i when (CRpix_reg_750_pp0_iter1_reg(0) = '1') else 
        p_0_0_0_0_0_21063_out_i;
    select_ln1722_1_fu_482_p3 <= 
        p_0_1_0_0_01020_out_i when (cmp150_reg_776_pp0_iter1_reg(0) = '1') else 
        select_ln1700_1_fu_440_p3;
    select_ln1722_fu_475_p3 <= 
        p_0_1_0_0_01024_out_i when (cmp150_reg_776_pp0_iter1_reg(0) = '1') else 
        select_ln1700_fu_433_p3;

    stream_in_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_in_empty_n, ap_predicate_op53_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op53_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_blk_n <= stream_in_empty_n;
        else 
            stream_in_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_in_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op53_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op53_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_read <= ap_const_logic_1;
        else 
            stream_in_read <= ap_const_logic_0;
        end if; 
    end process;


    stream_upsampled_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, stream_upsampled_full_n, ap_predicate_op95_write_state3, ap_predicate_op124_write_state5, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op124_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op95_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            stream_upsampled_blk_n <= stream_upsampled_full_n;
        else 
            stream_upsampled_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_upsampled_din_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_predicate_op95_write_state3, ap_predicate_op124_write_state5, p_0_fu_529_p4, ap_block_pp0_stage0_01001, p_s_fu_674_p4)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_01001)) then
            if (((ap_predicate_op124_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
                stream_upsampled_din <= p_s_fu_674_p4;
            elsif (((ap_predicate_op95_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                stream_upsampled_din <= p_0_fu_529_p4;
            else 
                stream_upsampled_din <= "XXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            stream_upsampled_din <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stream_upsampled_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_predicate_op95_write_state3, ap_predicate_op124_write_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op124_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op95_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            stream_upsampled_write <= ap_const_logic_1;
        else 
            stream_upsampled_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln145_3_fu_320_p4 <= stream_in_dout(15 downto 8);
    trunc_ln145_fu_316_p1 <= stream_in_dout(8 - 1 downto 0);
    x_2_fu_267_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x_1) + unsigned(ap_const_lv15_1));
    zext_ln1636_fu_253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_x_1),16));
    zext_ln232_1_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_reg_822),9));
    zext_ln232_2_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_1_reg_806),9));
    zext_ln232_3_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_1_reg_816),9));
    zext_ln232_fu_599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_reg_811),9));
end behav;
