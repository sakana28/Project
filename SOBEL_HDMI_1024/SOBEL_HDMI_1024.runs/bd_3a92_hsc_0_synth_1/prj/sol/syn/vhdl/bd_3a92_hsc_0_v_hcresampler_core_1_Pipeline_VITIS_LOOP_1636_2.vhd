-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_3a92_hsc_0_v_hcresampler_core_1_Pipeline_VITIS_LOOP_1636_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stream_scaled_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    stream_scaled_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_scaled_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_scaled_empty_n : IN STD_LOGIC;
    stream_scaled_read : OUT STD_LOGIC;
    stream_out_422_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_out_422_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_out_422_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_out_422_full_n : IN STD_LOGIC;
    stream_out_422_write : OUT STD_LOGIC;
    pixbuf_y_val_V_4 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_3 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_2 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0_21061_lcssa1087 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0511_21058_lcssa1084 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01021_lcssa1046 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01017_lcssa1043 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_05191015_lcssa1040 : IN STD_LOGIC_VECTOR (7 downto 0);
    loopWidth : IN STD_LOGIC_VECTOR (14 downto 0);
    conv263_cast_cast_cast_cast : IN STD_LOGIC_VECTOR (0 downto 0);
    select_ln1632 : IN STD_LOGIC_VECTOR (1 downto 0);
    WidthOut_load : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read : IN STD_LOGIC_VECTOR (0 downto 0);
    pixbuf_y_val_V_9_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_9_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_8_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_8_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_7_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_7_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_6_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_6_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_6_out_o_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_5_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_5_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0_21063_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0_21063_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0511_21060_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0511_21060_out_ap_vld : OUT STD_LOGIC;
    p_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out_o_ap_vld : OUT STD_LOGIC;
    p_out1_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out1_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out1_o_ap_vld : OUT STD_LOGIC;
    p_out2_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out2_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out2_o_ap_vld : OUT STD_LOGIC;
    p_out3_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out3_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out3_o_ap_vld : OUT STD_LOGIC;
    p_0_2_0_0_01014_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_01014_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_01014_out_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_01012_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01012_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01012_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_05191010_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_05191010_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_05191010_out_o_ap_vld : OUT STD_LOGIC;
    filt_res1_1_out_i : IN STD_LOGIC_VECTOR (63 downto 0);
    filt_res1_1_out_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    filt_res1_1_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of bd_3a92_hsc_0_v_hcresampler_core_1_Pipeline_VITIS_LOOP_1636_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln1636_reg_901 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1643_reg_911 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op64_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln1636_reg_901_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_925 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_925_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op102_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal tmp_reg_925_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op139_write_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln1636_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal stream_scaled_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal stream_out_422_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal conv263_cast_cast_cast_cast_cast_cast_fu_302_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv263_cast_cast_cast_cast_cast_cast_reg_896 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1636_reg_901_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_fu_385_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_905 : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_905_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_905_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_905_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1643_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp148_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp148_reg_915 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp148_reg_915_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_925_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal pixbuf_y_val_V_11_reg_929 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_12_reg_936 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_13_reg_942 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_fu_525_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_reg_948 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_fu_532_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_reg_953 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_fu_539_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_reg_958 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_fu_546_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_reg_963 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_2_fu_557_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_2_reg_968 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_4_fu_567_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_4_reg_973 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_fu_657_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_reg_978 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln2_reg_983 : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_res1_4_reg_988 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_exit_pp0_iter2_stage0 : STD_LOGIC;
    signal rhs_V_2_fu_511_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_3_fu_518_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_fu_414_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_res1_fu_757_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fu_140 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_4_fu_373_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_x_3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_0_0_0_0_0511_21060_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_0_0_0_0_21063_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_5_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_10_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_1_0_0_01020_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_1_0_0_01024_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_7_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_8_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_9_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_fu_585_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln174_fu_781_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1636_fu_363_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1632_cast_fu_298_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_x_fu_379_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1541_2_fu_553_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1541_6_fu_563_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_fu_667_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1541_3_fu_681_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1541_fu_674_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1541_2_fu_684_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1541_1_fu_677_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1541_1_fu_690_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_3_fu_706_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1541_7_fu_720_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1541_4_fu_713_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1541_5_fu_723_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1541_5_fu_716_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1541_4_fu_729_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln587_fu_754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1636_fu_764_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1757_fu_768_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_774_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_614 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component bd_3a92_hsc_0_mux_432_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bd_3a92_hsc_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_432_8_1_1_U211 : component bd_3a92_hsc_0_mux_432_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 32,
        dout_WIDTH => 8)
    port map (
        din0 => pixbuf_y_val_V_6_out_i,
        din1 => pixbuf_y_val_V_11_reg_929,
        din2 => pixbuf_y_val_V_12_reg_936,
        din3 => pixbuf_y_val_V_13_reg_942,
        din4 => conv263_cast_cast_cast_cast_cast_cast_reg_896,
        dout => tmp_2_fu_657_p6);

    flow_control_loop_pipe_sequential_init_U : component bd_3a92_hsc_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    p_0_0_0_0_0511_21060_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_0_0_0_0511_21060_fu_144 <= p_0_0_0_0_0511_21058_lcssa1084;
                elsif (((icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    p_0_0_0_0_0511_21060_fu_144 <= p_0_1_0_0_01020_fu_160;
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0_0_0_21063_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_0_0_0_0_21063_fu_148 <= p_0_0_0_0_0_21061_lcssa1087;
                elsif (((icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    p_0_0_0_0_0_21063_fu_148 <= p_0_1_0_0_01024_fu_164;
                end if;
            end if; 
        end if;
    end process;

    p_0_1_0_0_01020_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_0_1_0_0_01020_fu_160 <= p_0_1_0_0_01017_lcssa1043;
                elsif ((ap_const_boolean_1 = ap_condition_614)) then 
                    p_0_1_0_0_01020_fu_160 <= stream_scaled_dout(15 downto 8);
                end if;
            end if; 
        end if;
    end process;

    p_0_1_0_0_01024_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_0_1_0_0_01024_fu_164 <= p_0_1_0_0_01021_lcssa1046;
                elsif ((ap_const_boolean_1 = ap_condition_614)) then 
                    p_0_1_0_0_01024_fu_164 <= stream_scaled_dout(23 downto 16);
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_10_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pixbuf_y_val_V_10_fu_156 <= p_0_0_0_0_05191015_lcssa1040;
                elsif ((ap_const_boolean_1 = ap_condition_614)) then 
                    pixbuf_y_val_V_10_fu_156 <= trunc_ln145_fu_414_p1;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_5_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_5_fu_152 <= pixbuf_y_val_V;
                elsif (((icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_val_V_5_fu_152 <= pixbuf_y_val_V_10_fu_156;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_7_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_7_fu_168 <= pixbuf_y_val_V_2;
                elsif (((icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_val_V_7_fu_168 <= pixbuf_y_val_V_8_fu_172;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_8_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_8_fu_172 <= pixbuf_y_val_V_3;
                elsif (((icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_val_V_8_fu_172 <= pixbuf_y_val_V_9_fu_176;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_9_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_9_fu_176 <= pixbuf_y_val_V_4;
                elsif (((icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_val_V_9_fu_176 <= pixbuf_y_val_V_5_fu_152;
                end if;
            end if; 
        end if;
    end process;

    x_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1636_fu_367_p2 = ap_const_lv1_0))) then 
                    x_fu_140 <= x_4_fu_373_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_140 <= ap_const_lv15_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                cmp148_reg_915_pp0_iter1_reg <= cmp148_reg_915;
                    conv263_cast_cast_cast_cast_cast_cast_reg_896(1 downto 0) <= conv263_cast_cast_cast_cast_cast_cast_fu_302_p3(1 downto 0);
                icmp_ln1636_reg_901 <= icmp_ln1636_fu_367_p2;
                icmp_ln1636_reg_901_pp0_iter1_reg <= icmp_ln1636_reg_901;
                odd_col_reg_905_pp0_iter1_reg <= odd_col_reg_905;
                tmp_reg_925_pp0_iter1_reg <= tmp_reg_925;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                icmp_ln1636_reg_901_pp0_iter2_reg <= icmp_ln1636_reg_901_pp0_iter1_reg;
                odd_col_reg_905_pp0_iter2_reg <= odd_col_reg_905_pp0_iter1_reg;
                odd_col_reg_905_pp0_iter3_reg <= odd_col_reg_905_pp0_iter2_reg;
                tmp_2_reg_978 <= tmp_2_fu_657_p6;
                tmp_reg_925_pp0_iter2_reg <= tmp_reg_925_pp0_iter1_reg;
                tmp_reg_925_pp0_iter3_reg <= tmp_reg_925_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1636_fu_367_p2 = ap_const_lv1_0))) then
                cmp148_reg_915 <= cmp148_fu_395_p2;
                icmp_ln1643_reg_911 <= icmp_ln1643_fu_389_p2;
                odd_col_reg_905 <= odd_col_fu_385_p1;
                tmp_reg_925 <= out_x_fu_379_p2(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (odd_col_reg_905_pp0_iter2_reg = ap_const_lv1_0))) then
                filt_res1_4_reg_988 <= add_ln1541_4_fu_729_p2(9 downto 2);
                trunc_ln2_reg_983 <= add_ln1541_1_fu_690_p2(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (odd_col_reg_905_pp0_iter1_reg = ap_const_lv1_0))) then
                lhs_V_reg_948 <= lhs_V_fu_525_p3;
                lhs_reg_958 <= lhs_fu_539_p3;
                ret_V_2_reg_968 <= ret_V_2_fu_557_p2;
                ret_V_4_reg_973 <= ret_V_4_fu_567_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                pixbuf_y_val_V_11_reg_929 <= pixbuf_y_val_V_7_fu_168;
                pixbuf_y_val_V_12_reg_936 <= pixbuf_y_val_V_8_fu_172;
                pixbuf_y_val_V_13_reg_942 <= pixbuf_y_val_V_9_fu_176;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0))) then
                rhs_V_reg_953 <= rhs_V_fu_532_p3;
                rhs_reg_963 <= rhs_fu_546_p3;
            end if;
        end if;
    end process;
    conv263_cast_cast_cast_cast_cast_cast_reg_896(31 downto 2) <= "000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1541_1_fu_690_p2 <= std_logic_vector(unsigned(add_ln1541_2_fu_684_p2) + unsigned(zext_ln1541_1_fu_677_p1));
    add_ln1541_2_fu_684_p2 <= std_logic_vector(unsigned(zext_ln1541_3_fu_681_p1) + unsigned(zext_ln1541_fu_674_p1));
    add_ln1541_4_fu_729_p2 <= std_logic_vector(unsigned(add_ln1541_5_fu_723_p2) + unsigned(zext_ln1541_5_fu_716_p1));
    add_ln1541_5_fu_723_p2 <= std_logic_vector(unsigned(zext_ln1541_7_fu_720_p1) + unsigned(zext_ln1541_4_fu_713_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, stream_scaled_empty_n, ap_predicate_op64_read_state2, stream_out_422_full_n, ap_predicate_op102_write_state3, ap_predicate_op139_write_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op139_write_state5 = ap_const_boolean_1) and (stream_out_422_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_predicate_op102_write_state3 = ap_const_boolean_1) and (stream_out_422_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op64_read_state2 = ap_const_boolean_1) and (stream_scaled_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, stream_scaled_empty_n, ap_predicate_op64_read_state2, stream_out_422_full_n, ap_predicate_op102_write_state3, ap_predicate_op139_write_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op139_write_state5 = ap_const_boolean_1) and (stream_out_422_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_predicate_op102_write_state3 = ap_const_boolean_1) and (stream_out_422_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op64_read_state2 = ap_const_boolean_1) and (stream_scaled_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, stream_scaled_empty_n, ap_predicate_op64_read_state2, stream_out_422_full_n, ap_predicate_op102_write_state3, ap_predicate_op139_write_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op139_write_state5 = ap_const_boolean_1) and (stream_out_422_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_predicate_op102_write_state3 = ap_const_boolean_1) and (stream_out_422_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op64_read_state2 = ap_const_boolean_1) and (stream_scaled_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(stream_scaled_empty_n, ap_predicate_op64_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op64_read_state2 = ap_const_boolean_1) and (stream_scaled_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(stream_out_422_full_n, ap_predicate_op102_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_predicate_op102_write_state3 = ap_const_boolean_1) and (stream_out_422_full_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter4_assign_proc : process(stream_out_422_full_n, ap_predicate_op139_write_state5)
    begin
                ap_block_state5_pp0_stage0_iter4 <= ((ap_predicate_op139_write_state5 = ap_const_boolean_1) and (stream_out_422_full_n = ap_const_logic_0));
    end process;


    ap_condition_614_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln1636_reg_901, icmp_ln1643_reg_911)
    begin
                ap_condition_614 <= ((icmp_ln1643_reg_911 = ap_const_lv1_1) and (icmp_ln1636_reg_901 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln1636_fu_367_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1636_fu_367_p2 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_901_pp0_iter1_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op102_write_state3_assign_proc : process(icmp_ln1636_reg_901_pp0_iter1_reg, tmp_reg_925_pp0_iter1_reg, p_read)
    begin
                ap_predicate_op102_write_state3 <= ((p_read = ap_const_lv1_1) and (tmp_reg_925_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op139_write_state5_assign_proc : process(tmp_reg_925_pp0_iter3_reg, p_read)
    begin
                ap_predicate_op139_write_state5 <= ((tmp_reg_925_pp0_iter3_reg = ap_const_lv1_0) and (p_read = ap_const_lv1_0));
    end process;


    ap_predicate_op64_read_state2_assign_proc : process(icmp_ln1636_reg_901, icmp_ln1643_reg_911)
    begin
                ap_predicate_op64_read_state2 <= ((icmp_ln1643_reg_911 = ap_const_lv1_1) and (icmp_ln1636_reg_901 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_x_3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_fu_140, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_x_3 <= ap_const_lv15_0;
        else 
            ap_sig_allocacmp_x_3 <= x_fu_140;
        end if; 
    end process;

    cmp148_fu_395_p2 <= "1" when (ap_sig_allocacmp_x_3 = ap_const_lv15_0) else "0";
    conv263_cast_cast_cast_cast_cast_cast_fu_302_p3 <= 
        ap_const_lv32_3 when (conv263_cast_cast_cast_cast(0) = '1') else 
        ap_const_lv32_0;

    filt_res1_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter4, filt_res1_1_out_i, ap_block_pp0_stage0, filt_res1_fu_757_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            filt_res1_1_out_o <= filt_res1_fu_757_p3;
        else 
            filt_res1_1_out_o <= filt_res1_1_out_i;
        end if; 
    end process;


    filt_res1_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            filt_res1_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            filt_res1_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    filt_res1_fu_757_p3 <= 
        filt_res1_1_out_i when (odd_col_reg_905_pp0_iter3_reg(0) = '1') else 
        zext_ln587_fu_754_p1;
    icmp_ln1636_fu_367_p2 <= "1" when (ap_sig_allocacmp_x_3 = loopWidth) else "0";
    icmp_ln1643_fu_389_p2 <= "1" when (unsigned(zext_ln1636_fu_363_p1) < unsigned(WidthOut_load)) else "0";
    lhs_V_fu_525_p3 <= 
        p_0_1_0_0_01024_fu_164 when (cmp148_reg_915_pp0_iter1_reg(0) = '1') else 
        p_out2_i;
    lhs_fu_539_p3 <= 
        p_0_1_0_0_01020_fu_160 when (cmp148_reg_915_pp0_iter1_reg(0) = '1') else 
        p_out3_i;
    odd_col_fu_385_p1 <= out_x_fu_379_p2(1 - 1 downto 0);
    out_x_fu_379_p2 <= std_logic_vector(unsigned(zext_ln1636_fu_363_p1) - unsigned(select_ln1632_cast_fu_298_p1));
    p_0_0_0_0_0511_21060_out <= p_0_0_0_0_0511_21060_fu_144;

    p_0_0_0_0_0511_21060_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1636_reg_901_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_901_pp0_iter2_reg = ap_const_lv1_1))) then 
            p_0_0_0_0_0511_21060_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0511_21060_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_05191010_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1636_reg_901, icmp_ln1643_reg_911, p_0_0_0_0_05191010_out_i, ap_block_pp0_stage0, trunc_ln145_fu_414_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1643_reg_911 = ap_const_lv1_1) and (icmp_ln1636_reg_901 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_0_0_0_05191010_out_o <= trunc_ln145_fu_414_p1;
        else 
            p_0_0_0_0_05191010_out_o <= p_0_0_0_0_05191010_out_i;
        end if; 
    end process;


    p_0_0_0_0_05191010_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1636_reg_901, icmp_ln1643_reg_911, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1643_reg_911 = ap_const_lv1_1) and (icmp_ln1636_reg_901 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_0_0_0_05191010_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_05191010_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_0_0_0_0_21063_out <= p_0_0_0_0_0_21063_fu_148;

    p_0_0_0_0_0_21063_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1636_reg_901_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_901_pp0_iter2_reg = ap_const_lv1_1))) then 
            p_0_0_0_0_0_21063_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0_21063_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_01012_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_scaled_dout, icmp_ln1636_reg_901, icmp_ln1643_reg_911, p_0_1_0_0_01012_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1643_reg_911 = ap_const_lv1_1) and (icmp_ln1636_reg_901 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_01012_out_o <= stream_scaled_dout(15 downto 8);
        else 
            p_0_1_0_0_01012_out_o <= p_0_1_0_0_01012_out_i;
        end if; 
    end process;


    p_0_1_0_0_01012_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1636_reg_901, icmp_ln1643_reg_911, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1643_reg_911 = ap_const_lv1_1) and (icmp_ln1636_reg_901 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_01012_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_01012_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_2_0_0_01014_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_scaled_dout, icmp_ln1636_reg_901, icmp_ln1643_reg_911, p_0_2_0_0_01014_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1643_reg_911 = ap_const_lv1_1) and (icmp_ln1636_reg_901 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_2_0_0_01014_out_o <= stream_scaled_dout(23 downto 16);
        else 
            p_0_2_0_0_01014_out_o <= p_0_2_0_0_01014_out_i;
        end if; 
    end process;


    p_0_2_0_0_01014_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1636_reg_901, icmp_ln1643_reg_911, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1643_reg_911 = ap_const_lv1_1) and (icmp_ln1636_reg_901 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_2_0_0_01014_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_2_0_0_01014_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_fu_585_p4 <= ((p_0_2_0_0_01014_out_i & p_0_1_0_0_01012_out_i) & p_0_0_0_0_05191010_out_i);

    p_out1_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_901_pp0_iter1_reg, p_out1_i, ap_block_pp0_stage0, rhs_3_fu_518_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out1_o <= rhs_3_fu_518_p3;
        else 
            p_out1_o <= p_out1_i;
        end if; 
    end process;


    p_out1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_901_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out1_o_ap_vld <= ap_const_logic_1;
        else 
            p_out1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out2_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_901_pp0_iter1_reg, p_out2_i, ap_block_pp0_stage0, rhs_V_fu_532_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out2_o <= rhs_V_fu_532_p3;
        else 
            p_out2_o <= p_out2_i;
        end if; 
    end process;


    p_out2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_901_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out2_o_ap_vld <= ap_const_logic_1;
        else 
            p_out2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out3_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_901_pp0_iter1_reg, p_out3_i, ap_block_pp0_stage0, rhs_fu_546_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out3_o <= rhs_fu_546_p3;
        else 
            p_out3_o <= p_out3_i;
        end if; 
    end process;


    p_out3_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_901_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out3_o_ap_vld <= ap_const_logic_1;
        else 
            p_out3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_901_pp0_iter1_reg, p_out_i, ap_block_pp0_stage0, rhs_V_2_fu_511_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out_o <= rhs_V_2_fu_511_p3;
        else 
            p_out_o <= p_out_i;
        end if; 
    end process;


    p_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1636_reg_901_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_901_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_val_V_5_out <= pixbuf_y_val_V_5_fu_152;

    pixbuf_y_val_V_5_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1636_reg_901_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_901_pp0_iter2_reg = ap_const_lv1_1))) then 
            pixbuf_y_val_V_5_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    pixbuf_y_val_V_6_out_o_assign_proc : process(ap_enable_reg_pp0_iter3, pixbuf_y_val_V_6_out_i, ap_block_pp0_stage0, pixbuf_y_val_V_11_reg_929)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pixbuf_y_val_V_6_out_o <= pixbuf_y_val_V_11_reg_929;
        else 
            pixbuf_y_val_V_6_out_o <= pixbuf_y_val_V_6_out_i;
        end if; 
    end process;


    pixbuf_y_val_V_6_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pixbuf_y_val_V_6_out_o_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_6_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_val_V_7_out <= pixbuf_y_val_V_11_reg_929;

    pixbuf_y_val_V_7_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1636_reg_901_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_901_pp0_iter2_reg = ap_const_lv1_1))) then 
            pixbuf_y_val_V_7_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_val_V_8_out <= pixbuf_y_val_V_12_reg_936;

    pixbuf_y_val_V_8_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1636_reg_901_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_901_pp0_iter2_reg = ap_const_lv1_1))) then 
            pixbuf_y_val_V_8_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_val_V_9_out <= pixbuf_y_val_V_13_reg_942;

    pixbuf_y_val_V_9_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1636_reg_901_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1636_reg_901_pp0_iter2_reg = ap_const_lv1_1))) then 
            pixbuf_y_val_V_9_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_2_fu_557_p2 <= std_logic_vector(unsigned(zext_ln1541_2_fu_553_p1) + unsigned(ap_const_lv9_2));
    ret_V_3_fu_706_p3 <= (rhs_V_reg_953 & ap_const_lv1_0);
    ret_V_4_fu_567_p2 <= std_logic_vector(unsigned(zext_ln1541_6_fu_563_p1) + unsigned(ap_const_lv9_2));
    ret_V_fu_667_p3 <= (rhs_reg_963 & ap_const_lv1_0);
    rhs_3_fu_518_p3 <= 
        p_0_1_0_0_01020_fu_160 when (cmp148_reg_915_pp0_iter1_reg(0) = '1') else 
        p_0_0_0_0_0511_21060_fu_144;
    rhs_V_2_fu_511_p3 <= 
        p_0_1_0_0_01024_fu_164 when (cmp148_reg_915_pp0_iter1_reg(0) = '1') else 
        p_0_0_0_0_0_21063_fu_148;
    rhs_V_fu_532_p3 <= 
        p_0_1_0_0_01024_fu_164 when (cmp148_reg_915_pp0_iter1_reg(0) = '1') else 
        p_out_i;
    rhs_fu_546_p3 <= 
        p_0_1_0_0_01020_fu_160 when (cmp148_reg_915_pp0_iter1_reg(0) = '1') else 
        p_out1_i;
    select_ln1632_cast_fu_298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1632),16));
    select_ln1757_fu_768_p3 <= 
        trunc_ln1636_fu_764_p1 when (odd_col_reg_905_pp0_iter3_reg(0) = '1') else 
        trunc_ln2_reg_983;

    stream_out_422_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, stream_out_422_full_n, ap_predicate_op102_write_state3, ap_predicate_op139_write_state5, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op139_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op102_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            stream_out_422_blk_n <= stream_out_422_full_n;
        else 
            stream_out_422_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_out_422_din_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_predicate_op102_write_state3, ap_predicate_op139_write_state5, p_0_fu_585_p4, ap_block_pp0_stage0_01001, zext_ln174_fu_781_p1)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_01001)) then
            if (((ap_predicate_op139_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
                stream_out_422_din <= zext_ln174_fu_781_p1;
            elsif (((ap_predicate_op102_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                stream_out_422_din <= p_0_fu_585_p4;
            else 
                stream_out_422_din <= "XXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            stream_out_422_din <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stream_out_422_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_predicate_op102_write_state3, ap_predicate_op139_write_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op139_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op102_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            stream_out_422_write <= ap_const_logic_1;
        else 
            stream_out_422_write <= ap_const_logic_0;
        end if; 
    end process;


    stream_scaled_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_scaled_empty_n, ap_predicate_op64_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op64_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_scaled_blk_n <= stream_scaled_empty_n;
        else 
            stream_scaled_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_scaled_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op64_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op64_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_scaled_read <= ap_const_logic_1;
        else 
            stream_scaled_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_774_p3 <= (select_ln1757_fu_768_p3 & tmp_2_reg_978);
    trunc_ln145_fu_414_p1 <= stream_scaled_dout(8 - 1 downto 0);
    trunc_ln1636_fu_764_p1 <= filt_res1_1_out_i(8 - 1 downto 0);
    x_4_fu_373_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x_3) + unsigned(ap_const_lv15_1));
    zext_ln1541_1_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_667_p3),10));
    zext_ln1541_2_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_3_fu_518_p3),9));
    zext_ln1541_3_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_2_reg_968),10));
    zext_ln1541_4_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_reg_948),10));
    zext_ln1541_5_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_3_fu_706_p3),10));
    zext_ln1541_6_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_2_fu_511_p3),9));
    zext_ln1541_7_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_4_reg_973),10));
    zext_ln1541_fu_674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_reg_958),10));
    zext_ln1636_fu_363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_x_3),16));
    zext_ln174_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_774_p3),24));
    zext_ln587_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(filt_res1_4_reg_988),64));
end behav;
