-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_3a92_vsc_0_vscale_core_polyphase_Pipeline_loop_width_for_procpix is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    SrcYUV_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    SrcYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    SrcYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    SrcYUV_empty_n : IN STD_LOGIC;
    SrcYUV_read : OUT STD_LOGIC;
    OutYUV_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    OutYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    OutYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    OutYUV_full_n : IN STD_LOGIC;
    OutYUV_write : OUT STD_LOGIC;
    FiltCoeff_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FiltCoeff_5_ce0 : OUT STD_LOGIC;
    FiltCoeff_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    idxprom11_i : IN STD_LOGIC_VECTOR (5 downto 0);
    FiltCoeff_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FiltCoeff_4_ce0 : OUT STD_LOGIC;
    FiltCoeff_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FiltCoeff_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FiltCoeff_3_ce0 : OUT STD_LOGIC;
    FiltCoeff_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FiltCoeff_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FiltCoeff_2_ce0 : OUT STD_LOGIC;
    FiltCoeff_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FiltCoeff_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FiltCoeff_1_ce0 : OUT STD_LOGIC;
    FiltCoeff_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FiltCoeff_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FiltCoeff_ce0 : OUT STD_LOGIC;
    FiltCoeff_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    InPixels : IN STD_LOGIC_VECTOR (10 downto 0);
    OutputWriteEn_1 : IN STD_LOGIC_VECTOR (0 downto 0);
    LineBuf_val_V_5_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    LineBuf_val_V_5_ce0 : OUT STD_LOGIC;
    LineBuf_val_V_5_we0 : OUT STD_LOGIC;
    LineBuf_val_V_5_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    LineBuf_val_V_5_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    LineBuf_val_V_5_ce1 : OUT STD_LOGIC;
    LineBuf_val_V_5_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    LineBuf_val_V_4_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    LineBuf_val_V_4_ce0 : OUT STD_LOGIC;
    LineBuf_val_V_4_we0 : OUT STD_LOGIC;
    LineBuf_val_V_4_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    LineBuf_val_V_4_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    LineBuf_val_V_4_ce1 : OUT STD_LOGIC;
    LineBuf_val_V_4_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    LineBuf_val_V_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    LineBuf_val_V_3_ce0 : OUT STD_LOGIC;
    LineBuf_val_V_3_we0 : OUT STD_LOGIC;
    LineBuf_val_V_3_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    LineBuf_val_V_3_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    LineBuf_val_V_3_ce1 : OUT STD_LOGIC;
    LineBuf_val_V_3_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    LineBuf_val_V_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    LineBuf_val_V_2_ce0 : OUT STD_LOGIC;
    LineBuf_val_V_2_we0 : OUT STD_LOGIC;
    LineBuf_val_V_2_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    LineBuf_val_V_2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    LineBuf_val_V_2_ce1 : OUT STD_LOGIC;
    LineBuf_val_V_2_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    LineBuf_val_V_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    LineBuf_val_V_1_ce0 : OUT STD_LOGIC;
    LineBuf_val_V_1_we0 : OUT STD_LOGIC;
    LineBuf_val_V_1_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    LineBuf_val_V_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    LineBuf_val_V_1_ce1 : OUT STD_LOGIC;
    LineBuf_val_V_1_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    LineBuf_val_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    LineBuf_val_V_ce0 : OUT STD_LOGIC;
    LineBuf_val_V_we0 : OUT STD_LOGIC;
    LineBuf_val_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    LineBuf_val_V_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    LineBuf_val_V_ce1 : OUT STD_LOGIC;
    LineBuf_val_V_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    brmerge : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp159 : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp119 : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of bd_3a92_vsc_0_vscale_core_polyphase_Pipeline_loop_width_for_procpix is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv24_800 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000100000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln252_reg_1317 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_read_reg_1299 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp119_read_reg_1284 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op63_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln252_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal SrcYUV_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal OutYUV_blk_n : STD_LOGIC;
    signal PixArrayVal_val_V_30_reg_350 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_31_reg_360 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_32_reg_370 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_40_reg_407 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_40_reg_407_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal PixArray_val_V_40_reg_407_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_40_reg_407_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_40_reg_407_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_40_reg_407_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_40_reg_407_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_40_reg_407_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_40_reg_407_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_39_reg_418 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_39_reg_418_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_39_reg_418_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_39_reg_418_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_39_reg_418_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_39_reg_418_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_39_reg_418_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_39_reg_418_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_39_reg_418_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_46_reg_429 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_46_reg_429_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_46_reg_429_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_46_reg_429_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_46_reg_429_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_46_reg_429_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_46_reg_429_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_46_reg_429_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_46_reg_429_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_37_reg_440 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_37_reg_440_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_37_reg_440_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_37_reg_440_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_37_reg_440_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_37_reg_440_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_37_reg_440_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_36_reg_450 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_36_reg_450_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_36_reg_450_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_36_reg_450_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_36_reg_450_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_36_reg_450_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_36_reg_450_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_45_reg_460 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_45_reg_460_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_45_reg_460_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_45_reg_460_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_45_reg_460_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_45_reg_460_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_45_reg_460_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_34_reg_470 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_34_reg_470_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_34_reg_470_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_34_reg_470_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_34_reg_470_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_33_reg_480 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_33_reg_480_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_33_reg_480_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_33_reg_480_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_33_reg_480_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_44_reg_490 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_44_reg_490_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_44_reg_490_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_44_reg_490_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_44_reg_490_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_31_reg_500 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_31_reg_500_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_31_reg_500_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_30_reg_510 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_30_reg_510_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_30_reg_510_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_43_reg_520 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_43_reg_520_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_43_reg_520_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_28_reg_530 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_27_reg_540 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_42_reg_550 : STD_LOGIC_VECTOR (7 downto 0);
    signal idxprom11_i_cast_fu_560_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom11_i_cast_reg_1307 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln252_reg_1317_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln252_reg_1317_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln252_reg_1317_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln252_reg_1317_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln252_reg_1317_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln252_reg_1317_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln252_reg_1317_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln252_reg_1317_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln252_reg_1317_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln252_reg_1317_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln252_reg_1317_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal LineBuf_val_V_addr_reg_1321 : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_addr_reg_1321_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_1_addr_reg_1327 : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_1_addr_reg_1327_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_1_addr_reg_1327_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_2_addr_reg_1333 : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_2_addr_reg_1333_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_2_addr_reg_1333_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_3_addr_reg_1339 : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_3_addr_reg_1339_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_3_addr_reg_1339_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_4_addr_reg_1345 : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_4_addr_reg_1345_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_4_addr_reg_1345_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_5_addr_reg_1351 : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_5_addr_reg_1351_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuf_val_V_5_addr_reg_1351_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal PixArrayVal_val_V_18_fu_599_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_18_reg_1357 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_18_reg_1357_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_19_reg_1365 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_19_reg_1365_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_20_reg_1373 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_20_reg_1373_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_2_reg_1381 : STD_LOGIC_VECTOR (23 downto 0);
    signal PixArray_val_V_20_fu_623_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_21_fu_647_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_21_reg_1406 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_22_reg_1412 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_23_reg_1418 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_24_fu_671_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_24_reg_1424 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_25_reg_1430 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_26_reg_1436 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_27_fu_695_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_27_reg_1442 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_28_reg_1448 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_29_reg_1454 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_13_fu_719_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_13_reg_1460 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_14_reg_1466 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_15_reg_1472 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_16_fu_743_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_16_reg_1478 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_17_reg_1483 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArray_val_V_18_reg_1488 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln302_fu_777_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln302_reg_1493 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln302_1_fu_784_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln302_1_reg_1498 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln302_2_fu_791_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln302_2_reg_1503 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln302_3_fu_798_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln302_3_reg_1508 : STD_LOGIC_VECTOR (23 downto 0);
    signal PixArrayVal_val_V_17_fu_805_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_17_reg_1513 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_16_fu_811_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_16_reg_1518 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_fu_817_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayVal_val_V_reg_1523 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1540_fu_835_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1540_1_fu_851_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1133_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sum_18_reg_1582 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1141_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sum_23_reg_1587 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1149_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sum_28_reg_1592 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1540_2_fu_867_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1157_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sum_19_reg_1639 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1165_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sum_24_reg_1644 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1173_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sum_29_reg_1649 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1540_3_fu_892_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1181_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sum_20_reg_1696 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1189_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sum_25_reg_1701 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1197_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sum_30_reg_1706 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1540_4_fu_917_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1205_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sum_21_reg_1738 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1212_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sum_26_reg_1743 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1219_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sum_31_reg_1748 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1540_5_fu_933_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1226_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sum_22_reg_1790 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1234_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sum_27_reg_1795 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1242_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sum_32_reg_1800 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1250_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sum_reg_1805 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_reg_1810 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln352_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln352_reg_1816 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1259_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sum_11_reg_1821 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_2_reg_1826 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln352_1_fu_992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln352_1_reg_1832 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1268_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sum_17_reg_1837 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_4_reg_1842 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln352_2_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln352_2_reg_1848 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter12_stage0 : STD_LOGIC;
    signal ap_phi_mux_PixArrayVal_val_V_30_phi_fu_353_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArrayVal_val_V_30_reg_350 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArrayVal_val_V_30_reg_350 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArrayVal_val_V_30_reg_350 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_PixArrayVal_val_V_31_phi_fu_363_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArrayVal_val_V_31_reg_360 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArrayVal_val_V_31_reg_360 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArrayVal_val_V_31_reg_360 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_PixArrayVal_val_V_32_phi_fu_373_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArrayVal_val_V_32_reg_370 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArrayVal_val_V_32_reg_370 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArrayVal_val_V_32_reg_370 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_PixArray_val_V_25_phi_fu_383_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_25_reg_380 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_PixArray_val_V_24_phi_fu_392_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_24_reg_389 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_PixArray_val_V_phi_fu_401_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_reg_398 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_40_reg_407 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_40_reg_407 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_40_reg_407 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_40_reg_407 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_40_reg_407 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_39_reg_418 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_39_reg_418 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_39_reg_418 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_39_reg_418 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_39_reg_418 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_46_reg_429 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_46_reg_429 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_46_reg_429 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_46_reg_429 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_46_reg_429 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_37_reg_440 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_37_reg_440 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_37_reg_440 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_37_reg_440 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_37_reg_440 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_36_reg_450 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_36_reg_450 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_36_reg_450 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_36_reg_450 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_36_reg_450 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_45_reg_460 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_45_reg_460 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_45_reg_460 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_45_reg_460 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_45_reg_460 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_34_reg_470 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_34_reg_470 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_34_reg_470 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_34_reg_470 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_34_reg_470 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_33_reg_480 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_33_reg_480 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_33_reg_480 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_33_reg_480 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_33_reg_480 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_44_reg_490 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_44_reg_490 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_44_reg_490 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_44_reg_490 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_44_reg_490 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_31_reg_500 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_31_reg_500 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_31_reg_500 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_31_reg_500 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_31_reg_500 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_30_reg_510 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_30_reg_510 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_30_reg_510 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_30_reg_510 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_30_reg_510 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_43_reg_520 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_43_reg_520 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_43_reg_520 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_43_reg_520 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_43_reg_520 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_28_reg_530 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_28_reg_530 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_28_reg_530 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_28_reg_530 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_28_reg_530 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_27_reg_540 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_27_reg_540 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_27_reg_540 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_27_reg_540 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_27_reg_540 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_PixArray_val_V_42_reg_550 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_PixArray_val_V_42_reg_550 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_PixArray_val_V_42_reg_550 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_PixArray_val_V_42_reg_550 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_PixArray_val_V_42_reg_550 : STD_LOGIC_VECTOR (7 downto 0);
    signal idxprom6_i_fu_584_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fu_122 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_2_fu_578_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_x_1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal LineBufVal_V_7_fu_767_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_1_fu_961_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_fu_983_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_5_fu_1005_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln260_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln260_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln260_3_fu_1034_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln2_fu_1020_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln260_1_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln260_1_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln260_4_fu_1068_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln260_1_fu_1054_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln260_2_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln260_2_fu_1110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln260_5_fu_1102_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln260_2_fu_1088_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln260_2_fu_1114_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln260_1_fu_1080_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln260_fu_1046_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1133_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1133_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1133_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1141_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1141_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1141_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1149_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1149_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1149_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1157_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1157_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1165_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1165_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1173_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1173_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1181_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1181_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1189_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1189_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1197_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1197_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1205_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1205_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1212_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1212_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1219_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1219_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1226_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1226_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1234_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1234_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1242_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1242_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1250_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1250_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1259_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1259_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1268_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1268_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1133_ce : STD_LOGIC;
    signal grp_fu_1141_ce : STD_LOGIC;
    signal grp_fu_1149_ce : STD_LOGIC;
    signal grp_fu_1157_ce : STD_LOGIC;
    signal grp_fu_1165_ce : STD_LOGIC;
    signal grp_fu_1173_ce : STD_LOGIC;
    signal grp_fu_1181_ce : STD_LOGIC;
    signal grp_fu_1189_ce : STD_LOGIC;
    signal grp_fu_1197_ce : STD_LOGIC;
    signal grp_fu_1205_ce : STD_LOGIC;
    signal grp_fu_1212_ce : STD_LOGIC;
    signal grp_fu_1219_ce : STD_LOGIC;
    signal grp_fu_1226_ce : STD_LOGIC;
    signal grp_fu_1234_ce : STD_LOGIC;
    signal grp_fu_1242_ce : STD_LOGIC;
    signal grp_fu_1250_ce : STD_LOGIC;
    signal grp_fu_1259_ce : STD_LOGIC;
    signal grp_fu_1268_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_45 : BOOLEAN;
    signal ap_enable_state1_pp0_iter0_stage0 : BOOLEAN;
    signal ap_enable_operation_54 : BOOLEAN;
    signal ap_enable_state2_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op90_store_state3 : BOOLEAN;
    signal ap_enable_operation_90 : BOOLEAN;
    signal ap_enable_state3_pp0_iter2_stage0 : BOOLEAN;
    signal ap_enable_operation_58 : BOOLEAN;
    signal ap_enable_operation_69 : BOOLEAN;
    signal ap_predicate_op111_store_state4 : BOOLEAN;
    signal ap_enable_operation_111 : BOOLEAN;
    signal ap_enable_state4_pp0_iter3_stage0 : BOOLEAN;
    signal ap_enable_operation_59 : BOOLEAN;
    signal ap_enable_operation_73 : BOOLEAN;
    signal ap_predicate_op109_store_state4 : BOOLEAN;
    signal ap_enable_operation_109 : BOOLEAN;
    signal ap_enable_operation_60 : BOOLEAN;
    signal ap_enable_operation_77 : BOOLEAN;
    signal ap_predicate_op108_store_state4 : BOOLEAN;
    signal ap_enable_operation_108 : BOOLEAN;
    signal ap_enable_operation_61 : BOOLEAN;
    signal ap_enable_operation_81 : BOOLEAN;
    signal ap_predicate_op107_store_state4 : BOOLEAN;
    signal ap_enable_operation_107 : BOOLEAN;
    signal ap_enable_operation_62 : BOOLEAN;
    signal ap_enable_operation_85 : BOOLEAN;
    signal ap_predicate_op106_store_state4 : BOOLEAN;
    signal ap_enable_operation_106 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1133_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1141_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1149_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1157_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1165_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1173_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1181_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1189_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1197_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1205_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1212_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1219_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1226_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1234_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1242_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1250_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1259_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1268_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_condition_733 : BOOLEAN;
    signal ap_condition_94 : BOOLEAN;
    signal ap_condition_725 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component bd_3a92_vsc_0_mac_muladd_16s_8ns_12ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component bd_3a92_vsc_0_mac_muladd_16s_8ns_24s_25_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component bd_3a92_vsc_0_mac_muladd_16s_8ns_25s_26_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (24 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component bd_3a92_vsc_0_mac_muladd_16s_8ns_26s_26_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component bd_3a92_vsc_0_mac_muladd_16s_8ns_26s_27_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component bd_3a92_vsc_0_mac_muladd_16s_8ns_27s_27_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (26 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component bd_3a92_vsc_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mac_muladd_16s_8ns_12ns_24_4_1_U77 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_12ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1133_p0,
        din1 => grp_fu_1133_p1,
        din2 => grp_fu_1133_p2,
        ce => grp_fu_1133_ce,
        dout => grp_fu_1133_p3);

    mac_muladd_16s_8ns_12ns_24_4_1_U78 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_12ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1141_p0,
        din1 => grp_fu_1141_p1,
        din2 => grp_fu_1141_p2,
        ce => grp_fu_1141_ce,
        dout => grp_fu_1141_p3);

    mac_muladd_16s_8ns_12ns_24_4_1_U79 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_12ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1149_p0,
        din1 => grp_fu_1149_p1,
        din2 => grp_fu_1149_p2,
        ce => grp_fu_1149_ce,
        dout => grp_fu_1149_p3);

    mac_muladd_16s_8ns_24s_25_4_1_U80 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_24s_25_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1157_p0,
        din1 => grp_fu_1157_p1,
        din2 => sum_18_reg_1582,
        ce => grp_fu_1157_ce,
        dout => grp_fu_1157_p3);

    mac_muladd_16s_8ns_24s_25_4_1_U81 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_24s_25_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1165_p0,
        din1 => grp_fu_1165_p1,
        din2 => sum_23_reg_1587,
        ce => grp_fu_1165_ce,
        dout => grp_fu_1165_p3);

    mac_muladd_16s_8ns_24s_25_4_1_U82 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_24s_25_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1173_p0,
        din1 => grp_fu_1173_p1,
        din2 => sum_28_reg_1592,
        ce => grp_fu_1173_ce,
        dout => grp_fu_1173_p3);

    mac_muladd_16s_8ns_25s_26_4_1_U83 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_25s_26_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 25,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1181_p0,
        din1 => grp_fu_1181_p1,
        din2 => sum_19_reg_1639,
        ce => grp_fu_1181_ce,
        dout => grp_fu_1181_p3);

    mac_muladd_16s_8ns_25s_26_4_1_U84 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_25s_26_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 25,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1189_p0,
        din1 => grp_fu_1189_p1,
        din2 => sum_24_reg_1644,
        ce => grp_fu_1189_ce,
        dout => grp_fu_1189_p3);

    mac_muladd_16s_8ns_25s_26_4_1_U85 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_25s_26_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 25,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1197_p0,
        din1 => grp_fu_1197_p1,
        din2 => sum_29_reg_1649,
        ce => grp_fu_1197_ce,
        dout => grp_fu_1197_p3);

    mac_muladd_16s_8ns_26s_26_4_1_U86 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_26s_26_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1205_p0,
        din1 => grp_fu_1205_p1,
        din2 => sum_20_reg_1696,
        ce => grp_fu_1205_ce,
        dout => grp_fu_1205_p3);

    mac_muladd_16s_8ns_26s_26_4_1_U87 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_26s_26_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1212_p0,
        din1 => grp_fu_1212_p1,
        din2 => sum_25_reg_1701,
        ce => grp_fu_1212_ce,
        dout => grp_fu_1212_p3);

    mac_muladd_16s_8ns_26s_26_4_1_U88 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_26s_26_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1219_p0,
        din1 => grp_fu_1219_p1,
        din2 => sum_30_reg_1706,
        ce => grp_fu_1219_ce,
        dout => grp_fu_1219_p3);

    mac_muladd_16s_8ns_26s_27_4_1_U89 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_26s_27_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1226_p0,
        din1 => grp_fu_1226_p1,
        din2 => sum_21_reg_1738,
        ce => grp_fu_1226_ce,
        dout => grp_fu_1226_p3);

    mac_muladd_16s_8ns_26s_27_4_1_U90 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_26s_27_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1234_p0,
        din1 => grp_fu_1234_p1,
        din2 => sum_26_reg_1743,
        ce => grp_fu_1234_ce,
        dout => grp_fu_1234_p3);

    mac_muladd_16s_8ns_26s_27_4_1_U91 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_26s_27_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1242_p0,
        din1 => grp_fu_1242_p1,
        din2 => sum_31_reg_1748,
        ce => grp_fu_1242_ce,
        dout => grp_fu_1242_p3);

    mac_muladd_16s_8ns_27s_27_4_1_U92 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_27s_27_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 27,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1250_p0,
        din1 => grp_fu_1250_p1,
        din2 => sum_22_reg_1790,
        ce => grp_fu_1250_ce,
        dout => grp_fu_1250_p3);

    mac_muladd_16s_8ns_27s_27_4_1_U93 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_27s_27_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 27,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1259_p0,
        din1 => grp_fu_1259_p1,
        din2 => sum_27_reg_1795,
        ce => grp_fu_1259_ce,
        dout => grp_fu_1259_p3);

    mac_muladd_16s_8ns_27s_27_4_1_U94 : component bd_3a92_vsc_0_mac_muladd_16s_8ns_27s_27_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 27,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1268_p0,
        din1 => grp_fu_1268_p1,
        din2 => sum_32_reg_1800,
        ce => grp_fu_1268_ce,
        dout => grp_fu_1268_p3);

    flow_control_loop_pipe_sequential_init_U : component bd_3a92_vsc_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter16_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0)) then 
                    ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    PixArrayVal_val_V_30_reg_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_733)) then 
                    PixArrayVal_val_V_30_reg_350 <= PixArrayVal_val_V_20_reg_1373;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    PixArrayVal_val_V_30_reg_350 <= ap_phi_reg_pp0_iter2_PixArrayVal_val_V_30_reg_350;
                end if;
            end if; 
        end if;
    end process;

    PixArrayVal_val_V_31_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_733)) then 
                    PixArrayVal_val_V_31_reg_360 <= PixArrayVal_val_V_19_reg_1365;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    PixArrayVal_val_V_31_reg_360 <= ap_phi_reg_pp0_iter2_PixArrayVal_val_V_31_reg_360;
                end if;
            end if; 
        end if;
    end process;

    PixArrayVal_val_V_32_reg_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_733)) then 
                    PixArrayVal_val_V_32_reg_370 <= PixArrayVal_val_V_18_reg_1357;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    PixArrayVal_val_V_32_reg_370 <= ap_phi_reg_pp0_iter2_PixArrayVal_val_V_32_reg_370;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_PixArrayVal_val_V_30_reg_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_725)) then
                if ((ap_const_boolean_1 = ap_condition_94)) then 
                    ap_phi_reg_pp0_iter2_PixArrayVal_val_V_30_reg_350 <= SrcYUV_dout(23 downto 16);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_PixArrayVal_val_V_30_reg_350 <= ap_phi_reg_pp0_iter1_PixArrayVal_val_V_30_reg_350;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_PixArrayVal_val_V_31_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_725)) then
                if ((ap_const_boolean_1 = ap_condition_94)) then 
                    ap_phi_reg_pp0_iter2_PixArrayVal_val_V_31_reg_360 <= SrcYUV_dout(15 downto 8);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_PixArrayVal_val_V_31_reg_360 <= ap_phi_reg_pp0_iter1_PixArrayVal_val_V_31_reg_360;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_PixArrayVal_val_V_32_reg_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_725)) then
                if ((ap_const_boolean_1 = ap_condition_94)) then 
                    ap_phi_reg_pp0_iter2_PixArrayVal_val_V_32_reg_370 <= PixArray_val_V_20_fu_623_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_PixArrayVal_val_V_32_reg_370 <= ap_phi_reg_pp0_iter1_PixArrayVal_val_V_32_reg_370;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_27_reg_540_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_27_reg_540 <= PixArray_val_V_14_reg_1466;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_27_reg_540 <= PixArrayVal_val_V_28_reg_1448;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_27_reg_540 <= ap_phi_reg_pp0_iter3_PixArray_val_V_27_reg_540;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_28_reg_530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_28_reg_530 <= PixArray_val_V_15_reg_1472;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_28_reg_530 <= PixArrayVal_val_V_29_reg_1454;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_28_reg_530 <= ap_phi_reg_pp0_iter3_PixArray_val_V_28_reg_530;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_30_reg_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_30_reg_510 <= PixArrayVal_val_V_28_reg_1448;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_30_reg_510 <= PixArrayVal_val_V_25_reg_1430;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_30_reg_510 <= ap_phi_reg_pp0_iter3_PixArray_val_V_30_reg_510;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_31_reg_500_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_31_reg_500 <= PixArrayVal_val_V_29_reg_1454;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_31_reg_500 <= PixArrayVal_val_V_26_reg_1436;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_31_reg_500 <= ap_phi_reg_pp0_iter3_PixArray_val_V_31_reg_500;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_33_reg_480_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_33_reg_480 <= PixArrayVal_val_V_25_reg_1430;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_33_reg_480 <= PixArrayVal_val_V_22_reg_1412;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_33_reg_480 <= ap_phi_reg_pp0_iter3_PixArray_val_V_33_reg_480;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_34_reg_470_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_34_reg_470 <= PixArrayVal_val_V_26_reg_1436;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_34_reg_470 <= PixArrayVal_val_V_23_reg_1418;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_34_reg_470 <= ap_phi_reg_pp0_iter3_PixArray_val_V_34_reg_470;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_36_reg_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_36_reg_450 <= PixArrayVal_val_V_22_reg_1412;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_36_reg_450 <= PixArrayVal_val_V_19_reg_1365_pp0_iter2_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_36_reg_450 <= ap_phi_reg_pp0_iter3_PixArray_val_V_36_reg_450;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_37_reg_440_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_37_reg_440 <= PixArrayVal_val_V_23_reg_1418;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_37_reg_440 <= PixArrayVal_val_V_20_reg_1373_pp0_iter2_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_37_reg_440 <= ap_phi_reg_pp0_iter3_PixArray_val_V_37_reg_440;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_39_reg_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_39_reg_418 <= PixArrayVal_val_V_19_reg_1365_pp0_iter2_reg;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_39_reg_418 <= PixArrayVal_val_V_31_reg_360;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_39_reg_418 <= ap_phi_reg_pp0_iter3_PixArray_val_V_39_reg_418;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_40_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_40_reg_407 <= PixArrayVal_val_V_20_reg_1373_pp0_iter2_reg;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_40_reg_407 <= PixArrayVal_val_V_30_reg_350;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_40_reg_407 <= ap_phi_reg_pp0_iter3_PixArray_val_V_40_reg_407;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_42_reg_550_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_42_reg_550 <= PixArray_val_V_13_reg_1460;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_42_reg_550 <= PixArrayVal_val_V_27_reg_1442;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_42_reg_550 <= ap_phi_reg_pp0_iter3_PixArray_val_V_42_reg_550;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_43_reg_520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_43_reg_520 <= PixArrayVal_val_V_27_reg_1442;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_43_reg_520 <= PixArrayVal_val_V_24_reg_1424;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_43_reg_520 <= ap_phi_reg_pp0_iter3_PixArray_val_V_43_reg_520;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_44_reg_490_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_44_reg_490 <= PixArrayVal_val_V_24_reg_1424;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_44_reg_490 <= PixArrayVal_val_V_21_reg_1406;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_44_reg_490 <= ap_phi_reg_pp0_iter3_PixArray_val_V_44_reg_490;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_45_reg_460_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_45_reg_460 <= PixArrayVal_val_V_21_reg_1406;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_45_reg_460 <= PixArrayVal_val_V_18_reg_1357_pp0_iter2_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_45_reg_460 <= ap_phi_reg_pp0_iter3_PixArray_val_V_45_reg_460;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_PixArray_val_V_46_reg_429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((brmerge_read_reg_1299 = ap_const_lv1_0) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_46_reg_429 <= PixArrayVal_val_V_18_reg_1357_pp0_iter2_reg;
                elsif (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_46_reg_429 <= PixArrayVal_val_V_32_reg_370;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_PixArray_val_V_46_reg_429 <= ap_phi_reg_pp0_iter3_PixArray_val_V_46_reg_429;
                end if;
            end if; 
        end if;
    end process;

    x_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_start_int = ap_const_logic_1) and (icmp_ln252_fu_572_p2 = ap_const_lv1_0))) then 
                    x_fu_122 <= x_2_fu_578_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_122 <= ap_const_lv11_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln252_fu_572_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                LineBuf_val_V_1_addr_reg_1327 <= idxprom6_i_fu_584_p1(11 - 1 downto 0);
                LineBuf_val_V_2_addr_reg_1333 <= idxprom6_i_fu_584_p1(11 - 1 downto 0);
                LineBuf_val_V_3_addr_reg_1339 <= idxprom6_i_fu_584_p1(11 - 1 downto 0);
                LineBuf_val_V_4_addr_reg_1345 <= idxprom6_i_fu_584_p1(11 - 1 downto 0);
                LineBuf_val_V_5_addr_reg_1351 <= idxprom6_i_fu_584_p1(11 - 1 downto 0);
                LineBuf_val_V_addr_reg_1321 <= idxprom6_i_fu_584_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                LineBuf_val_V_1_addr_reg_1327_pp0_iter1_reg <= LineBuf_val_V_1_addr_reg_1327;
                LineBuf_val_V_2_addr_reg_1333_pp0_iter1_reg <= LineBuf_val_V_2_addr_reg_1333;
                LineBuf_val_V_3_addr_reg_1339_pp0_iter1_reg <= LineBuf_val_V_3_addr_reg_1339;
                LineBuf_val_V_4_addr_reg_1345_pp0_iter1_reg <= LineBuf_val_V_4_addr_reg_1345;
                LineBuf_val_V_5_addr_reg_1351_pp0_iter1_reg <= LineBuf_val_V_5_addr_reg_1351;
                LineBuf_val_V_addr_reg_1321_pp0_iter1_reg <= LineBuf_val_V_addr_reg_1321;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln252_reg_1317 <= icmp_ln252_fu_572_p2;
                icmp_ln252_reg_1317_pp0_iter1_reg <= icmp_ln252_reg_1317;
                    idxprom11_i_cast_reg_1307(5 downto 0) <= idxprom11_i_cast_fu_560_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                LineBuf_val_V_1_addr_reg_1327_pp0_iter2_reg <= LineBuf_val_V_1_addr_reg_1327_pp0_iter1_reg;
                LineBuf_val_V_2_addr_reg_1333_pp0_iter2_reg <= LineBuf_val_V_2_addr_reg_1333_pp0_iter1_reg;
                LineBuf_val_V_3_addr_reg_1339_pp0_iter2_reg <= LineBuf_val_V_3_addr_reg_1339_pp0_iter1_reg;
                LineBuf_val_V_4_addr_reg_1345_pp0_iter2_reg <= LineBuf_val_V_4_addr_reg_1345_pp0_iter1_reg;
                LineBuf_val_V_5_addr_reg_1351_pp0_iter2_reg <= LineBuf_val_V_5_addr_reg_1351_pp0_iter1_reg;
                PixArrayVal_val_V_18_reg_1357_pp0_iter2_reg <= PixArrayVal_val_V_18_reg_1357;
                PixArrayVal_val_V_19_reg_1365_pp0_iter2_reg <= PixArrayVal_val_V_19_reg_1365;
                PixArrayVal_val_V_20_reg_1373_pp0_iter2_reg <= PixArrayVal_val_V_20_reg_1373;
                PixArray_val_V_30_reg_510_pp0_iter5_reg <= PixArray_val_V_30_reg_510;
                PixArray_val_V_30_reg_510_pp0_iter6_reg <= PixArray_val_V_30_reg_510_pp0_iter5_reg;
                PixArray_val_V_31_reg_500_pp0_iter5_reg <= PixArray_val_V_31_reg_500;
                PixArray_val_V_31_reg_500_pp0_iter6_reg <= PixArray_val_V_31_reg_500_pp0_iter5_reg;
                PixArray_val_V_33_reg_480_pp0_iter5_reg <= PixArray_val_V_33_reg_480;
                PixArray_val_V_33_reg_480_pp0_iter6_reg <= PixArray_val_V_33_reg_480_pp0_iter5_reg;
                PixArray_val_V_33_reg_480_pp0_iter7_reg <= PixArray_val_V_33_reg_480_pp0_iter6_reg;
                PixArray_val_V_33_reg_480_pp0_iter8_reg <= PixArray_val_V_33_reg_480_pp0_iter7_reg;
                PixArray_val_V_34_reg_470_pp0_iter5_reg <= PixArray_val_V_34_reg_470;
                PixArray_val_V_34_reg_470_pp0_iter6_reg <= PixArray_val_V_34_reg_470_pp0_iter5_reg;
                PixArray_val_V_34_reg_470_pp0_iter7_reg <= PixArray_val_V_34_reg_470_pp0_iter6_reg;
                PixArray_val_V_34_reg_470_pp0_iter8_reg <= PixArray_val_V_34_reg_470_pp0_iter7_reg;
                PixArray_val_V_36_reg_450_pp0_iter10_reg <= PixArray_val_V_36_reg_450_pp0_iter9_reg;
                PixArray_val_V_36_reg_450_pp0_iter5_reg <= PixArray_val_V_36_reg_450;
                PixArray_val_V_36_reg_450_pp0_iter6_reg <= PixArray_val_V_36_reg_450_pp0_iter5_reg;
                PixArray_val_V_36_reg_450_pp0_iter7_reg <= PixArray_val_V_36_reg_450_pp0_iter6_reg;
                PixArray_val_V_36_reg_450_pp0_iter8_reg <= PixArray_val_V_36_reg_450_pp0_iter7_reg;
                PixArray_val_V_36_reg_450_pp0_iter9_reg <= PixArray_val_V_36_reg_450_pp0_iter8_reg;
                PixArray_val_V_37_reg_440_pp0_iter10_reg <= PixArray_val_V_37_reg_440_pp0_iter9_reg;
                PixArray_val_V_37_reg_440_pp0_iter5_reg <= PixArray_val_V_37_reg_440;
                PixArray_val_V_37_reg_440_pp0_iter6_reg <= PixArray_val_V_37_reg_440_pp0_iter5_reg;
                PixArray_val_V_37_reg_440_pp0_iter7_reg <= PixArray_val_V_37_reg_440_pp0_iter6_reg;
                PixArray_val_V_37_reg_440_pp0_iter8_reg <= PixArray_val_V_37_reg_440_pp0_iter7_reg;
                PixArray_val_V_37_reg_440_pp0_iter9_reg <= PixArray_val_V_37_reg_440_pp0_iter8_reg;
                PixArray_val_V_39_reg_418_pp0_iter10_reg <= PixArray_val_V_39_reg_418_pp0_iter9_reg;
                PixArray_val_V_39_reg_418_pp0_iter11_reg <= PixArray_val_V_39_reg_418_pp0_iter10_reg;
                PixArray_val_V_39_reg_418_pp0_iter12_reg <= PixArray_val_V_39_reg_418_pp0_iter11_reg;
                PixArray_val_V_39_reg_418_pp0_iter5_reg <= PixArray_val_V_39_reg_418;
                PixArray_val_V_39_reg_418_pp0_iter6_reg <= PixArray_val_V_39_reg_418_pp0_iter5_reg;
                PixArray_val_V_39_reg_418_pp0_iter7_reg <= PixArray_val_V_39_reg_418_pp0_iter6_reg;
                PixArray_val_V_39_reg_418_pp0_iter8_reg <= PixArray_val_V_39_reg_418_pp0_iter7_reg;
                PixArray_val_V_39_reg_418_pp0_iter9_reg <= PixArray_val_V_39_reg_418_pp0_iter8_reg;
                PixArray_val_V_40_reg_407_pp0_iter10_reg <= PixArray_val_V_40_reg_407_pp0_iter9_reg;
                PixArray_val_V_40_reg_407_pp0_iter11_reg <= PixArray_val_V_40_reg_407_pp0_iter10_reg;
                PixArray_val_V_40_reg_407_pp0_iter12_reg <= PixArray_val_V_40_reg_407_pp0_iter11_reg;
                PixArray_val_V_40_reg_407_pp0_iter5_reg <= PixArray_val_V_40_reg_407;
                PixArray_val_V_40_reg_407_pp0_iter6_reg <= PixArray_val_V_40_reg_407_pp0_iter5_reg;
                PixArray_val_V_40_reg_407_pp0_iter7_reg <= PixArray_val_V_40_reg_407_pp0_iter6_reg;
                PixArray_val_V_40_reg_407_pp0_iter8_reg <= PixArray_val_V_40_reg_407_pp0_iter7_reg;
                PixArray_val_V_40_reg_407_pp0_iter9_reg <= PixArray_val_V_40_reg_407_pp0_iter8_reg;
                PixArray_val_V_43_reg_520_pp0_iter5_reg <= PixArray_val_V_43_reg_520;
                PixArray_val_V_43_reg_520_pp0_iter6_reg <= PixArray_val_V_43_reg_520_pp0_iter5_reg;
                PixArray_val_V_44_reg_490_pp0_iter5_reg <= PixArray_val_V_44_reg_490;
                PixArray_val_V_44_reg_490_pp0_iter6_reg <= PixArray_val_V_44_reg_490_pp0_iter5_reg;
                PixArray_val_V_44_reg_490_pp0_iter7_reg <= PixArray_val_V_44_reg_490_pp0_iter6_reg;
                PixArray_val_V_44_reg_490_pp0_iter8_reg <= PixArray_val_V_44_reg_490_pp0_iter7_reg;
                PixArray_val_V_45_reg_460_pp0_iter10_reg <= PixArray_val_V_45_reg_460_pp0_iter9_reg;
                PixArray_val_V_45_reg_460_pp0_iter5_reg <= PixArray_val_V_45_reg_460;
                PixArray_val_V_45_reg_460_pp0_iter6_reg <= PixArray_val_V_45_reg_460_pp0_iter5_reg;
                PixArray_val_V_45_reg_460_pp0_iter7_reg <= PixArray_val_V_45_reg_460_pp0_iter6_reg;
                PixArray_val_V_45_reg_460_pp0_iter8_reg <= PixArray_val_V_45_reg_460_pp0_iter7_reg;
                PixArray_val_V_45_reg_460_pp0_iter9_reg <= PixArray_val_V_45_reg_460_pp0_iter8_reg;
                PixArray_val_V_46_reg_429_pp0_iter10_reg <= PixArray_val_V_46_reg_429_pp0_iter9_reg;
                PixArray_val_V_46_reg_429_pp0_iter11_reg <= PixArray_val_V_46_reg_429_pp0_iter10_reg;
                PixArray_val_V_46_reg_429_pp0_iter12_reg <= PixArray_val_V_46_reg_429_pp0_iter11_reg;
                PixArray_val_V_46_reg_429_pp0_iter5_reg <= PixArray_val_V_46_reg_429;
                PixArray_val_V_46_reg_429_pp0_iter6_reg <= PixArray_val_V_46_reg_429_pp0_iter5_reg;
                PixArray_val_V_46_reg_429_pp0_iter7_reg <= PixArray_val_V_46_reg_429_pp0_iter6_reg;
                PixArray_val_V_46_reg_429_pp0_iter8_reg <= PixArray_val_V_46_reg_429_pp0_iter7_reg;
                PixArray_val_V_46_reg_429_pp0_iter9_reg <= PixArray_val_V_46_reg_429_pp0_iter8_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                icmp_ln252_reg_1317_pp0_iter10_reg <= icmp_ln252_reg_1317_pp0_iter9_reg;
                icmp_ln252_reg_1317_pp0_iter11_reg <= icmp_ln252_reg_1317_pp0_iter10_reg;
                icmp_ln252_reg_1317_pp0_iter2_reg <= icmp_ln252_reg_1317_pp0_iter1_reg;
                icmp_ln252_reg_1317_pp0_iter3_reg <= icmp_ln252_reg_1317_pp0_iter2_reg;
                icmp_ln252_reg_1317_pp0_iter4_reg <= icmp_ln252_reg_1317_pp0_iter3_reg;
                icmp_ln252_reg_1317_pp0_iter5_reg <= icmp_ln252_reg_1317_pp0_iter4_reg;
                icmp_ln252_reg_1317_pp0_iter6_reg <= icmp_ln252_reg_1317_pp0_iter5_reg;
                icmp_ln252_reg_1317_pp0_iter7_reg <= icmp_ln252_reg_1317_pp0_iter6_reg;
                icmp_ln252_reg_1317_pp0_iter8_reg <= icmp_ln252_reg_1317_pp0_iter7_reg;
                icmp_ln252_reg_1317_pp0_iter9_reg <= icmp_ln252_reg_1317_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                PixArrayVal_val_V_16_reg_1518 <= PixArrayVal_val_V_16_fu_811_p3;
                PixArrayVal_val_V_17_reg_1513 <= PixArrayVal_val_V_17_fu_805_p3;
                PixArrayVal_val_V_reg_1523 <= PixArrayVal_val_V_fu_817_p3;
                select_ln302_1_reg_1498 <= select_ln302_1_fu_784_p3;
                select_ln302_2_reg_1503 <= select_ln302_2_fu_791_p3;
                select_ln302_3_reg_1508 <= select_ln302_3_fu_798_p3;
                select_ln302_reg_1493 <= select_ln302_fu_777_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln252_reg_1317 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                PixArrayVal_val_V_18_reg_1357 <= PixArrayVal_val_V_18_fu_599_p1;
                PixArrayVal_val_V_19_reg_1365 <= LineBuf_val_V_q1(15 downto 8);
                PixArrayVal_val_V_20_reg_1373 <= LineBuf_val_V_q1(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln252_reg_1317_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                PixArrayVal_val_V_21_reg_1406 <= PixArrayVal_val_V_21_fu_647_p1;
                PixArrayVal_val_V_22_reg_1412 <= LineBuf_val_V_1_q1(15 downto 8);
                PixArrayVal_val_V_23_reg_1418 <= LineBuf_val_V_1_q1(23 downto 16);
                PixArrayVal_val_V_24_reg_1424 <= PixArrayVal_val_V_24_fu_671_p1;
                PixArrayVal_val_V_25_reg_1430 <= LineBuf_val_V_2_q1(15 downto 8);
                PixArrayVal_val_V_26_reg_1436 <= LineBuf_val_V_2_q1(23 downto 16);
                PixArrayVal_val_V_27_reg_1442 <= PixArrayVal_val_V_27_fu_695_p1;
                PixArrayVal_val_V_28_reg_1448 <= LineBuf_val_V_3_q1(15 downto 8);
                PixArrayVal_val_V_29_reg_1454 <= LineBuf_val_V_3_q1(23 downto 16);
                PixArray_val_V_13_reg_1460 <= PixArray_val_V_13_fu_719_p1;
                PixArray_val_V_14_reg_1466 <= LineBuf_val_V_4_q1(15 downto 8);
                PixArray_val_V_15_reg_1472 <= LineBuf_val_V_4_q1(23 downto 16);
                PixArray_val_V_16_reg_1478 <= PixArray_val_V_16_fu_743_p1;
                PixArray_val_V_17_reg_1483 <= LineBuf_val_V_5_q1(15 downto 8);
                PixArray_val_V_18_reg_1488 <= LineBuf_val_V_5_q1(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                PixArray_val_V_27_reg_540 <= ap_phi_reg_pp0_iter4_PixArray_val_V_27_reg_540;
                PixArray_val_V_28_reg_530 <= ap_phi_reg_pp0_iter4_PixArray_val_V_28_reg_530;
                PixArray_val_V_30_reg_510 <= ap_phi_reg_pp0_iter4_PixArray_val_V_30_reg_510;
                PixArray_val_V_31_reg_500 <= ap_phi_reg_pp0_iter4_PixArray_val_V_31_reg_500;
                PixArray_val_V_33_reg_480 <= ap_phi_reg_pp0_iter4_PixArray_val_V_33_reg_480;
                PixArray_val_V_34_reg_470 <= ap_phi_reg_pp0_iter4_PixArray_val_V_34_reg_470;
                PixArray_val_V_36_reg_450 <= ap_phi_reg_pp0_iter4_PixArray_val_V_36_reg_450;
                PixArray_val_V_37_reg_440 <= ap_phi_reg_pp0_iter4_PixArray_val_V_37_reg_440;
                PixArray_val_V_39_reg_418 <= ap_phi_reg_pp0_iter4_PixArray_val_V_39_reg_418;
                PixArray_val_V_40_reg_407 <= ap_phi_reg_pp0_iter4_PixArray_val_V_40_reg_407;
                PixArray_val_V_42_reg_550 <= ap_phi_reg_pp0_iter4_PixArray_val_V_42_reg_550;
                PixArray_val_V_43_reg_520 <= ap_phi_reg_pp0_iter4_PixArray_val_V_43_reg_520;
                PixArray_val_V_44_reg_490 <= ap_phi_reg_pp0_iter4_PixArray_val_V_44_reg_490;
                PixArray_val_V_45_reg_460 <= ap_phi_reg_pp0_iter4_PixArray_val_V_45_reg_460;
                PixArray_val_V_46_reg_429 <= ap_phi_reg_pp0_iter4_PixArray_val_V_46_reg_429;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_PixArrayVal_val_V_30_reg_350 <= ap_phi_reg_pp0_iter0_PixArrayVal_val_V_30_reg_350;
                ap_phi_reg_pp0_iter1_PixArrayVal_val_V_31_reg_360 <= ap_phi_reg_pp0_iter0_PixArrayVal_val_V_31_reg_360;
                ap_phi_reg_pp0_iter1_PixArrayVal_val_V_32_reg_370 <= ap_phi_reg_pp0_iter0_PixArrayVal_val_V_32_reg_370;
                ap_phi_reg_pp0_iter1_PixArray_val_V_27_reg_540 <= ap_phi_reg_pp0_iter0_PixArray_val_V_27_reg_540;
                ap_phi_reg_pp0_iter1_PixArray_val_V_28_reg_530 <= ap_phi_reg_pp0_iter0_PixArray_val_V_28_reg_530;
                ap_phi_reg_pp0_iter1_PixArray_val_V_30_reg_510 <= ap_phi_reg_pp0_iter0_PixArray_val_V_30_reg_510;
                ap_phi_reg_pp0_iter1_PixArray_val_V_31_reg_500 <= ap_phi_reg_pp0_iter0_PixArray_val_V_31_reg_500;
                ap_phi_reg_pp0_iter1_PixArray_val_V_33_reg_480 <= ap_phi_reg_pp0_iter0_PixArray_val_V_33_reg_480;
                ap_phi_reg_pp0_iter1_PixArray_val_V_34_reg_470 <= ap_phi_reg_pp0_iter0_PixArray_val_V_34_reg_470;
                ap_phi_reg_pp0_iter1_PixArray_val_V_36_reg_450 <= ap_phi_reg_pp0_iter0_PixArray_val_V_36_reg_450;
                ap_phi_reg_pp0_iter1_PixArray_val_V_37_reg_440 <= ap_phi_reg_pp0_iter0_PixArray_val_V_37_reg_440;
                ap_phi_reg_pp0_iter1_PixArray_val_V_39_reg_418 <= ap_phi_reg_pp0_iter0_PixArray_val_V_39_reg_418;
                ap_phi_reg_pp0_iter1_PixArray_val_V_40_reg_407 <= ap_phi_reg_pp0_iter0_PixArray_val_V_40_reg_407;
                ap_phi_reg_pp0_iter1_PixArray_val_V_42_reg_550 <= ap_phi_reg_pp0_iter0_PixArray_val_V_42_reg_550;
                ap_phi_reg_pp0_iter1_PixArray_val_V_43_reg_520 <= ap_phi_reg_pp0_iter0_PixArray_val_V_43_reg_520;
                ap_phi_reg_pp0_iter1_PixArray_val_V_44_reg_490 <= ap_phi_reg_pp0_iter0_PixArray_val_V_44_reg_490;
                ap_phi_reg_pp0_iter1_PixArray_val_V_45_reg_460 <= ap_phi_reg_pp0_iter0_PixArray_val_V_45_reg_460;
                ap_phi_reg_pp0_iter1_PixArray_val_V_46_reg_429 <= ap_phi_reg_pp0_iter0_PixArray_val_V_46_reg_429;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_PixArray_val_V_27_reg_540 <= ap_phi_reg_pp0_iter1_PixArray_val_V_27_reg_540;
                ap_phi_reg_pp0_iter2_PixArray_val_V_28_reg_530 <= ap_phi_reg_pp0_iter1_PixArray_val_V_28_reg_530;
                ap_phi_reg_pp0_iter2_PixArray_val_V_30_reg_510 <= ap_phi_reg_pp0_iter1_PixArray_val_V_30_reg_510;
                ap_phi_reg_pp0_iter2_PixArray_val_V_31_reg_500 <= ap_phi_reg_pp0_iter1_PixArray_val_V_31_reg_500;
                ap_phi_reg_pp0_iter2_PixArray_val_V_33_reg_480 <= ap_phi_reg_pp0_iter1_PixArray_val_V_33_reg_480;
                ap_phi_reg_pp0_iter2_PixArray_val_V_34_reg_470 <= ap_phi_reg_pp0_iter1_PixArray_val_V_34_reg_470;
                ap_phi_reg_pp0_iter2_PixArray_val_V_36_reg_450 <= ap_phi_reg_pp0_iter1_PixArray_val_V_36_reg_450;
                ap_phi_reg_pp0_iter2_PixArray_val_V_37_reg_440 <= ap_phi_reg_pp0_iter1_PixArray_val_V_37_reg_440;
                ap_phi_reg_pp0_iter2_PixArray_val_V_39_reg_418 <= ap_phi_reg_pp0_iter1_PixArray_val_V_39_reg_418;
                ap_phi_reg_pp0_iter2_PixArray_val_V_40_reg_407 <= ap_phi_reg_pp0_iter1_PixArray_val_V_40_reg_407;
                ap_phi_reg_pp0_iter2_PixArray_val_V_42_reg_550 <= ap_phi_reg_pp0_iter1_PixArray_val_V_42_reg_550;
                ap_phi_reg_pp0_iter2_PixArray_val_V_43_reg_520 <= ap_phi_reg_pp0_iter1_PixArray_val_V_43_reg_520;
                ap_phi_reg_pp0_iter2_PixArray_val_V_44_reg_490 <= ap_phi_reg_pp0_iter1_PixArray_val_V_44_reg_490;
                ap_phi_reg_pp0_iter2_PixArray_val_V_45_reg_460 <= ap_phi_reg_pp0_iter1_PixArray_val_V_45_reg_460;
                ap_phi_reg_pp0_iter2_PixArray_val_V_46_reg_429 <= ap_phi_reg_pp0_iter1_PixArray_val_V_46_reg_429;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_PixArray_val_V_27_reg_540 <= ap_phi_reg_pp0_iter2_PixArray_val_V_27_reg_540;
                ap_phi_reg_pp0_iter3_PixArray_val_V_28_reg_530 <= ap_phi_reg_pp0_iter2_PixArray_val_V_28_reg_530;
                ap_phi_reg_pp0_iter3_PixArray_val_V_30_reg_510 <= ap_phi_reg_pp0_iter2_PixArray_val_V_30_reg_510;
                ap_phi_reg_pp0_iter3_PixArray_val_V_31_reg_500 <= ap_phi_reg_pp0_iter2_PixArray_val_V_31_reg_500;
                ap_phi_reg_pp0_iter3_PixArray_val_V_33_reg_480 <= ap_phi_reg_pp0_iter2_PixArray_val_V_33_reg_480;
                ap_phi_reg_pp0_iter3_PixArray_val_V_34_reg_470 <= ap_phi_reg_pp0_iter2_PixArray_val_V_34_reg_470;
                ap_phi_reg_pp0_iter3_PixArray_val_V_36_reg_450 <= ap_phi_reg_pp0_iter2_PixArray_val_V_36_reg_450;
                ap_phi_reg_pp0_iter3_PixArray_val_V_37_reg_440 <= ap_phi_reg_pp0_iter2_PixArray_val_V_37_reg_440;
                ap_phi_reg_pp0_iter3_PixArray_val_V_39_reg_418 <= ap_phi_reg_pp0_iter2_PixArray_val_V_39_reg_418;
                ap_phi_reg_pp0_iter3_PixArray_val_V_40_reg_407 <= ap_phi_reg_pp0_iter2_PixArray_val_V_40_reg_407;
                ap_phi_reg_pp0_iter3_PixArray_val_V_42_reg_550 <= ap_phi_reg_pp0_iter2_PixArray_val_V_42_reg_550;
                ap_phi_reg_pp0_iter3_PixArray_val_V_43_reg_520 <= ap_phi_reg_pp0_iter2_PixArray_val_V_43_reg_520;
                ap_phi_reg_pp0_iter3_PixArray_val_V_44_reg_490 <= ap_phi_reg_pp0_iter2_PixArray_val_V_44_reg_490;
                ap_phi_reg_pp0_iter3_PixArray_val_V_45_reg_460 <= ap_phi_reg_pp0_iter2_PixArray_val_V_45_reg_460;
                ap_phi_reg_pp0_iter3_PixArray_val_V_46_reg_429 <= ap_phi_reg_pp0_iter2_PixArray_val_V_46_reg_429;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = OutputWriteEn_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln352_1_reg_1832 <= icmp_ln352_1_fu_992_p2;
                icmp_ln352_2_reg_1848 <= icmp_ln352_2_fu_1014_p2;
                icmp_ln352_reg_1816 <= icmp_ln352_fu_970_p2;
                tmp_2_reg_1826 <= grp_fu_1259_p3(26 downto 26);
                tmp_4_reg_1842 <= grp_fu_1268_p3(26 downto 26);
                tmp_reg_1810 <= grp_fu_1250_p3(26 downto 26);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op63_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_2_reg_1381 <= SrcYUV_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = OutputWriteEn_1) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_11_reg_1821 <= grp_fu_1259_p3;
                sum_17_reg_1837 <= grp_fu_1268_p3;
                sum_reg_1805 <= grp_fu_1250_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = OutputWriteEn_1) and (icmp_ln252_reg_1317_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_18_reg_1582 <= grp_fu_1133_p3;
                sum_23_reg_1587 <= grp_fu_1141_p3;
                sum_28_reg_1592 <= grp_fu_1149_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = OutputWriteEn_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln252_reg_1317_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_19_reg_1639 <= grp_fu_1157_p3;
                sum_24_reg_1644 <= grp_fu_1165_p3;
                sum_29_reg_1649 <= grp_fu_1173_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = OutputWriteEn_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln252_reg_1317_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_20_reg_1696 <= grp_fu_1181_p3;
                sum_25_reg_1701 <= grp_fu_1189_p3;
                sum_30_reg_1706 <= grp_fu_1197_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = OutputWriteEn_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (icmp_ln252_reg_1317_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_21_reg_1738 <= grp_fu_1205_p3;
                sum_26_reg_1743 <= grp_fu_1212_p3;
                sum_31_reg_1748 <= grp_fu_1219_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = OutputWriteEn_1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_22_reg_1790 <= grp_fu_1226_p3;
                sum_27_reg_1795 <= grp_fu_1234_p3;
                sum_32_reg_1800 <= grp_fu_1242_p3;
            end if;
        end if;
    end process;
    idxprom11_i_cast_reg_1307(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    FiltCoeff_1_address0 <= idxprom11_i_cast_reg_1307(6 - 1 downto 0);

    FiltCoeff_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            FiltCoeff_1_ce0 <= ap_const_logic_1;
        else 
            FiltCoeff_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    FiltCoeff_2_address0 <= idxprom11_i_cast_reg_1307(6 - 1 downto 0);

    FiltCoeff_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            FiltCoeff_2_ce0 <= ap_const_logic_1;
        else 
            FiltCoeff_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    FiltCoeff_3_address0 <= idxprom11_i_cast_reg_1307(6 - 1 downto 0);

    FiltCoeff_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            FiltCoeff_3_ce0 <= ap_const_logic_1;
        else 
            FiltCoeff_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    FiltCoeff_4_address0 <= idxprom11_i_cast_reg_1307(6 - 1 downto 0);

    FiltCoeff_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            FiltCoeff_4_ce0 <= ap_const_logic_1;
        else 
            FiltCoeff_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    FiltCoeff_5_address0 <= idxprom11_i_cast_reg_1307(6 - 1 downto 0);

    FiltCoeff_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            FiltCoeff_5_ce0 <= ap_const_logic_1;
        else 
            FiltCoeff_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    FiltCoeff_address0 <= idxprom11_i_cast_reg_1307(6 - 1 downto 0);

    FiltCoeff_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            FiltCoeff_ce0 <= ap_const_logic_1;
        else 
            FiltCoeff_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    LineBufVal_V_7_fu_767_p4 <= ((ap_phi_mux_PixArrayVal_val_V_30_phi_fu_353_p4 & ap_phi_mux_PixArrayVal_val_V_31_phi_fu_363_p4) & ap_phi_mux_PixArrayVal_val_V_32_phi_fu_373_p4);
    LineBuf_val_V_1_address0 <= LineBuf_val_V_1_addr_reg_1327_pp0_iter2_reg;
    LineBuf_val_V_1_address1 <= LineBuf_val_V_1_addr_reg_1327;

    LineBuf_val_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_1_ce0 <= ap_const_logic_1;
        else 
            LineBuf_val_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuf_val_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_1_ce1 <= ap_const_logic_1;
        else 
            LineBuf_val_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    LineBuf_val_V_1_d0 <= ((PixArrayVal_val_V_17_reg_1513 & PixArrayVal_val_V_16_reg_1518) & PixArrayVal_val_V_reg_1523);

    LineBuf_val_V_1_we0_assign_proc : process(ap_enable_reg_pp0_iter3, brmerge, ap_block_pp0_stage0_11001, icmp_ln252_reg_1317_pp0_iter2_reg)
    begin
        if (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_1_we0 <= ap_const_logic_1;
        else 
            LineBuf_val_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    LineBuf_val_V_2_address0 <= LineBuf_val_V_2_addr_reg_1333_pp0_iter2_reg;
    LineBuf_val_V_2_address1 <= LineBuf_val_V_2_addr_reg_1333;

    LineBuf_val_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_2_ce0 <= ap_const_logic_1;
        else 
            LineBuf_val_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuf_val_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_2_ce1 <= ap_const_logic_1;
        else 
            LineBuf_val_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    LineBuf_val_V_2_d0 <= select_ln302_3_reg_1508;

    LineBuf_val_V_2_we0_assign_proc : process(ap_enable_reg_pp0_iter3, brmerge, ap_block_pp0_stage0_11001, icmp_ln252_reg_1317_pp0_iter2_reg)
    begin
        if (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_2_we0 <= ap_const_logic_1;
        else 
            LineBuf_val_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    LineBuf_val_V_3_address0 <= LineBuf_val_V_3_addr_reg_1339_pp0_iter2_reg;
    LineBuf_val_V_3_address1 <= LineBuf_val_V_3_addr_reg_1339;

    LineBuf_val_V_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_3_ce0 <= ap_const_logic_1;
        else 
            LineBuf_val_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuf_val_V_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_3_ce1 <= ap_const_logic_1;
        else 
            LineBuf_val_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    LineBuf_val_V_3_d0 <= select_ln302_2_reg_1503;

    LineBuf_val_V_3_we0_assign_proc : process(ap_enable_reg_pp0_iter3, brmerge, ap_block_pp0_stage0_11001, icmp_ln252_reg_1317_pp0_iter2_reg)
    begin
        if (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_3_we0 <= ap_const_logic_1;
        else 
            LineBuf_val_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    LineBuf_val_V_4_address0 <= LineBuf_val_V_4_addr_reg_1345_pp0_iter2_reg;
    LineBuf_val_V_4_address1 <= LineBuf_val_V_4_addr_reg_1345;

    LineBuf_val_V_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_4_ce0 <= ap_const_logic_1;
        else 
            LineBuf_val_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuf_val_V_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_4_ce1 <= ap_const_logic_1;
        else 
            LineBuf_val_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    LineBuf_val_V_4_d0 <= select_ln302_1_reg_1498;

    LineBuf_val_V_4_we0_assign_proc : process(ap_enable_reg_pp0_iter3, brmerge, ap_block_pp0_stage0_11001, icmp_ln252_reg_1317_pp0_iter2_reg)
    begin
        if (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_4_we0 <= ap_const_logic_1;
        else 
            LineBuf_val_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    LineBuf_val_V_5_address0 <= LineBuf_val_V_5_addr_reg_1351_pp0_iter2_reg;
    LineBuf_val_V_5_address1 <= LineBuf_val_V_5_addr_reg_1351;

    LineBuf_val_V_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_5_ce0 <= ap_const_logic_1;
        else 
            LineBuf_val_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuf_val_V_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_5_ce1 <= ap_const_logic_1;
        else 
            LineBuf_val_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    LineBuf_val_V_5_d0 <= select_ln302_reg_1493;

    LineBuf_val_V_5_we0_assign_proc : process(ap_enable_reg_pp0_iter3, brmerge, ap_block_pp0_stage0_11001, icmp_ln252_reg_1317_pp0_iter2_reg)
    begin
        if (((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_5_we0 <= ap_const_logic_1;
        else 
            LineBuf_val_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    LineBuf_val_V_address0 <= LineBuf_val_V_addr_reg_1321_pp0_iter1_reg;
    LineBuf_val_V_address1 <= idxprom6_i_fu_584_p1(11 - 1 downto 0);

    LineBuf_val_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_ce0 <= ap_const_logic_1;
        else 
            LineBuf_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuf_val_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_ce1 <= ap_const_logic_1;
        else 
            LineBuf_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    LineBuf_val_V_d0 <= p_Result_2_reg_1381;

    LineBuf_val_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, brmerge, cmp119, ap_block_pp0_stage0_11001, icmp_ln252_reg_1317_pp0_iter1_reg)
    begin
        if (((cmp119 = ap_const_lv1_1) and (brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuf_val_V_we0 <= ap_const_logic_1;
        else 
            LineBuf_val_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OutYUV_blk_n_assign_proc : process(ap_enable_reg_pp0_iter17, OutYUV_full_n, OutputWriteEn_1, ap_block_pp0_stage0)
    begin
        if (((ap_const_lv1_1 = OutputWriteEn_1) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            OutYUV_blk_n <= OutYUV_full_n;
        else 
            OutYUV_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    OutYUV_din <= ((select_ln260_2_fu_1114_p3 & select_ln260_1_fu_1080_p3) & select_ln260_fu_1046_p3);

    OutYUV_write_assign_proc : process(ap_enable_reg_pp0_iter17, OutputWriteEn_1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = OutputWriteEn_1) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            OutYUV_write <= ap_const_logic_1;
        else 
            OutYUV_write <= ap_const_logic_0;
        end if; 
    end process;

    PixArrayVal_val_V_16_fu_811_p3 <= 
        ap_phi_mux_PixArrayVal_val_V_31_phi_fu_363_p4 when (cmp159(0) = '1') else 
        PixArrayVal_val_V_19_reg_1365;
    PixArrayVal_val_V_17_fu_805_p3 <= 
        ap_phi_mux_PixArrayVal_val_V_30_phi_fu_353_p4 when (cmp159(0) = '1') else 
        PixArrayVal_val_V_20_reg_1373;
    PixArrayVal_val_V_18_fu_599_p1 <= LineBuf_val_V_q1(8 - 1 downto 0);
    PixArrayVal_val_V_21_fu_647_p1 <= LineBuf_val_V_1_q1(8 - 1 downto 0);
    PixArrayVal_val_V_24_fu_671_p1 <= LineBuf_val_V_2_q1(8 - 1 downto 0);
    PixArrayVal_val_V_27_fu_695_p1 <= LineBuf_val_V_3_q1(8 - 1 downto 0);
    PixArrayVal_val_V_fu_817_p3 <= 
        ap_phi_mux_PixArrayVal_val_V_32_phi_fu_373_p4 when (cmp159(0) = '1') else 
        PixArrayVal_val_V_18_reg_1357;
    PixArray_val_V_13_fu_719_p1 <= LineBuf_val_V_4_q1(8 - 1 downto 0);
    PixArray_val_V_16_fu_743_p1 <= LineBuf_val_V_5_q1(8 - 1 downto 0);
    PixArray_val_V_20_fu_623_p1 <= SrcYUV_dout(8 - 1 downto 0);

    SrcYUV_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, SrcYUV_empty_n, ap_predicate_op63_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op63_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            SrcYUV_blk_n <= SrcYUV_empty_n;
        else 
            SrcYUV_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    SrcYUV_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op63_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op63_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            SrcYUV_read <= ap_const_logic_1;
        else 
            SrcYUV_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter17, SrcYUV_empty_n, ap_predicate_op63_read_state2, OutYUV_full_n, OutputWriteEn_1)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op63_read_state2 = ap_const_boolean_1) and (ap_const_logic_0 = SrcYUV_empty_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_lv1_1 = OutputWriteEn_1) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_0 = OutYUV_full_n)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter17, SrcYUV_empty_n, ap_predicate_op63_read_state2, OutYUV_full_n, OutputWriteEn_1)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op63_read_state2 = ap_const_boolean_1) and (ap_const_logic_0 = SrcYUV_empty_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_lv1_1 = OutputWriteEn_1) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_0 = OutYUV_full_n)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter17, SrcYUV_empty_n, ap_predicate_op63_read_state2, OutYUV_full_n, OutputWriteEn_1)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op63_read_state2 = ap_const_boolean_1) and (ap_const_logic_0 = SrcYUV_empty_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_lv1_1 = OutputWriteEn_1) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_0 = OutYUV_full_n)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_pp0_stage0_iter17_assign_proc : process(OutYUV_full_n, OutputWriteEn_1)
    begin
                ap_block_state18_pp0_stage0_iter17 <= ((ap_const_lv1_1 = OutputWriteEn_1) and (ap_const_logic_0 = OutYUV_full_n));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(SrcYUV_empty_n, ap_predicate_op63_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op63_read_state2 = ap_const_boolean_1) and (ap_const_logic_0 = SrcYUV_empty_n));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_725_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_725 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_733_assign_proc : process(cmp119_read_reg_1284, brmerge, icmp_ln252_reg_1317_pp0_iter1_reg)
    begin
                ap_condition_733 <= ((cmp119_read_reg_1284 = ap_const_lv1_0) and (brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_94_assign_proc : process(icmp_ln252_reg_1317, brmerge, cmp119)
    begin
                ap_condition_94 <= ((cmp119 = ap_const_lv1_1) and (brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln252_fu_572_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln252_fu_572_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter12_stage0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_subdone, icmp_ln252_reg_1317_pp0_iter11_reg)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (icmp_ln252_reg_1317_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter12_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter12_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter16_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter16_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_106_assign_proc : process(ap_predicate_op106_store_state4)
    begin
                ap_enable_operation_106 <= (ap_predicate_op106_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_107_assign_proc : process(ap_predicate_op107_store_state4)
    begin
                ap_enable_operation_107 <= (ap_predicate_op107_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_108_assign_proc : process(ap_predicate_op108_store_state4)
    begin
                ap_enable_operation_108 <= (ap_predicate_op108_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_109_assign_proc : process(ap_predicate_op109_store_state4)
    begin
                ap_enable_operation_109 <= (ap_predicate_op109_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_111_assign_proc : process(ap_predicate_op111_store_state4)
    begin
                ap_enable_operation_111 <= (ap_predicate_op111_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_45_assign_proc : process(icmp_ln252_fu_572_p2)
    begin
                ap_enable_operation_45 <= (icmp_ln252_fu_572_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_54_assign_proc : process(icmp_ln252_reg_1317)
    begin
                ap_enable_operation_54 <= (icmp_ln252_reg_1317 = ap_const_lv1_0);
    end process;


    ap_enable_operation_58_assign_proc : process(icmp_ln252_reg_1317)
    begin
                ap_enable_operation_58 <= (icmp_ln252_reg_1317 = ap_const_lv1_0);
    end process;


    ap_enable_operation_59_assign_proc : process(icmp_ln252_reg_1317)
    begin
                ap_enable_operation_59 <= (icmp_ln252_reg_1317 = ap_const_lv1_0);
    end process;


    ap_enable_operation_60_assign_proc : process(icmp_ln252_reg_1317)
    begin
                ap_enable_operation_60 <= (icmp_ln252_reg_1317 = ap_const_lv1_0);
    end process;


    ap_enable_operation_61_assign_proc : process(icmp_ln252_reg_1317)
    begin
                ap_enable_operation_61 <= (icmp_ln252_reg_1317 = ap_const_lv1_0);
    end process;


    ap_enable_operation_62_assign_proc : process(icmp_ln252_reg_1317)
    begin
                ap_enable_operation_62 <= (icmp_ln252_reg_1317 = ap_const_lv1_0);
    end process;


    ap_enable_operation_69_assign_proc : process(icmp_ln252_reg_1317_pp0_iter1_reg)
    begin
                ap_enable_operation_69 <= (icmp_ln252_reg_1317_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_73_assign_proc : process(icmp_ln252_reg_1317_pp0_iter1_reg)
    begin
                ap_enable_operation_73 <= (icmp_ln252_reg_1317_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_77_assign_proc : process(icmp_ln252_reg_1317_pp0_iter1_reg)
    begin
                ap_enable_operation_77 <= (icmp_ln252_reg_1317_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_81_assign_proc : process(icmp_ln252_reg_1317_pp0_iter1_reg)
    begin
                ap_enable_operation_81 <= (icmp_ln252_reg_1317_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_85_assign_proc : process(icmp_ln252_reg_1317_pp0_iter1_reg)
    begin
                ap_enable_operation_85 <= (icmp_ln252_reg_1317_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_90_assign_proc : process(ap_predicate_op90_store_state3)
    begin
                ap_enable_operation_90 <= (ap_predicate_op90_store_state3 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state1_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_start_int)
    begin
                ap_enable_state1_pp0_iter0_stage0 <= ((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state2_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state2_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state3_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state3_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state4_pp0_iter3_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3)
    begin
                ap_enable_state4_pp0_iter3_stage0 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_PixArrayVal_val_V_30_phi_fu_353_p4_assign_proc : process(cmp119_read_reg_1284, brmerge, icmp_ln252_reg_1317_pp0_iter1_reg, PixArrayVal_val_V_20_reg_1373, ap_phi_reg_pp0_iter2_PixArrayVal_val_V_30_reg_350)
    begin
        if (((cmp119_read_reg_1284 = ap_const_lv1_0) and (brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter1_reg = ap_const_lv1_0))) then 
            ap_phi_mux_PixArrayVal_val_V_30_phi_fu_353_p4 <= PixArrayVal_val_V_20_reg_1373;
        else 
            ap_phi_mux_PixArrayVal_val_V_30_phi_fu_353_p4 <= ap_phi_reg_pp0_iter2_PixArrayVal_val_V_30_reg_350;
        end if; 
    end process;


    ap_phi_mux_PixArrayVal_val_V_31_phi_fu_363_p4_assign_proc : process(cmp119_read_reg_1284, brmerge, icmp_ln252_reg_1317_pp0_iter1_reg, PixArrayVal_val_V_19_reg_1365, ap_phi_reg_pp0_iter2_PixArrayVal_val_V_31_reg_360)
    begin
        if (((cmp119_read_reg_1284 = ap_const_lv1_0) and (brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter1_reg = ap_const_lv1_0))) then 
            ap_phi_mux_PixArrayVal_val_V_31_phi_fu_363_p4 <= PixArrayVal_val_V_19_reg_1365;
        else 
            ap_phi_mux_PixArrayVal_val_V_31_phi_fu_363_p4 <= ap_phi_reg_pp0_iter2_PixArrayVal_val_V_31_reg_360;
        end if; 
    end process;


    ap_phi_mux_PixArrayVal_val_V_32_phi_fu_373_p4_assign_proc : process(cmp119_read_reg_1284, brmerge, icmp_ln252_reg_1317_pp0_iter1_reg, PixArrayVal_val_V_18_reg_1357, ap_phi_reg_pp0_iter2_PixArrayVal_val_V_32_reg_370)
    begin
        if (((cmp119_read_reg_1284 = ap_const_lv1_0) and (brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter1_reg = ap_const_lv1_0))) then 
            ap_phi_mux_PixArrayVal_val_V_32_phi_fu_373_p4 <= PixArrayVal_val_V_18_reg_1357;
        else 
            ap_phi_mux_PixArrayVal_val_V_32_phi_fu_373_p4 <= ap_phi_reg_pp0_iter2_PixArrayVal_val_V_32_reg_370;
        end if; 
    end process;


    ap_phi_mux_PixArray_val_V_24_phi_fu_392_p4_assign_proc : process(brmerge_read_reg_1299, brmerge, icmp_ln252_reg_1317_pp0_iter2_reg, PixArray_val_V_14_reg_1466, PixArray_val_V_17_reg_1483, ap_phi_reg_pp0_iter3_PixArray_val_V_24_reg_389)
    begin
        if ((icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0)) then
            if ((brmerge_read_reg_1299 = ap_const_lv1_0)) then 
                ap_phi_mux_PixArray_val_V_24_phi_fu_392_p4 <= PixArray_val_V_17_reg_1483;
            elsif ((brmerge = ap_const_lv1_1)) then 
                ap_phi_mux_PixArray_val_V_24_phi_fu_392_p4 <= PixArray_val_V_14_reg_1466;
            else 
                ap_phi_mux_PixArray_val_V_24_phi_fu_392_p4 <= ap_phi_reg_pp0_iter3_PixArray_val_V_24_reg_389;
            end if;
        else 
            ap_phi_mux_PixArray_val_V_24_phi_fu_392_p4 <= ap_phi_reg_pp0_iter3_PixArray_val_V_24_reg_389;
        end if; 
    end process;


    ap_phi_mux_PixArray_val_V_25_phi_fu_383_p4_assign_proc : process(brmerge_read_reg_1299, brmerge, icmp_ln252_reg_1317_pp0_iter2_reg, PixArray_val_V_15_reg_1472, PixArray_val_V_18_reg_1488, ap_phi_reg_pp0_iter3_PixArray_val_V_25_reg_380)
    begin
        if ((icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0)) then
            if ((brmerge_read_reg_1299 = ap_const_lv1_0)) then 
                ap_phi_mux_PixArray_val_V_25_phi_fu_383_p4 <= PixArray_val_V_18_reg_1488;
            elsif ((brmerge = ap_const_lv1_1)) then 
                ap_phi_mux_PixArray_val_V_25_phi_fu_383_p4 <= PixArray_val_V_15_reg_1472;
            else 
                ap_phi_mux_PixArray_val_V_25_phi_fu_383_p4 <= ap_phi_reg_pp0_iter3_PixArray_val_V_25_reg_380;
            end if;
        else 
            ap_phi_mux_PixArray_val_V_25_phi_fu_383_p4 <= ap_phi_reg_pp0_iter3_PixArray_val_V_25_reg_380;
        end if; 
    end process;


    ap_phi_mux_PixArray_val_V_phi_fu_401_p4_assign_proc : process(brmerge_read_reg_1299, brmerge, icmp_ln252_reg_1317_pp0_iter2_reg, PixArray_val_V_13_reg_1460, PixArray_val_V_16_reg_1478, ap_phi_reg_pp0_iter3_PixArray_val_V_reg_398)
    begin
        if ((icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0)) then
            if ((brmerge_read_reg_1299 = ap_const_lv1_0)) then 
                ap_phi_mux_PixArray_val_V_phi_fu_401_p4 <= PixArray_val_V_16_reg_1478;
            elsif ((brmerge = ap_const_lv1_1)) then 
                ap_phi_mux_PixArray_val_V_phi_fu_401_p4 <= PixArray_val_V_13_reg_1460;
            else 
                ap_phi_mux_PixArray_val_V_phi_fu_401_p4 <= ap_phi_reg_pp0_iter3_PixArray_val_V_reg_398;
            end if;
        else 
            ap_phi_mux_PixArray_val_V_phi_fu_401_p4 <= ap_phi_reg_pp0_iter3_PixArray_val_V_reg_398;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_PixArrayVal_val_V_30_reg_350 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArrayVal_val_V_31_reg_360 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArrayVal_val_V_32_reg_370 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_27_reg_540 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_28_reg_530 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_30_reg_510 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_31_reg_500 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_33_reg_480 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_34_reg_470 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_36_reg_450 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_37_reg_440 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_39_reg_418 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_40_reg_407 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_42_reg_550 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_43_reg_520 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_44_reg_490 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_45_reg_460 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_PixArray_val_V_46_reg_429 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter3_PixArray_val_V_24_reg_389 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter3_PixArray_val_V_25_reg_380 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter3_PixArray_val_V_reg_398 <= "XXXXXXXX";

    ap_predicate_op106_store_state4_assign_proc : process(brmerge, icmp_ln252_reg_1317_pp0_iter2_reg)
    begin
                ap_predicate_op106_store_state4 <= ((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op107_store_state4_assign_proc : process(brmerge, icmp_ln252_reg_1317_pp0_iter2_reg)
    begin
                ap_predicate_op107_store_state4 <= ((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op108_store_state4_assign_proc : process(brmerge, icmp_ln252_reg_1317_pp0_iter2_reg)
    begin
                ap_predicate_op108_store_state4 <= ((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op109_store_state4_assign_proc : process(brmerge, icmp_ln252_reg_1317_pp0_iter2_reg)
    begin
                ap_predicate_op109_store_state4 <= ((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op111_store_state4_assign_proc : process(brmerge, icmp_ln252_reg_1317_pp0_iter2_reg)
    begin
                ap_predicate_op111_store_state4 <= ((brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op63_read_state2_assign_proc : process(icmp_ln252_reg_1317, brmerge, cmp119)
    begin
                ap_predicate_op63_read_state2 <= ((cmp119 = ap_const_lv1_1) and (brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317 = ap_const_lv1_0));
    end process;


    ap_predicate_op90_store_state3_assign_proc : process(brmerge, cmp119, icmp_ln252_reg_1317_pp0_iter1_reg)
    begin
                ap_predicate_op90_store_state3 <= ((cmp119 = ap_const_lv1_1) and (brmerge = ap_const_lv1_1) and (icmp_ln252_reg_1317_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_x_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_fu_122, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_x_1 <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_x_1 <= x_fu_122;
        end if; 
    end process;

    brmerge_read_reg_1299 <= brmerge;
    cmp119_read_reg_1284 <= cmp119;

    grp_fu_1133_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1133_ce <= ap_const_logic_1;
        else 
            grp_fu_1133_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1133_p0 <= sext_ln1540_fu_835_p1(16 - 1 downto 0);
    grp_fu_1133_p1 <= grp_fu_1133_p10(8 - 1 downto 0);
    grp_fu_1133_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_PixArray_val_V_phi_fu_401_p4),24));
    grp_fu_1133_p2 <= ap_const_lv24_800(12 - 1 downto 0);

    grp_fu_1141_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1141_ce <= ap_const_logic_1;
        else 
            grp_fu_1141_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1141_p0 <= sext_ln1540_fu_835_p1(16 - 1 downto 0);
    grp_fu_1141_p1 <= grp_fu_1141_p10(8 - 1 downto 0);
    grp_fu_1141_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_PixArray_val_V_24_phi_fu_392_p4),24));
    grp_fu_1141_p2 <= ap_const_lv24_800(12 - 1 downto 0);

    grp_fu_1149_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1149_ce <= ap_const_logic_1;
        else 
            grp_fu_1149_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1149_p0 <= sext_ln1540_fu_835_p1(16 - 1 downto 0);
    grp_fu_1149_p1 <= grp_fu_1149_p10(8 - 1 downto 0);
    grp_fu_1149_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_PixArray_val_V_25_phi_fu_383_p4),24));
    grp_fu_1149_p2 <= ap_const_lv24_800(12 - 1 downto 0);

    grp_fu_1157_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1157_ce <= ap_const_logic_1;
        else 
            grp_fu_1157_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1157_p0 <= sext_ln1540_1_fu_851_p1(16 - 1 downto 0);
    grp_fu_1157_p1 <= grp_fu_1157_p10(8 - 1 downto 0);
    grp_fu_1157_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_42_reg_550),24));

    grp_fu_1165_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1165_ce <= ap_const_logic_1;
        else 
            grp_fu_1165_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1165_p0 <= sext_ln1540_1_fu_851_p1(16 - 1 downto 0);
    grp_fu_1165_p1 <= grp_fu_1165_p10(8 - 1 downto 0);
    grp_fu_1165_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_27_reg_540),24));

    grp_fu_1173_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1173_ce <= ap_const_logic_1;
        else 
            grp_fu_1173_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1173_p0 <= sext_ln1540_1_fu_851_p1(16 - 1 downto 0);
    grp_fu_1173_p1 <= grp_fu_1173_p10(8 - 1 downto 0);
    grp_fu_1173_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_28_reg_530),24));

    grp_fu_1181_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1181_ce <= ap_const_logic_1;
        else 
            grp_fu_1181_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1181_p0 <= sext_ln1540_2_fu_867_p1(16 - 1 downto 0);
    grp_fu_1181_p1 <= grp_fu_1181_p10(8 - 1 downto 0);
    grp_fu_1181_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_43_reg_520_pp0_iter6_reg),24));

    grp_fu_1189_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1189_ce <= ap_const_logic_1;
        else 
            grp_fu_1189_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1189_p0 <= sext_ln1540_2_fu_867_p1(16 - 1 downto 0);
    grp_fu_1189_p1 <= grp_fu_1189_p10(8 - 1 downto 0);
    grp_fu_1189_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_30_reg_510_pp0_iter6_reg),24));

    grp_fu_1197_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1197_ce <= ap_const_logic_1;
        else 
            grp_fu_1197_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1197_p0 <= sext_ln1540_2_fu_867_p1(16 - 1 downto 0);
    grp_fu_1197_p1 <= grp_fu_1197_p10(8 - 1 downto 0);
    grp_fu_1197_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_31_reg_500_pp0_iter6_reg),24));

    grp_fu_1205_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1205_ce <= ap_const_logic_1;
        else 
            grp_fu_1205_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1205_p0 <= sext_ln1540_3_fu_892_p1(16 - 1 downto 0);
    grp_fu_1205_p1 <= grp_fu_1205_p10(8 - 1 downto 0);
    grp_fu_1205_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_44_reg_490_pp0_iter8_reg),24));

    grp_fu_1212_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1212_ce <= ap_const_logic_1;
        else 
            grp_fu_1212_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1212_p0 <= sext_ln1540_3_fu_892_p1(16 - 1 downto 0);
    grp_fu_1212_p1 <= grp_fu_1212_p10(8 - 1 downto 0);
    grp_fu_1212_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_33_reg_480_pp0_iter8_reg),24));

    grp_fu_1219_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1219_ce <= ap_const_logic_1;
        else 
            grp_fu_1219_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1219_p0 <= sext_ln1540_3_fu_892_p1(16 - 1 downto 0);
    grp_fu_1219_p1 <= grp_fu_1219_p10(8 - 1 downto 0);
    grp_fu_1219_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_34_reg_470_pp0_iter8_reg),24));

    grp_fu_1226_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1226_ce <= ap_const_logic_1;
        else 
            grp_fu_1226_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1226_p0 <= sext_ln1540_4_fu_917_p1(16 - 1 downto 0);
    grp_fu_1226_p1 <= grp_fu_1226_p10(8 - 1 downto 0);
    grp_fu_1226_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_45_reg_460_pp0_iter10_reg),24));

    grp_fu_1234_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1234_ce <= ap_const_logic_1;
        else 
            grp_fu_1234_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1234_p0 <= sext_ln1540_4_fu_917_p1(16 - 1 downto 0);
    grp_fu_1234_p1 <= grp_fu_1234_p10(8 - 1 downto 0);
    grp_fu_1234_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_36_reg_450_pp0_iter10_reg),24));

    grp_fu_1242_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1242_ce <= ap_const_logic_1;
        else 
            grp_fu_1242_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1242_p0 <= sext_ln1540_4_fu_917_p1(16 - 1 downto 0);
    grp_fu_1242_p1 <= grp_fu_1242_p10(8 - 1 downto 0);
    grp_fu_1242_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_37_reg_440_pp0_iter10_reg),24));

    grp_fu_1250_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1250_ce <= ap_const_logic_1;
        else 
            grp_fu_1250_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1250_p0 <= sext_ln1540_5_fu_933_p1(16 - 1 downto 0);
    grp_fu_1250_p1 <= grp_fu_1250_p10(8 - 1 downto 0);
    grp_fu_1250_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_46_reg_429_pp0_iter12_reg),24));

    grp_fu_1259_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1259_ce <= ap_const_logic_1;
        else 
            grp_fu_1259_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1259_p0 <= sext_ln1540_5_fu_933_p1(16 - 1 downto 0);
    grp_fu_1259_p1 <= grp_fu_1259_p10(8 - 1 downto 0);
    grp_fu_1259_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_39_reg_418_pp0_iter12_reg),24));

    grp_fu_1268_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1268_ce <= ap_const_logic_1;
        else 
            grp_fu_1268_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1268_p0 <= sext_ln1540_5_fu_933_p1(16 - 1 downto 0);
    grp_fu_1268_p1 <= grp_fu_1268_p10(8 - 1 downto 0);
    grp_fu_1268_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArray_val_V_40_reg_407_pp0_iter12_reg),24));
    icmp_ln252_fu_572_p2 <= "1" when (ap_sig_allocacmp_x_1 = InPixels) else "0";
    icmp_ln352_1_fu_992_p2 <= "1" when (signed(tmp_3_fu_983_p4) > signed(ap_const_lv7_0)) else "0";
    icmp_ln352_2_fu_1014_p2 <= "1" when (signed(tmp_5_fu_1005_p4) > signed(ap_const_lv7_0)) else "0";
    icmp_ln352_fu_970_p2 <= "1" when (signed(tmp_1_fu_961_p4) > signed(ap_const_lv7_0)) else "0";
    idxprom11_i_cast_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idxprom11_i),64));
    idxprom6_i_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_x_1),64));
    or_ln260_1_fu_1076_p2 <= (tmp_2_reg_1826 or icmp_ln352_1_reg_1832);
    or_ln260_2_fu_1110_p2 <= (tmp_4_reg_1842 or icmp_ln352_2_reg_1848);
    or_ln260_fu_1042_p2 <= (tmp_reg_1810 or icmp_ln352_reg_1816);
    select_ln260_1_fu_1080_p3 <= 
        select_ln260_4_fu_1068_p3 when (or_ln260_1_fu_1076_p2(0) = '1') else 
        trunc_ln260_1_fu_1054_p4;
    select_ln260_2_fu_1114_p3 <= 
        select_ln260_5_fu_1102_p3 when (or_ln260_2_fu_1110_p2(0) = '1') else 
        trunc_ln260_2_fu_1088_p4;
    select_ln260_3_fu_1034_p3 <= 
        ap_const_lv8_FF when (xor_ln260_fu_1029_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln260_4_fu_1068_p3 <= 
        ap_const_lv8_FF when (xor_ln260_1_fu_1063_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln260_5_fu_1102_p3 <= 
        ap_const_lv8_FF when (xor_ln260_2_fu_1097_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln260_fu_1046_p3 <= 
        select_ln260_3_fu_1034_p3 when (or_ln260_fu_1042_p2(0) = '1') else 
        trunc_ln2_fu_1020_p4;
    select_ln302_1_fu_784_p3 <= 
        LineBufVal_V_7_fu_767_p4 when (cmp159(0) = '1') else 
        LineBuf_val_V_3_q1;
    select_ln302_2_fu_791_p3 <= 
        LineBufVal_V_7_fu_767_p4 when (cmp159(0) = '1') else 
        LineBuf_val_V_2_q1;
    select_ln302_3_fu_798_p3 <= 
        LineBufVal_V_7_fu_767_p4 when (cmp159(0) = '1') else 
        LineBuf_val_V_1_q1;
    select_ln302_fu_777_p3 <= 
        LineBufVal_V_7_fu_767_p4 when (cmp159(0) = '1') else 
        LineBuf_val_V_4_q1;
        sext_ln1540_1_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(FiltCoeff_1_q0),24));

        sext_ln1540_2_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(FiltCoeff_2_q0),24));

        sext_ln1540_3_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(FiltCoeff_3_q0),24));

        sext_ln1540_4_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(FiltCoeff_4_q0),24));

        sext_ln1540_5_fu_933_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(FiltCoeff_5_q0),24));

        sext_ln1540_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(FiltCoeff_q0),24));

    tmp_1_fu_961_p4 <= grp_fu_1250_p3(26 downto 20);
    tmp_3_fu_983_p4 <= grp_fu_1259_p3(26 downto 20);
    tmp_5_fu_1005_p4 <= grp_fu_1268_p3(26 downto 20);
    trunc_ln260_1_fu_1054_p4 <= sum_11_reg_1821(19 downto 12);
    trunc_ln260_2_fu_1088_p4 <= sum_17_reg_1837(19 downto 12);
    trunc_ln2_fu_1020_p4 <= sum_reg_1805(19 downto 12);
    x_2_fu_578_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x_1) + unsigned(ap_const_lv11_1));
    xor_ln260_1_fu_1063_p2 <= (tmp_2_reg_1826 xor ap_const_lv1_1);
    xor_ln260_2_fu_1097_p2 <= (tmp_4_reg_1842 xor ap_const_lv1_1);
    xor_ln260_fu_1029_p2 <= (tmp_reg_1810 xor ap_const_lv1_1);
end behav;
