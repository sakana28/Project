-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_3a92_vsc_0_vscale_core_polyphase is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    SrcYUV_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    SrcYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    SrcYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    SrcYUV_empty_n : IN STD_LOGIC;
    SrcYUV_read : OUT STD_LOGIC;
    HeightIn_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    HeightIn_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    HeightIn_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    HeightIn_empty_n : IN STD_LOGIC;
    HeightIn_read : OUT STD_LOGIC;
    Width_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    Width_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    Width_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    Width_empty_n : IN STD_LOGIC;
    Width_read : OUT STD_LOGIC;
    HeightOut_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    HeightOut_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    HeightOut_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    HeightOut_empty_n : IN STD_LOGIC;
    HeightOut_read : OUT STD_LOGIC;
    LineRate_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    LineRate_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    LineRate_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    LineRate_empty_n : IN STD_LOGIC;
    LineRate_read : OUT STD_LOGIC;
    vfltCoeff_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    vfltCoeff_ce0 : OUT STD_LOGIC;
    vfltCoeff_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    OutYUV_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    OutYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    OutYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    OutYUV_full_n : IN STD_LOGIC;
    OutYUV_write : OUT STD_LOGIC;
    HwReg_Width_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    HwReg_Width_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_Width_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_Width_c_full_n : IN STD_LOGIC;
    HwReg_Width_c_write : OUT STD_LOGIC;
    HwReg_HeightOut_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    HwReg_HeightOut_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_HeightOut_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_HeightOut_c_full_n : IN STD_LOGIC;
    HwReg_HeightOut_c_write : OUT STD_LOGIC );
end;


architecture behav of bd_3a92_vsc_0_vscale_core_polyphase is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_FFFF0000 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111110000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv17_3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal HeightIn_blk_n : STD_LOGIC;
    signal Width_blk_n : STD_LOGIC;
    signal HeightOut_blk_n : STD_LOGIC;
    signal LineRate_blk_n : STD_LOGIC;
    signal HwReg_Width_c_blk_n : STD_LOGIC;
    signal HwReg_HeightOut_c_blk_n : STD_LOGIC;
    signal OutLines_reg_596 : STD_LOGIC_VECTOR (10 downto 0);
    signal InPixels_reg_603 : STD_LOGIC_VECTOR (10 downto 0);
    signal InLines_reg_608 : STD_LOGIC_VECTOR (10 downto 0);
    signal Rate_reg_615 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln177_fu_298_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln177_reg_620 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln180_fu_301_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln180_reg_625 : STD_LOGIC_VECTOR (16 downto 0);
    signal YLoopSize_fu_314_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal YLoopSize_reg_630 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln222_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln222_reg_644 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln214_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_reg_652 : STD_LOGIC_VECTOR (5 downto 0);
    signal offset_2_fu_387_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_2_reg_657 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_663 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln241_1_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln241_1_reg_668 : STD_LOGIC_VECTOR (0 downto 0);
    signal PixArrayLoc_3_fu_418_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal PixArrayLoc_3_reg_673 : STD_LOGIC_VECTOR (15 downto 0);
    signal GetNewLine_2_fu_426_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal GetNewLine_2_reg_679 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp124_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp124_reg_685 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp159_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp159_reg_690 : STD_LOGIC_VECTOR (0 downto 0);
    signal OutputWriteEn_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal OutputWriteEn_reg_695 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal WriteLocNext_2_fu_494_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal WriteLocNext_2_reg_700 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_5_fu_500_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_5_reg_705 : STD_LOGIC_VECTOR (31 downto 0);
    signal add117_fu_509_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add117_reg_710 : STD_LOGIC_VECTOR (16 downto 0);
    signal brmerge_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_715 : STD_LOGIC_VECTOR (0 downto 0);
    signal OutputWriteEn_1_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal OutputWriteEn_1_reg_720 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal empty_fu_540_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_reg_725 : STD_LOGIC_VECTOR (5 downto 0);
    signal cmp119_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp119_reg_730 : STD_LOGIC_VECTOR (0 downto 0);
    signal FiltCoeff_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal FiltCoeff_ce0 : STD_LOGIC;
    signal FiltCoeff_we0 : STD_LOGIC;
    signal FiltCoeff_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal FiltCoeff_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal FiltCoeff_1_ce0 : STD_LOGIC;
    signal FiltCoeff_1_we0 : STD_LOGIC;
    signal FiltCoeff_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal FiltCoeff_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal FiltCoeff_2_ce0 : STD_LOGIC;
    signal FiltCoeff_2_we0 : STD_LOGIC;
    signal FiltCoeff_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal FiltCoeff_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal FiltCoeff_3_ce0 : STD_LOGIC;
    signal FiltCoeff_3_we0 : STD_LOGIC;
    signal FiltCoeff_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal FiltCoeff_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal FiltCoeff_4_ce0 : STD_LOGIC;
    signal FiltCoeff_4_we0 : STD_LOGIC;
    signal FiltCoeff_4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal FiltCoeff_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal FiltCoeff_5_ce0 : STD_LOGIC;
    signal FiltCoeff_5_we0 : STD_LOGIC;
    signal FiltCoeff_5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal LineBuf_val_V_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal LineBuf_val_V_1_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal LineBuf_val_V_2_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal LineBuf_val_V_3_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal LineBuf_val_V_4_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal LineBuf_val_V_5_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_start : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_done : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_idle : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_ready : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_we0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_vfltCoeff_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_vfltCoeff_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_we0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_we0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_we0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_we0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_we0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_start : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_done : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_idle : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_ready : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_SrcYUV_read : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_OutYUV_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_OutYUV_write : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_5_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_4_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_3_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_2_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_1_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_we0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_ce1 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_we0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_ce1 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_we0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_ce1 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_we0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_ce1 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_we0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_ce1 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_ce0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_we0 : STD_LOGIC;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_ce1 : STD_LOGIC;
    signal GetNewLine_reg_218 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call44 : BOOLEAN;
    signal grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal WriteLoc_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal offset_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal PhaseV_fu_118 : STD_LOGIC_VECTOR (7 downto 0);
    signal PhaseV_1_fu_529_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal PixArrayLoc_fu_122 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_fu_126 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_2_fu_328_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln180_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal TotalLines_fu_308_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_359_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal GetNewLine_1_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal offset_1_fu_381_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal PixArrayLoc_1_fu_375_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal PixArrayLoc_2_fu_395_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_434_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln241_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal WriteLocNext_fu_475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_3_fu_471_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal WriteLocNext_1_fu_480_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_4_fu_487_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal PixArrayLoc_2_cast_fu_506_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln196_fu_526_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component bd_3a92_vsc_0_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        FiltCoeff_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_ce0 : OUT STD_LOGIC;
        FiltCoeff_we0 : OUT STD_LOGIC;
        FiltCoeff_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        vfltCoeff_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        vfltCoeff_ce0 : OUT STD_LOGIC;
        vfltCoeff_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        FiltCoeff_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_1_ce0 : OUT STD_LOGIC;
        FiltCoeff_1_we0 : OUT STD_LOGIC;
        FiltCoeff_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        FiltCoeff_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_2_ce0 : OUT STD_LOGIC;
        FiltCoeff_2_we0 : OUT STD_LOGIC;
        FiltCoeff_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        FiltCoeff_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_3_ce0 : OUT STD_LOGIC;
        FiltCoeff_3_we0 : OUT STD_LOGIC;
        FiltCoeff_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        FiltCoeff_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_4_ce0 : OUT STD_LOGIC;
        FiltCoeff_4_we0 : OUT STD_LOGIC;
        FiltCoeff_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        FiltCoeff_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_5_ce0 : OUT STD_LOGIC;
        FiltCoeff_5_we0 : OUT STD_LOGIC;
        FiltCoeff_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component bd_3a92_vsc_0_vscale_core_polyphase_Pipeline_loop_width_for_procpix IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        SrcYUV_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        SrcYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        SrcYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        SrcYUV_empty_n : IN STD_LOGIC;
        SrcYUV_read : OUT STD_LOGIC;
        OutYUV_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        OutYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        OutYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        OutYUV_full_n : IN STD_LOGIC;
        OutYUV_write : OUT STD_LOGIC;
        FiltCoeff_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_5_ce0 : OUT STD_LOGIC;
        FiltCoeff_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        idxprom11_i : IN STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_4_ce0 : OUT STD_LOGIC;
        FiltCoeff_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        FiltCoeff_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_3_ce0 : OUT STD_LOGIC;
        FiltCoeff_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        FiltCoeff_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_2_ce0 : OUT STD_LOGIC;
        FiltCoeff_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        FiltCoeff_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_1_ce0 : OUT STD_LOGIC;
        FiltCoeff_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        FiltCoeff_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        FiltCoeff_ce0 : OUT STD_LOGIC;
        FiltCoeff_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        InPixels : IN STD_LOGIC_VECTOR (10 downto 0);
        OutputWriteEn_1 : IN STD_LOGIC_VECTOR (0 downto 0);
        LineBuf_val_V_5_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuf_val_V_5_ce0 : OUT STD_LOGIC;
        LineBuf_val_V_5_we0 : OUT STD_LOGIC;
        LineBuf_val_V_5_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        LineBuf_val_V_5_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuf_val_V_5_ce1 : OUT STD_LOGIC;
        LineBuf_val_V_5_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        LineBuf_val_V_4_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuf_val_V_4_ce0 : OUT STD_LOGIC;
        LineBuf_val_V_4_we0 : OUT STD_LOGIC;
        LineBuf_val_V_4_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        LineBuf_val_V_4_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuf_val_V_4_ce1 : OUT STD_LOGIC;
        LineBuf_val_V_4_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        LineBuf_val_V_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuf_val_V_3_ce0 : OUT STD_LOGIC;
        LineBuf_val_V_3_we0 : OUT STD_LOGIC;
        LineBuf_val_V_3_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        LineBuf_val_V_3_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuf_val_V_3_ce1 : OUT STD_LOGIC;
        LineBuf_val_V_3_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        LineBuf_val_V_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuf_val_V_2_ce0 : OUT STD_LOGIC;
        LineBuf_val_V_2_we0 : OUT STD_LOGIC;
        LineBuf_val_V_2_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        LineBuf_val_V_2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuf_val_V_2_ce1 : OUT STD_LOGIC;
        LineBuf_val_V_2_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        LineBuf_val_V_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuf_val_V_1_ce0 : OUT STD_LOGIC;
        LineBuf_val_V_1_we0 : OUT STD_LOGIC;
        LineBuf_val_V_1_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        LineBuf_val_V_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuf_val_V_1_ce1 : OUT STD_LOGIC;
        LineBuf_val_V_1_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        LineBuf_val_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuf_val_V_ce0 : OUT STD_LOGIC;
        LineBuf_val_V_we0 : OUT STD_LOGIC;
        LineBuf_val_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        LineBuf_val_V_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuf_val_V_ce1 : OUT STD_LOGIC;
        LineBuf_val_V_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        brmerge : IN STD_LOGIC_VECTOR (0 downto 0);
        cmp159 : IN STD_LOGIC_VECTOR (0 downto 0);
        cmp119 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component bd_3a92_vsc_0_vscale_core_polyphase_FiltCoeff_RAM_1P_LUTRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component bd_3a92_vsc_0_vscale_core_polyphase_LineBuf_val_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    FiltCoeff_U : component bd_3a92_vsc_0_vscale_core_polyphase_FiltCoeff_RAM_1P_LUTRAM_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => FiltCoeff_address0,
        ce0 => FiltCoeff_ce0,
        we0 => FiltCoeff_we0,
        d0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_d0,
        q0 => FiltCoeff_q0);

    FiltCoeff_1_U : component bd_3a92_vsc_0_vscale_core_polyphase_FiltCoeff_RAM_1P_LUTRAM_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => FiltCoeff_1_address0,
        ce0 => FiltCoeff_1_ce0,
        we0 => FiltCoeff_1_we0,
        d0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_d0,
        q0 => FiltCoeff_1_q0);

    FiltCoeff_2_U : component bd_3a92_vsc_0_vscale_core_polyphase_FiltCoeff_RAM_1P_LUTRAM_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => FiltCoeff_2_address0,
        ce0 => FiltCoeff_2_ce0,
        we0 => FiltCoeff_2_we0,
        d0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_d0,
        q0 => FiltCoeff_2_q0);

    FiltCoeff_3_U : component bd_3a92_vsc_0_vscale_core_polyphase_FiltCoeff_RAM_1P_LUTRAM_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => FiltCoeff_3_address0,
        ce0 => FiltCoeff_3_ce0,
        we0 => FiltCoeff_3_we0,
        d0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_d0,
        q0 => FiltCoeff_3_q0);

    FiltCoeff_4_U : component bd_3a92_vsc_0_vscale_core_polyphase_FiltCoeff_RAM_1P_LUTRAM_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => FiltCoeff_4_address0,
        ce0 => FiltCoeff_4_ce0,
        we0 => FiltCoeff_4_we0,
        d0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_d0,
        q0 => FiltCoeff_4_q0);

    FiltCoeff_5_U : component bd_3a92_vsc_0_vscale_core_polyphase_FiltCoeff_RAM_1P_LUTRAM_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => FiltCoeff_5_address0,
        ce0 => FiltCoeff_5_ce0,
        we0 => FiltCoeff_5_we0,
        d0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_d0,
        q0 => FiltCoeff_5_q0);

    LineBuf_val_V_U : component bd_3a92_vsc_0_vscale_core_polyphase_LineBuf_val_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_address0,
        ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_ce0,
        we0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_we0,
        d0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_d0,
        address1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_address1,
        ce1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_ce1,
        q1 => LineBuf_val_V_q1);

    LineBuf_val_V_1_U : component bd_3a92_vsc_0_vscale_core_polyphase_LineBuf_val_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_address0,
        ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_ce0,
        we0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_we0,
        d0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_d0,
        address1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_address1,
        ce1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_ce1,
        q1 => LineBuf_val_V_1_q1);

    LineBuf_val_V_2_U : component bd_3a92_vsc_0_vscale_core_polyphase_LineBuf_val_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_address0,
        ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_ce0,
        we0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_we0,
        d0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_d0,
        address1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_address1,
        ce1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_ce1,
        q1 => LineBuf_val_V_2_q1);

    LineBuf_val_V_3_U : component bd_3a92_vsc_0_vscale_core_polyphase_LineBuf_val_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_address0,
        ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_ce0,
        we0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_we0,
        d0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_d0,
        address1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_address1,
        ce1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_ce1,
        q1 => LineBuf_val_V_3_q1);

    LineBuf_val_V_4_U : component bd_3a92_vsc_0_vscale_core_polyphase_LineBuf_val_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_address0,
        ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_ce0,
        we0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_we0,
        d0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_d0,
        address1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_address1,
        ce1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_ce1,
        q1 => LineBuf_val_V_4_q1);

    LineBuf_val_V_5_U : component bd_3a92_vsc_0_vscale_core_polyphase_LineBuf_val_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_address0,
        ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_ce0,
        we0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_we0,
        d0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_d0,
        address1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_address1,
        ce1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_ce1,
        q1 => LineBuf_val_V_5_q1);

    grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229 : component bd_3a92_vsc_0_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_start,
        ap_done => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_done,
        ap_idle => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_idle,
        ap_ready => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_ready,
        FiltCoeff_address0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_address0,
        FiltCoeff_ce0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_ce0,
        FiltCoeff_we0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_we0,
        FiltCoeff_d0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_d0,
        vfltCoeff_address0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_vfltCoeff_address0,
        vfltCoeff_ce0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_vfltCoeff_ce0,
        vfltCoeff_q0 => vfltCoeff_q0,
        FiltCoeff_1_address0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_address0,
        FiltCoeff_1_ce0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_ce0,
        FiltCoeff_1_we0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_we0,
        FiltCoeff_1_d0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_d0,
        FiltCoeff_2_address0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_address0,
        FiltCoeff_2_ce0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_ce0,
        FiltCoeff_2_we0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_we0,
        FiltCoeff_2_d0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_d0,
        FiltCoeff_3_address0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_address0,
        FiltCoeff_3_ce0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_ce0,
        FiltCoeff_3_we0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_we0,
        FiltCoeff_3_d0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_d0,
        FiltCoeff_4_address0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_address0,
        FiltCoeff_4_ce0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_ce0,
        FiltCoeff_4_we0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_we0,
        FiltCoeff_4_d0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_d0,
        FiltCoeff_5_address0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_address0,
        FiltCoeff_5_ce0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_ce0,
        FiltCoeff_5_we0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_we0,
        FiltCoeff_5_d0 => grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_d0);

    grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247 : component bd_3a92_vsc_0_vscale_core_polyphase_Pipeline_loop_width_for_procpix
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_start,
        ap_done => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_done,
        ap_idle => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_idle,
        ap_ready => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_ready,
        SrcYUV_dout => SrcYUV_dout,
        SrcYUV_num_data_valid => ap_const_lv5_0,
        SrcYUV_fifo_cap => ap_const_lv5_0,
        SrcYUV_empty_n => SrcYUV_empty_n,
        SrcYUV_read => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_SrcYUV_read,
        OutYUV_din => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_OutYUV_din,
        OutYUV_num_data_valid => ap_const_lv5_0,
        OutYUV_fifo_cap => ap_const_lv5_0,
        OutYUV_full_n => OutYUV_full_n,
        OutYUV_write => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_OutYUV_write,
        FiltCoeff_5_address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_5_address0,
        FiltCoeff_5_ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_5_ce0,
        FiltCoeff_5_q0 => FiltCoeff_5_q0,
        idxprom11_i => empty_reg_725,
        FiltCoeff_4_address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_4_address0,
        FiltCoeff_4_ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_4_ce0,
        FiltCoeff_4_q0 => FiltCoeff_4_q0,
        FiltCoeff_3_address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_3_address0,
        FiltCoeff_3_ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_3_ce0,
        FiltCoeff_3_q0 => FiltCoeff_3_q0,
        FiltCoeff_2_address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_2_address0,
        FiltCoeff_2_ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_2_ce0,
        FiltCoeff_2_q0 => FiltCoeff_2_q0,
        FiltCoeff_1_address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_1_address0,
        FiltCoeff_1_ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_1_ce0,
        FiltCoeff_1_q0 => FiltCoeff_1_q0,
        FiltCoeff_address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_address0,
        FiltCoeff_ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_ce0,
        FiltCoeff_q0 => FiltCoeff_q0,
        InPixels => InPixels_reg_603,
        OutputWriteEn_1 => OutputWriteEn_1_reg_720,
        LineBuf_val_V_5_address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_address0,
        LineBuf_val_V_5_ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_ce0,
        LineBuf_val_V_5_we0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_we0,
        LineBuf_val_V_5_d0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_d0,
        LineBuf_val_V_5_address1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_address1,
        LineBuf_val_V_5_ce1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_5_ce1,
        LineBuf_val_V_5_q1 => LineBuf_val_V_5_q1,
        LineBuf_val_V_4_address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_address0,
        LineBuf_val_V_4_ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_ce0,
        LineBuf_val_V_4_we0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_we0,
        LineBuf_val_V_4_d0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_d0,
        LineBuf_val_V_4_address1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_address1,
        LineBuf_val_V_4_ce1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_4_ce1,
        LineBuf_val_V_4_q1 => LineBuf_val_V_4_q1,
        LineBuf_val_V_3_address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_address0,
        LineBuf_val_V_3_ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_ce0,
        LineBuf_val_V_3_we0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_we0,
        LineBuf_val_V_3_d0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_d0,
        LineBuf_val_V_3_address1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_address1,
        LineBuf_val_V_3_ce1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_3_ce1,
        LineBuf_val_V_3_q1 => LineBuf_val_V_3_q1,
        LineBuf_val_V_2_address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_address0,
        LineBuf_val_V_2_ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_ce0,
        LineBuf_val_V_2_we0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_we0,
        LineBuf_val_V_2_d0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_d0,
        LineBuf_val_V_2_address1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_address1,
        LineBuf_val_V_2_ce1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_2_ce1,
        LineBuf_val_V_2_q1 => LineBuf_val_V_2_q1,
        LineBuf_val_V_1_address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_address0,
        LineBuf_val_V_1_ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_ce0,
        LineBuf_val_V_1_we0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_we0,
        LineBuf_val_V_1_d0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_d0,
        LineBuf_val_V_1_address1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_address1,
        LineBuf_val_V_1_ce1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_1_ce1,
        LineBuf_val_V_1_q1 => LineBuf_val_V_1_q1,
        LineBuf_val_V_address0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_address0,
        LineBuf_val_V_ce0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_ce0,
        LineBuf_val_V_we0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_we0,
        LineBuf_val_V_d0 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_d0,
        LineBuf_val_V_address1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_address1,
        LineBuf_val_V_ce1 => grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_LineBuf_val_V_ce1,
        LineBuf_val_V_q1 => LineBuf_val_V_q1,
        brmerge => brmerge_reg_715,
        cmp159 => cmp159_reg_690,
        cmp119 => cmp119_reg_730);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln214_fu_323_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_ready = ap_const_logic_1)) then 
                    grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_ready = ap_const_logic_1)) then 
                    grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    GetNewLine_reg_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                GetNewLine_reg_218 <= ap_const_lv1_1;
            elsif (((grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                GetNewLine_reg_218 <= GetNewLine_2_reg_679;
            end if; 
        end if;
    end process;

    PhaseV_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                PhaseV_fu_118 <= ap_const_lv8_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                PhaseV_fu_118 <= PhaseV_1_fu_529_p3;
            end if; 
        end if;
    end process;

    PixArrayLoc_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                PixArrayLoc_fu_122 <= ap_const_lv16_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                PixArrayLoc_fu_122 <= PixArrayLoc_3_reg_673;
            end if; 
        end if;
    end process;

    WriteLoc_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                WriteLoc_fu_110 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                WriteLoc_fu_110 <= WriteLocNext_2_reg_700;
            end if; 
        end if;
    end process;

    offset_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                offset_fu_114 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                offset_fu_114 <= offset_5_reg_705;
            end if; 
        end if;
    end process;

    y_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                y_fu_126 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln214_fu_323_p2 = ap_const_lv1_1))) then 
                y_fu_126 <= y_2_fu_328_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln214_fu_323_p2 = ap_const_lv1_1))) then
                GetNewLine_2_reg_679 <= GetNewLine_2_fu_426_p3;
                PixArrayLoc_3_reg_673 <= PixArrayLoc_3_fu_418_p3;
                cmp159_reg_690 <= cmp159_fu_450_p2;
                icmp124_reg_685 <= icmp124_fu_444_p2;
                icmp_ln222_reg_644 <= icmp_ln222_fu_343_p2;
                icmp_ln241_1_reg_668 <= icmp_ln241_1_fu_413_p2;
                offset_2_reg_657 <= offset_2_fu_387_p3;
                tmp_6_reg_663 <= offset_2_fu_387_p3(31 downto 16);
                trunc_ln_reg_652 <= offset_fu_114(15 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                InLines_reg_608 <= HeightIn_dout;
                InPixels_reg_603 <= Width_dout;
                OutLines_reg_596 <= HeightOut_dout;
                Rate_reg_615 <= LineRate_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                OutputWriteEn_1_reg_720 <= OutputWriteEn_1_fu_536_p2;
                cmp119_reg_730 <= cmp119_fu_544_p2;
                empty_reg_725 <= empty_fu_540_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                OutputWriteEn_reg_695 <= OutputWriteEn_fu_466_p2;
                WriteLocNext_2_reg_700 <= WriteLocNext_2_fu_494_p3;
                add117_reg_710 <= add117_fu_509_p2;
                brmerge_reg_715 <= brmerge_fu_515_p2;
                offset_5_reg_705 <= offset_5_fu_500_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                YLoopSize_reg_630 <= YLoopSize_fu_314_p2;
                    zext_ln177_reg_620(10 downto 0) <= zext_ln177_fu_298_p1(10 downto 0);
                    zext_ln180_reg_625(10 downto 0) <= zext_ln180_fu_301_p1(10 downto 0);
            end if;
        end if;
    end process;
    zext_ln177_reg_620(31 downto 11) <= "000000000000000000000";
    zext_ln180_reg_625(16 downto 11) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, HeightIn_empty_n, Width_empty_n, HeightOut_empty_n, LineRate_empty_n, HwReg_Width_c_full_n, HwReg_HeightOut_c_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln214_fu_323_p2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_done, grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_done, ap_CS_fsm_state7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln214_fu_323_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;

    FiltCoeff_1_address0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_address0, grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_1_address0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            FiltCoeff_1_address0 <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_1_address0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_address0;
        else 
            FiltCoeff_1_address0 <= "XXXXXX";
        end if; 
    end process;


    FiltCoeff_1_ce0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_ce0, grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_1_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            FiltCoeff_1_ce0 <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_1_ce0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_ce0;
        else 
            FiltCoeff_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    FiltCoeff_1_we0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_1_we0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_1_we0;
        else 
            FiltCoeff_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    FiltCoeff_2_address0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_address0, grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_2_address0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            FiltCoeff_2_address0 <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_2_address0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_address0;
        else 
            FiltCoeff_2_address0 <= "XXXXXX";
        end if; 
    end process;


    FiltCoeff_2_ce0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_ce0, grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_2_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            FiltCoeff_2_ce0 <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_2_ce0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_ce0;
        else 
            FiltCoeff_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    FiltCoeff_2_we0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_2_we0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_2_we0;
        else 
            FiltCoeff_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    FiltCoeff_3_address0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_address0, grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_3_address0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            FiltCoeff_3_address0 <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_3_address0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_address0;
        else 
            FiltCoeff_3_address0 <= "XXXXXX";
        end if; 
    end process;


    FiltCoeff_3_ce0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_ce0, grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_3_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            FiltCoeff_3_ce0 <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_3_ce0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_ce0;
        else 
            FiltCoeff_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    FiltCoeff_3_we0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_3_we0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_3_we0;
        else 
            FiltCoeff_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    FiltCoeff_4_address0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_address0, grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_4_address0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            FiltCoeff_4_address0 <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_4_address0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_address0;
        else 
            FiltCoeff_4_address0 <= "XXXXXX";
        end if; 
    end process;


    FiltCoeff_4_ce0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_ce0, grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_4_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            FiltCoeff_4_ce0 <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_4_ce0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_ce0;
        else 
            FiltCoeff_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    FiltCoeff_4_we0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_4_we0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_4_we0;
        else 
            FiltCoeff_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    FiltCoeff_5_address0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_address0, grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_5_address0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            FiltCoeff_5_address0 <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_5_address0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_address0;
        else 
            FiltCoeff_5_address0 <= "XXXXXX";
        end if; 
    end process;


    FiltCoeff_5_ce0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_ce0, grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_5_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            FiltCoeff_5_ce0 <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_5_ce0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_ce0;
        else 
            FiltCoeff_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    FiltCoeff_5_we0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_5_we0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_5_we0;
        else 
            FiltCoeff_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    FiltCoeff_address0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_address0, grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_address0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            FiltCoeff_address0 <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_address0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_address0;
        else 
            FiltCoeff_address0 <= "XXXXXX";
        end if; 
    end process;


    FiltCoeff_ce0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_ce0, grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            FiltCoeff_ce0 <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_FiltCoeff_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_ce0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_ce0;
        else 
            FiltCoeff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    FiltCoeff_we0_assign_proc : process(ap_CS_fsm_state2, grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            FiltCoeff_we0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_FiltCoeff_we0;
        else 
            FiltCoeff_we0 <= ap_const_logic_0;
        end if; 
    end process;

    GetNewLine_1_fu_369_p2 <= "0" when (tmp_fu_359_p4 = ap_const_lv16_0) else "1";
    GetNewLine_2_fu_426_p3 <= 
        GetNewLine_1_fu_369_p2 when (icmp_ln222_fu_343_p2(0) = '1') else 
        GetNewLine_reg_218;

    HeightIn_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HeightIn_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HeightIn_blk_n <= HeightIn_empty_n;
        else 
            HeightIn_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    HeightIn_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HeightIn_empty_n, Width_empty_n, HeightOut_empty_n, LineRate_empty_n, HwReg_Width_c_full_n, HwReg_HeightOut_c_full_n)
    begin
        if ((not(((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HeightIn_read <= ap_const_logic_1;
        else 
            HeightIn_read <= ap_const_logic_0;
        end if; 
    end process;


    HeightOut_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HeightOut_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HeightOut_blk_n <= HeightOut_empty_n;
        else 
            HeightOut_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    HeightOut_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HeightIn_empty_n, Width_empty_n, HeightOut_empty_n, LineRate_empty_n, HwReg_Width_c_full_n, HwReg_HeightOut_c_full_n)
    begin
        if ((not(((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HeightOut_read <= ap_const_logic_1;
        else 
            HeightOut_read <= ap_const_logic_0;
        end if; 
    end process;


    HwReg_HeightOut_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HwReg_HeightOut_c_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_HeightOut_c_blk_n <= HwReg_HeightOut_c_full_n;
        else 
            HwReg_HeightOut_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    HwReg_HeightOut_c_din <= HeightOut_dout;

    HwReg_HeightOut_c_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HeightIn_empty_n, Width_empty_n, HeightOut_empty_n, LineRate_empty_n, HwReg_Width_c_full_n, HwReg_HeightOut_c_full_n)
    begin
        if ((not(((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_HeightOut_c_write <= ap_const_logic_1;
        else 
            HwReg_HeightOut_c_write <= ap_const_logic_0;
        end if; 
    end process;


    HwReg_Width_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HwReg_Width_c_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_Width_c_blk_n <= HwReg_Width_c_full_n;
        else 
            HwReg_Width_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    HwReg_Width_c_din <= Width_dout;

    HwReg_Width_c_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HeightIn_empty_n, Width_empty_n, HeightOut_empty_n, LineRate_empty_n, HwReg_Width_c_full_n, HwReg_HeightOut_c_full_n)
    begin
        if ((not(((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_Width_c_write <= ap_const_logic_1;
        else 
            HwReg_Width_c_write <= ap_const_logic_0;
        end if; 
    end process;


    LineRate_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, LineRate_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            LineRate_blk_n <= LineRate_empty_n;
        else 
            LineRate_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    LineRate_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HeightIn_empty_n, Width_empty_n, HeightOut_empty_n, LineRate_empty_n, HwReg_Width_c_full_n, HwReg_HeightOut_c_full_n)
    begin
        if ((not(((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            LineRate_read <= ap_const_logic_1;
        else 
            LineRate_read <= ap_const_logic_0;
        end if; 
    end process;

    OutYUV_din <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_OutYUV_din;

    OutYUV_write_assign_proc : process(grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_OutYUV_write, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            OutYUV_write <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_OutYUV_write;
        else 
            OutYUV_write <= ap_const_logic_0;
        end if; 
    end process;

    OutputWriteEn_1_fu_536_p2 <= (icmp_ln222_reg_644 and OutputWriteEn_reg_695);
    OutputWriteEn_fu_466_p2 <= (icmp_ln241_fu_461_p2 and icmp_ln241_1_reg_668);
    PhaseV_1_fu_529_p3 <= 
        zext_ln196_fu_526_p1 when (icmp_ln222_reg_644(0) = '1') else 
        PhaseV_fu_118;
    PixArrayLoc_1_fu_375_p2 <= std_logic_vector(unsigned(PixArrayLoc_fu_122) + unsigned(ap_const_lv16_1));
    PixArrayLoc_2_cast_fu_506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PixArrayLoc_3_reg_673),17));
    PixArrayLoc_2_fu_395_p3 <= 
        PixArrayLoc_1_fu_375_p2 when (GetNewLine_1_fu_369_p2(0) = '1') else 
        PixArrayLoc_fu_122;
    PixArrayLoc_3_fu_418_p3 <= 
        PixArrayLoc_2_fu_395_p3 when (icmp_ln222_fu_343_p2(0) = '1') else 
        PixArrayLoc_fu_122;

    SrcYUV_read_assign_proc : process(grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_SrcYUV_read, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            SrcYUV_read <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_SrcYUV_read;
        else 
            SrcYUV_read <= ap_const_logic_0;
        end if; 
    end process;

    TotalLines_fu_308_p3 <= 
        OutLines_reg_596 when (icmp_ln180_fu_304_p2(0) = '1') else 
        InLines_reg_608;

    Width_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, Width_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            Width_blk_n <= Width_empty_n;
        else 
            Width_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    Width_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HeightIn_empty_n, Width_empty_n, HeightOut_empty_n, LineRate_empty_n, HwReg_Width_c_full_n, HwReg_HeightOut_c_full_n)
    begin
        if ((not(((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            Width_read <= ap_const_logic_1;
        else 
            Width_read <= ap_const_logic_0;
        end if; 
    end process;

    WriteLocNext_1_fu_480_p3 <= 
        WriteLocNext_fu_475_p2 when (OutputWriteEn_fu_466_p2(0) = '1') else 
        WriteLoc_fu_110;
    WriteLocNext_2_fu_494_p3 <= 
        WriteLocNext_1_fu_480_p3 when (icmp_ln222_reg_644(0) = '1') else 
        WriteLoc_fu_110;
    WriteLocNext_fu_475_p2 <= std_logic_vector(unsigned(WriteLoc_fu_110) + unsigned(ap_const_lv32_1));
    YLoopSize_fu_314_p2 <= std_logic_vector(unsigned(TotalLines_fu_308_p3) + unsigned(ap_const_lv11_3));
    add117_fu_509_p2 <= std_logic_vector(unsigned(PixArrayLoc_2_cast_fu_506_p1) + unsigned(ap_const_lv17_3));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, HeightIn_empty_n, Width_empty_n, HeightOut_empty_n, LineRate_empty_n, HwReg_Width_c_full_n, HwReg_HeightOut_c_full_n)
    begin
        if (((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_done)
    begin
        if ((grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_done)
    begin
        if ((grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, HeightIn_empty_n, Width_empty_n, HeightOut_empty_n, LineRate_empty_n, HwReg_Width_c_full_n, HwReg_HeightOut_c_full_n)
    begin
                ap_block_state1 <= ((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call44_assign_proc : process(ap_start, ap_done_reg, HeightIn_empty_n, Width_empty_n, HeightOut_empty_n, LineRate_empty_n, HwReg_Width_c_full_n, HwReg_HeightOut_c_full_n)
    begin
                ap_block_state1_ignore_call44 <= ((ap_const_logic_0 = HwReg_HeightOut_c_full_n) or (ap_const_logic_0 = HwReg_Width_c_full_n) or (ap_const_logic_0 = LineRate_empty_n) or (ap_const_logic_0 = HeightOut_empty_n) or (ap_const_logic_0 = Width_empty_n) or (ap_const_logic_0 = HeightIn_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state3, icmp_ln214_fu_323_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln214_fu_323_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, icmp_ln214_fu_323_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln214_fu_323_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_515_p2 <= (icmp124_reg_685 or GetNewLine_2_reg_679);
    cmp119_fu_544_p2 <= "1" when (unsigned(zext_ln180_reg_625) > unsigned(add117_reg_710)) else "0";
    cmp159_fu_450_p2 <= "1" when (y_fu_126 = ap_const_lv11_0) else "0";
    empty_fu_540_p1 <= PhaseV_1_fu_529_p3(6 - 1 downto 0);
    grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_start <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_ap_start_reg;
    grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_start <= grp_vscale_core_polyphase_Pipeline_loop_width_for_procpix_fu_247_ap_start_reg;
    icmp124_fu_444_p2 <= "1" when (tmp_7_fu_434_p4 = ap_const_lv9_0) else "0";
    icmp_ln180_fu_304_p2 <= "1" when (unsigned(OutLines_reg_596) > unsigned(InLines_reg_608)) else "0";
    icmp_ln214_fu_323_p2 <= "1" when (unsigned(y_fu_126) < unsigned(YLoopSize_reg_630)) else "0";
    icmp_ln222_fu_343_p2 <= "1" when (unsigned(y_fu_126) > unsigned(ap_const_lv11_2)) else "0";
    icmp_ln241_1_fu_413_p2 <= "1" when (unsigned(WriteLoc_fu_110) < unsigned(zext_ln177_reg_620)) else "0";
    icmp_ln241_fu_461_p2 <= "1" when (tmp_6_reg_663 = ap_const_lv16_0) else "0";
    offset_1_fu_381_p2 <= std_logic_vector(unsigned(offset_fu_114) + unsigned(ap_const_lv32_FFFF0000));
    offset_2_fu_387_p3 <= 
        offset_1_fu_381_p2 when (GetNewLine_1_fu_369_p2(0) = '1') else 
        offset_fu_114;
    offset_3_fu_471_p2 <= std_logic_vector(unsigned(offset_2_reg_657) + unsigned(Rate_reg_615));
    offset_4_fu_487_p3 <= 
        offset_3_fu_471_p2 when (OutputWriteEn_fu_466_p2(0) = '1') else 
        offset_2_reg_657;
    offset_5_fu_500_p3 <= 
        offset_4_fu_487_p3 when (icmp_ln222_reg_644(0) = '1') else 
        offset_fu_114;
    tmp_7_fu_434_p4 <= y_fu_126(10 downto 2);
    tmp_fu_359_p4 <= offset_fu_114(31 downto 16);
    vfltCoeff_address0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_vfltCoeff_address0;
    vfltCoeff_ce0 <= grp_vscale_core_polyphase_Pipeline_loop_init_coeff_phase_loop_init_coeff_tap_fu_229_vfltCoeff_ce0;
    y_2_fu_328_p2 <= std_logic_vector(unsigned(y_fu_126) + unsigned(ap_const_lv11_1));
    zext_ln177_fu_298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(OutLines_reg_596),32));
    zext_ln180_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(InLines_reg_608),17));
    zext_ln196_fu_526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_reg_652),8));
end behav;
