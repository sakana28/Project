-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_3a92_ltr_0_MultiPixStream2AXIvideo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    outYUV_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    outYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    outYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    outYUV_empty_n : IN STD_LOGIC;
    outYUV_read : OUT STD_LOGIC;
    m_axis_video_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    m_axis_video_TVALID : OUT STD_LOGIC;
    m_axis_video_TREADY : IN STD_LOGIC;
    m_axis_video_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axis_video_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axis_video_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    height : IN STD_LOGIC_VECTOR (15 downto 0);
    width : IN STD_LOGIC_VECTOR (15 downto 0);
    video_format : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of bd_3a92_ltr_0_MultiPixStream2AXIvideo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_reg_unsigned_short_s_fu_124_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal rows_reg_207 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_reg_unsigned_short_s_fu_134_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal cols_reg_212 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_fu_154_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_reg_217 : STD_LOGIC_VECTOR (11 downto 0);
    signal cmp17234_fu_160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp17234_reg_227 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_174_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_2_reg_234 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_start : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_done : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_idle : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_ready : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_outYUV_read : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TREADY : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TVALID : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_reg_unsigned_short_s_fu_124_d : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_reg_unsigned_short_s_fu_134_d : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_fu_70 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state5_on_subcall_done : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal sof_fu_74 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln344_fu_150_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln378_fu_169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal regslice_both_m_axis_video_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal m_axis_video_TVALID_int_regslice : STD_LOGIC;
    signal m_axis_video_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_m_axis_video_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_m_axis_video_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_m_axis_video_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_m_axis_video_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_m_axis_video_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_m_axis_video_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_m_axis_video_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_m_axis_video_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_m_axis_video_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_m_axis_video_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_m_axis_video_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_m_axis_video_V_id_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_m_axis_video_V_id_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_m_axis_video_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_m_axis_video_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_m_axis_video_V_dest_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component bd_3a92_ltr_0_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        outYUV_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        outYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        outYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        outYUV_empty_n : IN STD_LOGIC;
        outYUV_read : OUT STD_LOGIC;
        m_axis_video_TREADY : IN STD_LOGIC;
        sof : IN STD_LOGIC_VECTOR (0 downto 0);
        cols : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axis_video_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        m_axis_video_TVALID : OUT STD_LOGIC;
        m_axis_video_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axis_video_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axis_video_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
        video_format_load : IN STD_LOGIC_VECTOR (15 downto 0);
        sub : IN STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component bd_3a92_ltr_0_reg_unsigned_short_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        d : IN STD_LOGIC_VECTOR (10 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component bd_3a92_ltr_0_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96 : component bd_3a92_ltr_0_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_start,
        ap_done => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_done,
        ap_idle => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_idle,
        ap_ready => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_ready,
        outYUV_dout => outYUV_dout,
        outYUV_num_data_valid => ap_const_lv5_0,
        outYUV_fifo_cap => ap_const_lv5_0,
        outYUV_empty_n => outYUV_empty_n,
        outYUV_read => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_outYUV_read,
        m_axis_video_TREADY => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TREADY,
        sof => sof_fu_74,
        cols => cols_reg_212,
        m_axis_video_TDATA => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TDATA,
        m_axis_video_TVALID => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TVALID,
        m_axis_video_TKEEP => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TKEEP,
        m_axis_video_TSTRB => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TSTRB,
        m_axis_video_TUSER => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TUSER,
        m_axis_video_TLAST => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TLAST,
        m_axis_video_TID => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TID,
        m_axis_video_TDEST => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TDEST,
        video_format_load => video_format,
        sub => sub_reg_217);

    grp_reg_unsigned_short_s_fu_124 : component bd_3a92_ltr_0_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        d => grp_reg_unsigned_short_s_fu_124_d,
        ap_return => grp_reg_unsigned_short_s_fu_124_ap_return);

    grp_reg_unsigned_short_s_fu_134 : component bd_3a92_ltr_0_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        d => grp_reg_unsigned_short_s_fu_134_d,
        ap_return => grp_reg_unsigned_short_s_fu_134_ap_return);

    regslice_both_m_axis_video_V_data_V_U : component bd_3a92_ltr_0_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TDATA,
        vld_in => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TVALID,
        ack_in => m_axis_video_TREADY_int_regslice,
        data_out => m_axis_video_TDATA,
        vld_out => regslice_both_m_axis_video_V_data_V_U_vld_out,
        ack_out => m_axis_video_TREADY,
        apdone_blk => regslice_both_m_axis_video_V_data_V_U_apdone_blk);

    regslice_both_m_axis_video_V_keep_V_U : component bd_3a92_ltr_0_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TKEEP,
        vld_in => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TVALID,
        ack_in => regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy,
        data_out => m_axis_video_TKEEP,
        vld_out => regslice_both_m_axis_video_V_keep_V_U_vld_out,
        ack_out => m_axis_video_TREADY,
        apdone_blk => regslice_both_m_axis_video_V_keep_V_U_apdone_blk);

    regslice_both_m_axis_video_V_strb_V_U : component bd_3a92_ltr_0_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TSTRB,
        vld_in => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TVALID,
        ack_in => regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy,
        data_out => m_axis_video_TSTRB,
        vld_out => regslice_both_m_axis_video_V_strb_V_U_vld_out,
        ack_out => m_axis_video_TREADY,
        apdone_blk => regslice_both_m_axis_video_V_strb_V_U_apdone_blk);

    regslice_both_m_axis_video_V_user_V_U : component bd_3a92_ltr_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TUSER,
        vld_in => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TVALID,
        ack_in => regslice_both_m_axis_video_V_user_V_U_ack_in_dummy,
        data_out => m_axis_video_TUSER,
        vld_out => regslice_both_m_axis_video_V_user_V_U_vld_out,
        ack_out => m_axis_video_TREADY,
        apdone_blk => regslice_both_m_axis_video_V_user_V_U_apdone_blk);

    regslice_both_m_axis_video_V_last_V_U : component bd_3a92_ltr_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TLAST,
        vld_in => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TVALID,
        ack_in => regslice_both_m_axis_video_V_last_V_U_ack_in_dummy,
        data_out => m_axis_video_TLAST,
        vld_out => regslice_both_m_axis_video_V_last_V_U_vld_out,
        ack_out => m_axis_video_TREADY,
        apdone_blk => regslice_both_m_axis_video_V_last_V_U_apdone_blk);

    regslice_both_m_axis_video_V_id_V_U : component bd_3a92_ltr_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TID,
        vld_in => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TVALID,
        ack_in => regslice_both_m_axis_video_V_id_V_U_ack_in_dummy,
        data_out => m_axis_video_TID,
        vld_out => regslice_both_m_axis_video_V_id_V_U_vld_out,
        ack_out => m_axis_video_TREADY,
        apdone_blk => regslice_both_m_axis_video_V_id_V_U_apdone_blk);

    regslice_both_m_axis_video_V_dest_V_U : component bd_3a92_ltr_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TDEST,
        vld_in => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TVALID,
        ack_in => regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy,
        data_out => m_axis_video_TDEST,
        vld_out => regslice_both_m_axis_video_V_dest_V_U_vld_out,
        ack_out => m_axis_video_TREADY,
        apdone_blk => regslice_both_m_axis_video_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (regslice_both_m_axis_video_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_ready = ap_const_logic_1)) then 
                    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_70 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5_on_subcall_done))) then 
                i_fu_70 <= i_2_reg_234;
            end if; 
        end if;
    end process;

    sof_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                sof_fu_74 <= ap_const_lv1_1;
            elsif (((cmp17234_reg_227 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5_on_subcall_done))) then 
                sof_fu_74 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                cmp17234_reg_227 <= cmp17234_fu_160_p2;
                cols_reg_212 <= grp_reg_unsigned_short_s_fu_134_ap_return;
                rows_reg_207 <= grp_reg_unsigned_short_s_fu_124_ap_return;
                sub_reg_217 <= sub_fu_154_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i_2_reg_234 <= i_2_fu_174_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, cmp17234_reg_227, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_block_state5_on_subcall_done, icmp_ln378_fu_169_p2, ap_CS_fsm_state6, regslice_both_m_axis_video_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((cmp17234_reg_227 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln378_fu_169_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((cmp17234_reg_227 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln378_fu_169_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (regslice_both_m_axis_video_V_data_V_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(ap_block_state5_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state5_on_subcall_done)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(regslice_both_m_axis_video_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_m_axis_video_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state5_on_subcall_done_assign_proc : process(cmp17234_reg_227, grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_done)
    begin
                ap_block_state5_on_subcall_done <= ((grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_done = ap_const_logic_0) and (cmp17234_reg_227 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6, regslice_both_m_axis_video_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (regslice_both_m_axis_video_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6, regslice_both_m_axis_video_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (regslice_both_m_axis_video_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp17234_fu_160_p2 <= "1" when (grp_reg_unsigned_short_s_fu_134_ap_return = ap_const_lv11_0) else "0";
    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_start <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_ap_start_reg;
    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TREADY <= (m_axis_video_TREADY_int_regslice and ap_CS_fsm_state5);
    grp_reg_unsigned_short_s_fu_124_d <= height(11 - 1 downto 0);
    grp_reg_unsigned_short_s_fu_134_d <= width(11 - 1 downto 0);
    i_2_fu_174_p2 <= std_logic_vector(unsigned(i_fu_70) + unsigned(ap_const_lv11_1));
    icmp_ln378_fu_169_p2 <= "1" when (i_fu_70 = rows_reg_207) else "0";
    m_axis_video_TVALID <= regslice_both_m_axis_video_V_data_V_U_vld_out;
    m_axis_video_TVALID_int_regslice <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_m_axis_video_TVALID;

    outYUV_read_assign_proc : process(cmp17234_reg_227, grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_outYUV_read, ap_CS_fsm_state5)
    begin
        if (((cmp17234_reg_227 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            outYUV_read <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_380_2_fu_96_outYUV_read;
        else 
            outYUV_read <= ap_const_logic_0;
        end if; 
    end process;

    sub_fu_154_p2 <= std_logic_vector(unsigned(zext_ln344_fu_150_p1) + unsigned(ap_const_lv12_FFF));
    zext_ln344_fu_150_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_reg_unsigned_short_s_fu_134_ap_return),12));
end behav;
