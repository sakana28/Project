-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_3a92_ltr_0_AXIvideo2MultiPixStream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    s_axis_video_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    s_axis_video_TVALID : IN STD_LOGIC;
    s_axis_video_TREADY : OUT STD_LOGIC;
    s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    srcYUV_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    srcYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    srcYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    srcYUV_full_n : IN STD_LOGIC;
    srcYUV_write : OUT STD_LOGIC;
    height : IN STD_LOGIC_VECTOR (15 downto 0);
    width : IN STD_LOGIC_VECTOR (15 downto 0);
    video_format : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of bd_3a92_ltr_0_AXIvideo2MultiPixStream is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_257_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal rows_reg_377 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_reg_unsigned_short_s_fu_262_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal cols_reg_382 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmp8460_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp8460_reg_390 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln265_fu_285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln265_reg_399 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_4_fu_290_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_4_reg_403 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_start : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_done : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_idle : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_ready : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_s_axis_video_TREADY : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_axi_data_V_out : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_axi_data_V_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_axi_last_V_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_axi_last_V_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_start : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_done : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_idle : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_ready : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_srcYUV_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_srcYUV_write : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_cond : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_s_axis_video_TREADY : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_eol_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_eol_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_axi_data_V_15_out : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_axi_data_V_15_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_start : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_done : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_idle : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_ready : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_s_axis_video_TREADY : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_axi_data_V_16_out : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_axi_data_V_16_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_axi_last_V_4_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_axi_last_V_4_out_ap_vld : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_257_d : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_reg_unsigned_short_s_fu_262_d : STD_LOGIC_VECTOR (10 downto 0);
    signal axi_last_V_2_reg_122 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal axi_data_2_lcssa_reg_132 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal axi_last_2_lcssa_reg_142 : STD_LOGIC_VECTOR (0 downto 0);
    signal eol_0_lcssa_reg_153 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal axi_data_V_14_fu_80 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal axi_last_V_4_loc_fu_88 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_76 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal sof_fu_84 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal regslice_both_s_axis_video_V_data_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_video_TDATA_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal s_axis_video_TVALID_int_regslice : STD_LOGIC;
    signal s_axis_video_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_s_axis_video_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_video_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_video_TKEEP_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_s_axis_video_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_video_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_video_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_video_TSTRB_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_s_axis_video_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_video_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_video_V_user_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_video_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_s_axis_video_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_video_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_video_V_last_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_video_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_s_axis_video_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_video_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_video_V_id_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_video_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_s_axis_video_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_video_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_video_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_video_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_s_axis_video_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_video_V_dest_V_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component bd_3a92_ltr_0_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_axis_video_TVALID : IN STD_LOGIC;
        s_axis_video_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        s_axis_video_TREADY : OUT STD_LOGIC;
        s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        axi_data_V_out : OUT STD_LOGIC_VECTOR (23 downto 0);
        axi_data_V_out_ap_vld : OUT STD_LOGIC;
        axi_last_V_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        axi_last_V_out_ap_vld : OUT STD_LOGIC );
    end component;


    component bd_3a92_ltr_0_AXIvideo2MultiPixStream_Pipeline_loop_width IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_axis_video_TVALID : IN STD_LOGIC;
        srcYUV_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        srcYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        srcYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        srcYUV_full_n : IN STD_LOGIC;
        srcYUV_write : OUT STD_LOGIC;
        sof_5 : IN STD_LOGIC_VECTOR (0 downto 0);
        axi_last_V_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        axi_data_V_14 : IN STD_LOGIC_VECTOR (23 downto 0);
        cols : IN STD_LOGIC_VECTOR (10 downto 0);
        cond : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        s_axis_video_TREADY : OUT STD_LOGIC;
        s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        eol_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        eol_out_ap_vld : OUT STD_LOGIC;
        axi_data_V_15_out : OUT STD_LOGIC_VECTOR (23 downto 0);
        axi_data_V_15_out_ap_vld : OUT STD_LOGIC );
    end component;


    component bd_3a92_ltr_0_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_axis_video_TVALID : IN STD_LOGIC;
        axi_data_2_lcssa : IN STD_LOGIC_VECTOR (23 downto 0);
        axi_last_2_lcssa : IN STD_LOGIC_VECTOR (0 downto 0);
        eol_0_lcssa : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        s_axis_video_TREADY : OUT STD_LOGIC;
        s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        axi_data_V_16_out : OUT STD_LOGIC_VECTOR (23 downto 0);
        axi_data_V_16_out_ap_vld : OUT STD_LOGIC;
        axi_last_V_4_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        axi_last_V_4_out_ap_vld : OUT STD_LOGIC );
    end component;


    component bd_3a92_ltr_0_reg_unsigned_short_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        d : IN STD_LOGIC_VECTOR (10 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component bd_3a92_ltr_0_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165 : component bd_3a92_ltr_0_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_start,
        ap_done => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_done,
        ap_idle => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_idle,
        ap_ready => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_ready,
        s_axis_video_TVALID => s_axis_video_TVALID_int_regslice,
        s_axis_video_TDATA => s_axis_video_TDATA_int_regslice,
        s_axis_video_TREADY => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_s_axis_video_TREADY,
        s_axis_video_TKEEP => s_axis_video_TKEEP_int_regslice,
        s_axis_video_TSTRB => s_axis_video_TSTRB_int_regslice,
        s_axis_video_TUSER => s_axis_video_TUSER_int_regslice,
        s_axis_video_TLAST => s_axis_video_TLAST_int_regslice,
        s_axis_video_TID => s_axis_video_TID_int_regslice,
        s_axis_video_TDEST => s_axis_video_TDEST_int_regslice,
        axi_data_V_out => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_axi_data_V_out,
        axi_data_V_out_ap_vld => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_axi_data_V_out_ap_vld,
        axi_last_V_out => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_axi_last_V_out,
        axi_last_V_out_ap_vld => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_axi_last_V_out_ap_vld);

    grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185 : component bd_3a92_ltr_0_AXIvideo2MultiPixStream_Pipeline_loop_width
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_start,
        ap_done => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_done,
        ap_idle => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_idle,
        ap_ready => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_ready,
        s_axis_video_TVALID => s_axis_video_TVALID_int_regslice,
        srcYUV_din => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_srcYUV_din,
        srcYUV_num_data_valid => ap_const_lv5_0,
        srcYUV_fifo_cap => ap_const_lv5_0,
        srcYUV_full_n => srcYUV_full_n,
        srcYUV_write => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_srcYUV_write,
        sof_5 => sof_fu_84,
        axi_last_V_2 => axi_last_V_2_reg_122,
        axi_data_V_14 => axi_data_V_14_fu_80,
        cols => cols_reg_382,
        cond => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_cond,
        s_axis_video_TDATA => s_axis_video_TDATA_int_regslice,
        s_axis_video_TREADY => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_s_axis_video_TREADY,
        s_axis_video_TKEEP => s_axis_video_TKEEP_int_regslice,
        s_axis_video_TSTRB => s_axis_video_TSTRB_int_regslice,
        s_axis_video_TUSER => s_axis_video_TUSER_int_regslice,
        s_axis_video_TLAST => s_axis_video_TLAST_int_regslice,
        s_axis_video_TID => s_axis_video_TID_int_regslice,
        s_axis_video_TDEST => s_axis_video_TDEST_int_regslice,
        eol_out => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_eol_out,
        eol_out_ap_vld => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_eol_out_ap_vld,
        axi_data_V_15_out => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_axi_data_V_15_out,
        axi_data_V_15_out_ap_vld => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_axi_data_V_15_out_ap_vld);

    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213 : component bd_3a92_ltr_0_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_start,
        ap_done => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_done,
        ap_idle => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_idle,
        ap_ready => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_ready,
        s_axis_video_TVALID => s_axis_video_TVALID_int_regslice,
        axi_data_2_lcssa => axi_data_2_lcssa_reg_132,
        axi_last_2_lcssa => axi_last_2_lcssa_reg_142,
        eol_0_lcssa => eol_0_lcssa_reg_153,
        s_axis_video_TDATA => s_axis_video_TDATA_int_regslice,
        s_axis_video_TREADY => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_s_axis_video_TREADY,
        s_axis_video_TKEEP => s_axis_video_TKEEP_int_regslice,
        s_axis_video_TSTRB => s_axis_video_TSTRB_int_regslice,
        s_axis_video_TUSER => s_axis_video_TUSER_int_regslice,
        s_axis_video_TLAST => s_axis_video_TLAST_int_regslice,
        s_axis_video_TID => s_axis_video_TID_int_regslice,
        s_axis_video_TDEST => s_axis_video_TDEST_int_regslice,
        axi_data_V_16_out => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_axi_data_V_16_out,
        axi_data_V_16_out_ap_vld => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_axi_data_V_16_out_ap_vld,
        axi_last_V_4_out => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_axi_last_V_4_out,
        axi_last_V_4_out_ap_vld => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_axi_last_V_4_out_ap_vld);

    grp_reg_unsigned_short_s_fu_257 : component bd_3a92_ltr_0_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        d => grp_reg_unsigned_short_s_fu_257_d,
        ap_return => grp_reg_unsigned_short_s_fu_257_ap_return);

    grp_reg_unsigned_short_s_fu_262 : component bd_3a92_ltr_0_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        d => grp_reg_unsigned_short_s_fu_262_d,
        ap_return => grp_reg_unsigned_short_s_fu_262_ap_return);

    regslice_both_s_axis_video_V_data_V_U : component bd_3a92_ltr_0_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_video_TDATA,
        vld_in => s_axis_video_TVALID,
        ack_in => regslice_both_s_axis_video_V_data_V_U_ack_in,
        data_out => s_axis_video_TDATA_int_regslice,
        vld_out => s_axis_video_TVALID_int_regslice,
        ack_out => s_axis_video_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_video_V_data_V_U_apdone_blk);

    regslice_both_s_axis_video_V_keep_V_U : component bd_3a92_ltr_0_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_video_TKEEP,
        vld_in => s_axis_video_TVALID,
        ack_in => regslice_both_s_axis_video_V_keep_V_U_ack_in,
        data_out => s_axis_video_TKEEP_int_regslice,
        vld_out => regslice_both_s_axis_video_V_keep_V_U_vld_out,
        ack_out => s_axis_video_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_video_V_keep_V_U_apdone_blk);

    regslice_both_s_axis_video_V_strb_V_U : component bd_3a92_ltr_0_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_video_TSTRB,
        vld_in => s_axis_video_TVALID,
        ack_in => regslice_both_s_axis_video_V_strb_V_U_ack_in,
        data_out => s_axis_video_TSTRB_int_regslice,
        vld_out => regslice_both_s_axis_video_V_strb_V_U_vld_out,
        ack_out => s_axis_video_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_video_V_strb_V_U_apdone_blk);

    regslice_both_s_axis_video_V_user_V_U : component bd_3a92_ltr_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_video_TUSER,
        vld_in => s_axis_video_TVALID,
        ack_in => regslice_both_s_axis_video_V_user_V_U_ack_in,
        data_out => s_axis_video_TUSER_int_regslice,
        vld_out => regslice_both_s_axis_video_V_user_V_U_vld_out,
        ack_out => s_axis_video_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_video_V_user_V_U_apdone_blk);

    regslice_both_s_axis_video_V_last_V_U : component bd_3a92_ltr_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_video_TLAST,
        vld_in => s_axis_video_TVALID,
        ack_in => regslice_both_s_axis_video_V_last_V_U_ack_in,
        data_out => s_axis_video_TLAST_int_regslice,
        vld_out => regslice_both_s_axis_video_V_last_V_U_vld_out,
        ack_out => s_axis_video_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_video_V_last_V_U_apdone_blk);

    regslice_both_s_axis_video_V_id_V_U : component bd_3a92_ltr_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_video_TID,
        vld_in => s_axis_video_TVALID,
        ack_in => regslice_both_s_axis_video_V_id_V_U_ack_in,
        data_out => s_axis_video_TID_int_regslice,
        vld_out => regslice_both_s_axis_video_V_id_V_U_vld_out,
        ack_out => s_axis_video_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_video_V_id_V_U_apdone_blk);

    regslice_both_s_axis_video_V_dest_V_U : component bd_3a92_ltr_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_video_TDEST,
        vld_in => s_axis_video_TVALID,
        ack_in => regslice_both_s_axis_video_V_dest_V_U_ack_in,
        data_out => s_axis_video_TDEST_int_regslice,
        vld_out => regslice_both_s_axis_video_V_dest_V_U_vld_out,
        ack_out => s_axis_video_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_video_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln265_reg_399 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_ready = ap_const_logic_1)) then 
                    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_ready = ap_const_logic_1)) then 
                    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln265_reg_399 = ap_const_lv1_0) and (cmp8460_reg_390 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_ready = ap_const_logic_1)) then 
                    grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    axi_data_2_lcssa_reg_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln265_reg_399 = ap_const_lv1_0) and (cmp8460_reg_390 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                axi_data_2_lcssa_reg_132 <= axi_data_V_14_fu_80;
            elsif (((cmp8460_reg_390 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                axi_data_2_lcssa_reg_132 <= grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_axi_data_V_15_out;
            end if; 
        end if;
    end process;

    axi_data_V_14_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_axi_data_V_16_out_ap_vld = ap_const_logic_1))) then 
                axi_data_V_14_fu_80 <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_axi_data_V_16_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_axi_data_V_out_ap_vld = ap_const_logic_1))) then 
                axi_data_V_14_fu_80 <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_axi_data_V_out;
            end if; 
        end if;
    end process;

    axi_last_2_lcssa_reg_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln265_reg_399 = ap_const_lv1_0) and (cmp8460_reg_390 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                axi_last_2_lcssa_reg_142 <= axi_last_V_2_reg_122;
            elsif (((cmp8460_reg_390 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                axi_last_2_lcssa_reg_142 <= grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_eol_out;
            end if; 
        end if;
    end process;

    axi_last_V_2_reg_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                axi_last_V_2_reg_122 <= axi_last_V_4_loc_fu_88;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                axi_last_V_2_reg_122 <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_axi_last_V_out;
            end if; 
        end if;
    end process;

    eol_0_lcssa_reg_153_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln265_reg_399 = ap_const_lv1_0) and (cmp8460_reg_390 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                eol_0_lcssa_reg_153 <= ap_const_lv1_0;
            elsif (((cmp8460_reg_390 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                eol_0_lcssa_reg_153 <= grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_eol_out;
            end if; 
        end if;
    end process;

    i_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_76 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i_fu_76 <= i_4_reg_403;
            end if; 
        end if;
    end process;

    sof_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                sof_fu_84 <= ap_const_lv1_1;
            elsif (((cmp8460_reg_390 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                sof_fu_84 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_axi_last_V_4_out_ap_vld = ap_const_logic_1))) then
                axi_last_V_4_loc_fu_88 <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_axi_last_V_4_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                cmp8460_reg_390 <= cmp8460_fu_270_p2;
                cols_reg_382 <= grp_reg_unsigned_short_s_fu_262_ap_return;
                rows_reg_377 <= grp_reg_unsigned_short_s_fu_257_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                i_4_reg_403 <= i_4_fu_290_p2;
                icmp_ln265_reg_399 <= icmp_ln265_fu_285_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, cmp8460_reg_390, icmp_ln265_reg_399, grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_done, grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_done, grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_done, ap_CS_fsm_state6, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state10)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln265_reg_399 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((icmp_ln265_reg_399 = ap_const_lv1_0) and (cmp8460_reg_390 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_done)
    begin
        if ((grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_done)
    begin
        if ((grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_done)
    begin
        if ((grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln265_reg_399, ap_CS_fsm_state6)
    begin
        if (((icmp_ln265_reg_399 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    cmp8460_fu_270_p2 <= "1" when (grp_reg_unsigned_short_s_fu_262_ap_return = ap_const_lv11_0) else "0";
    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_start <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_ap_start_reg;
    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_start <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_ap_start_reg;
    grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_start <= grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_ap_start_reg;
    grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_cond <= "1" when (video_format = ap_const_lv16_0) else "0";
    grp_reg_unsigned_short_s_fu_257_d <= height(11 - 1 downto 0);
    grp_reg_unsigned_short_s_fu_262_d <= width(11 - 1 downto 0);
    i_4_fu_290_p2 <= std_logic_vector(unsigned(i_fu_76) + unsigned(ap_const_lv11_1));
    icmp_ln265_fu_285_p2 <= "1" when (i_fu_76 = rows_reg_377) else "0";

    internal_ap_ready_assign_proc : process(icmp_ln265_reg_399, ap_CS_fsm_state6)
    begin
        if (((icmp_ln265_reg_399 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    s_axis_video_TREADY <= regslice_both_s_axis_video_V_data_V_U_ack_in;

    s_axis_video_TREADY_int_regslice_assign_proc : process(grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_s_axis_video_TREADY, grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_s_axis_video_TREADY, grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_s_axis_video_TREADY, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            s_axis_video_TREADY_int_regslice <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_213_s_axis_video_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            s_axis_video_TREADY_int_regslice <= grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_s_axis_video_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            s_axis_video_TREADY_int_regslice <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_165_s_axis_video_TREADY;
        else 
            s_axis_video_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    srcYUV_din <= grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_srcYUV_din;

    srcYUV_write_assign_proc : process(grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_srcYUV_write, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            srcYUV_write <= grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_185_srcYUV_write;
        else 
            srcYUV_write <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
