-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_3a92_hcr_0_v_hcresampler_core_Pipeline_VITIS_LOOP_159_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    srcYUV_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    srcYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    srcYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    srcYUV_empty_n : IN STD_LOGIC;
    srcYUV_read : OUT STD_LOGIC;
    outYUV_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    outYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    outYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    outYUV_full_n : IN STD_LOGIC;
    outYUV_write : OUT STD_LOGIC;
    pixbuf_y_val_V_4 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_3 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_2 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V : IN STD_LOGIC_VECTOR (7 downto 0);
    loopWidth : IN STD_LOGIC_VECTOR (10 downto 0);
    cmp56 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv285_cast_cast_cast_cast : IN STD_LOGIC_VECTOR (0 downto 0);
    not_icmp_ln145 : IN STD_LOGIC_VECTOR (0 downto 0);
    coefs_0_2_load : IN STD_LOGIC_VECTOR (15 downto 0);
    coefs_1_2_load : IN STD_LOGIC_VECTOR (15 downto 0);
    coefs_0_0_load : IN STD_LOGIC_VECTOR (15 downto 0);
    coefs_1_0_load : IN STD_LOGIC_VECTOR (15 downto 0);
    coefs_0_1_load : IN STD_LOGIC_VECTOR (15 downto 0);
    coefs_1_1_load : IN STD_LOGIC_VECTOR (15 downto 0);
    coefs_0_3_load : IN STD_LOGIC_VECTOR (15 downto 0);
    coefs_1_3_load : IN STD_LOGIC_VECTOR (15 downto 0);
    icmp_ln145 : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp394_not : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp425 : IN STD_LOGIC_VECTOR (0 downto 0);
    select_ln156 : IN STD_LOGIC_VECTOR (2 downto 0);
    width_cast2_cast : IN STD_LOGIC_VECTOR (10 downto 0);
    pixbuf_y_val_V_9_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_9_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_8_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_8_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_7_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_7_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_6_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_6_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_6_out_o_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_5_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_5_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0_2467_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0_2467_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0_2467_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0185_2463_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0185_2463_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0185_2463_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0_1460_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0_1460_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0_1460_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0185_1457_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0185_1457_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0185_1457_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0451453_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0451453_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0451453_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0451_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0451_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0451_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0185445447_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0185445447_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0185445447_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0185445_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0185445_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0185445_out_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_0440_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0440_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0440_out_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_0436_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0436_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0436_out_o_ap_vld : OUT STD_LOGIC;
    p_0_2_0_0_0431_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_0431_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_0431_out_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_0429_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0429_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0429_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0193427_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0193427_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0193427_out_o_ap_vld : OUT STD_LOGIC;
    filt_res1_1_out_i : IN STD_LOGIC_VECTOR (63 downto 0);
    filt_res1_1_out_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    filt_res1_1_out_o_ap_vld : OUT STD_LOGIC;
    filt_res0_1_out_i : IN STD_LOGIC_VECTOR (63 downto 0);
    filt_res0_1_out_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    filt_res0_1_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of bd_3a92_hcr_0_v_hcresampler_core_Pipeline_VITIS_LOOP_159_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv24_800 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000100000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln159_reg_1289 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1298 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op76_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal tmp_5_reg_1314 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1314_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op239_write_state15 : BOOLEAN;
    signal icmp_ln168_reg_1298_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op245_write_state15 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln159_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal srcYUV_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal outYUV_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal cmp56_read_read_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln159_fu_377_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln159_reg_1282 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln159_reg_1282_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln159_reg_1282_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln159_reg_1289_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln159_reg_1289_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln159_reg_1289_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln159_reg_1289_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln159_reg_1289_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln159_reg_1289_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln159_reg_1289_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln159_reg_1289_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln159_reg_1289_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln159_reg_1289_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln159_reg_1289_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln159_reg_1289_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_fu_399_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_1293 : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_1293_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1298_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1298_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1298_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1298_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1298_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1298_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1298_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1298_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1298_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1298_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1298_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1298_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln220_fu_421_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln220_reg_1302 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln220_reg_1302_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln220_reg_1302_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1314_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1314_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1314_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1314_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1314_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1314_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1314_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1314_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1314_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1314_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1314_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1314_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln145_fu_442_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_reg_1318 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_reg_1318_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_reg_1318_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_reg_1318_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_reg_1318_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_reg_1318_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_reg_1318_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_reg_1318_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_reg_1318_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_reg_1318_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_reg_1318_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_reg_1318_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_1_reg_1324 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_1_reg_1324_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_1_reg_1324_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_1_reg_1324_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_1_reg_1324_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_1_reg_1324_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_1_reg_1324_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_1_reg_1324_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_1_reg_1324_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_1_reg_1324_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_1_reg_1324_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_1_reg_1324_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_2_reg_1332 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_2_reg_1332_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_2_reg_1332_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_2_reg_1332_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_2_reg_1332_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_2_reg_1332_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_2_reg_1332_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_2_reg_1332_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_2_reg_1332_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_2_reg_1332_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_2_reg_1332_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_2_reg_1332_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal cmp335_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp335_reg_1338 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp335_reg_1338_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp335_reg_1338_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp335_reg_1338_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp335_reg_1338_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp335_reg_1338_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp335_reg_1338_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp335_reg_1338_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp335_reg_1338_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp335_reg_1338_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp335_reg_1338_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_reg_1344 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_reg_1344_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_reg_1344_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_reg_1344_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_reg_1344_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_reg_1344_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_reg_1344_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_reg_1344_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_reg_1344_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_reg_1344_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_reg_1344_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln250_fu_626_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_reg_1350 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_reg_1350_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_reg_1350_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_reg_1350_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_reg_1350_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_reg_1350_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_1_fu_633_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_1_reg_1355 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_1_reg_1355_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_1_reg_1355_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_1_reg_1355_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_1_reg_1355_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_1_reg_1355_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_2_fu_640_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_2_reg_1360 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_2_reg_1360_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_2_reg_1360_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_2_reg_1360_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_3_fu_647_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_3_reg_1365 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_3_reg_1365_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_3_reg_1365_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_3_reg_1365_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_5_fu_661_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_5_reg_1370 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_5_reg_1370_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_7_fu_675_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_7_reg_1375 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_7_reg_1375_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln350_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln350_reg_1380 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln350_reg_1380_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln350_reg_1380_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln350_reg_1380_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln350_reg_1380_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln350_reg_1380_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1540_fu_692_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1540_1_fu_757_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1111_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal filt_res0_5_reg_1419 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1119_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal filt_res1_5_reg_1424 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1540_2_fu_772_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1127_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal filt_res0_6_reg_1455 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1135_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal filt_res1_6_reg_1460 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1540_3_fu_793_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1143_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal filt_res0_7_reg_1491 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1151_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal filt_res1_7_reg_1496 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1159_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal filt_res0_reg_1501 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1168_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal filt_res1_reg_1506 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_reg_1511 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln403_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln403_reg_1517 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1522 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln404_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln404_reg_1528 : STD_LOGIC_VECTOR (0 downto 0);
    signal pixbuf_y_val_V_9_reg_1533 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_10_reg_1539 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_11_reg_1544 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln408_fu_994_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln408_reg_1549 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln262_fu_1002_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln262_reg_1554 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_exit_pp0_iter13_stage0 : STD_LOGIC;
    signal select_ln250_4_fu_654_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln250_6_fu_668_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln182_fu_474_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln182_1_fu_480_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_res1_4_fu_975_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal filt_res0_4_fu_968_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fu_174 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_2_fu_387_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_x_1 : STD_LOGIC_VECTOR (10 downto 0);
    signal pixbuf_y_val_V_1_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_5_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_6_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_7_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_fu_1050_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_s_fu_1071_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln159_fu_373_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln156_cast_fu_333_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal out_x_fu_393_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal cmp153_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp155_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln228_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln228_fu_562_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln228_1_fu_570_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln228_2_fu_578_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln228_3_fu_586_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln228_4_fu_594_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln228_5_fu_602_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln228_6_fu_610_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln228_7_fu_618_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_fu_686_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln350_fu_752_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln350_2_fu_767_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln350_1_fu_788_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_816_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_fu_838_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln403_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln403_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln403_fu_915_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln3_fu_892_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_res0_3_fu_927_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln404_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln404_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln404_fu_944_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln133_1_fu_901_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_res1_3_fu_956_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln133_fu_935_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln133_1_fu_964_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln408_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln408_fu_986_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln408_1_fu_990_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_1040_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1040_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1111_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1111_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1111_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1119_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1119_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1119_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1127_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1127_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1135_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1135_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1143_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1143_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1151_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1151_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1159_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1159_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1168_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1168_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1111_ce : STD_LOGIC;
    signal grp_fu_1119_ce : STD_LOGIC;
    signal grp_fu_1127_ce : STD_LOGIC;
    signal grp_fu_1135_ce : STD_LOGIC;
    signal grp_fu_1143_ce : STD_LOGIC;
    signal grp_fu_1151_ce : STD_LOGIC;
    signal grp_fu_1159_ce : STD_LOGIC;
    signal grp_fu_1168_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1111_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1119_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1127_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1135_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1143_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1151_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1159_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1168_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_condition_1469 : BOOLEAN;
    signal ap_condition_1473 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component bd_3a92_hcr_0_mux_432_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bd_3a92_hcr_0_mac_muladd_8ns_16s_12ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component bd_3a92_hcr_0_mac_muladd_8ns_16s_24s_25_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component bd_3a92_hcr_0_mac_muladd_8ns_16s_25s_26_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (24 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component bd_3a92_hcr_0_mac_muladd_8ns_16s_26s_26_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component bd_3a92_hcr_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_432_8_1_1_U52 : component bd_3a92_hcr_0_mux_432_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 32,
        dout_WIDTH => 8)
    port map (
        din0 => pixbuf_y_val_V_6_out_i,
        din1 => pixbuf_y_val_V_9_reg_1533,
        din2 => pixbuf_y_val_V_10_reg_1539,
        din3 => pixbuf_y_val_V_11_reg_1544,
        din4 => tmp_2_fu_1040_p5,
        dout => tmp_2_fu_1040_p6);

    mac_muladd_8ns_16s_12ns_24_4_1_U53 : component bd_3a92_hcr_0_mac_muladd_8ns_16s_12ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 16,
        din2_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1111_p0,
        din1 => grp_fu_1111_p1,
        din2 => grp_fu_1111_p2,
        ce => grp_fu_1111_ce,
        dout => grp_fu_1111_p3);

    mac_muladd_8ns_16s_12ns_24_4_1_U54 : component bd_3a92_hcr_0_mac_muladd_8ns_16s_12ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 16,
        din2_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1119_p0,
        din1 => grp_fu_1119_p1,
        din2 => grp_fu_1119_p2,
        ce => grp_fu_1119_ce,
        dout => grp_fu_1119_p3);

    mac_muladd_8ns_16s_24s_25_4_1_U55 : component bd_3a92_hcr_0_mac_muladd_8ns_16s_24s_25_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1127_p0,
        din1 => grp_fu_1127_p1,
        din2 => filt_res0_5_reg_1419,
        ce => grp_fu_1127_ce,
        dout => grp_fu_1127_p3);

    mac_muladd_8ns_16s_24s_25_4_1_U56 : component bd_3a92_hcr_0_mac_muladd_8ns_16s_24s_25_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1135_p0,
        din1 => grp_fu_1135_p1,
        din2 => filt_res1_5_reg_1424,
        ce => grp_fu_1135_ce,
        dout => grp_fu_1135_p3);

    mac_muladd_8ns_16s_25s_26_4_1_U57 : component bd_3a92_hcr_0_mac_muladd_8ns_16s_25s_26_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 16,
        din2_WIDTH => 25,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1143_p0,
        din1 => grp_fu_1143_p1,
        din2 => filt_res0_6_reg_1455,
        ce => grp_fu_1143_ce,
        dout => grp_fu_1143_p3);

    mac_muladd_8ns_16s_25s_26_4_1_U58 : component bd_3a92_hcr_0_mac_muladd_8ns_16s_25s_26_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 16,
        din2_WIDTH => 25,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1151_p0,
        din1 => grp_fu_1151_p1,
        din2 => filt_res1_6_reg_1460,
        ce => grp_fu_1151_ce,
        dout => grp_fu_1151_p3);

    mac_muladd_8ns_16s_26s_26_4_1_U59 : component bd_3a92_hcr_0_mac_muladd_8ns_16s_26s_26_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 16,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1159_p0,
        din1 => grp_fu_1159_p1,
        din2 => filt_res0_7_reg_1491,
        ce => grp_fu_1159_ce,
        dout => grp_fu_1159_p3);

    mac_muladd_8ns_16s_26s_26_4_1_U60 : component bd_3a92_hcr_0_mac_muladd_8ns_16s_26s_26_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 16,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1168_p0,
        din1 => grp_fu_1168_p1,
        din2 => filt_res1_7_reg_1496,
        ce => grp_fu_1168_ce,
        dout => grp_fu_1168_p3);

    flow_control_loop_pipe_sequential_init_U : component bd_3a92_hcr_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter13_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter13_stage0)) then 
                    ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    pixbuf_y_val_V_1_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_1_fu_178 <= pixbuf_y_val_V;
                elsif ((ap_const_boolean_1 = ap_condition_1473)) then 
                    pixbuf_y_val_V_1_fu_178 <= trunc_ln145_reg_1318_pp0_iter12_reg;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_5_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_5_fu_182 <= pixbuf_y_val_V_2;
                elsif (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0))) then 
                    pixbuf_y_val_V_5_fu_182 <= pixbuf_y_val_V_6_fu_186;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_6_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_6_fu_186 <= pixbuf_y_val_V_3;
                elsif (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0))) then 
                    pixbuf_y_val_V_6_fu_186 <= pixbuf_y_val_V_7_fu_190;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_7_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_7_fu_190 <= pixbuf_y_val_V_4;
                elsif (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0))) then 
                    pixbuf_y_val_V_7_fu_190 <= pixbuf_y_val_V_1_fu_178;
                end if;
            end if; 
        end if;
    end process;

    x_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln159_fu_381_p2 = ap_const_lv1_0))) then 
                    x_fu_174 <= x_2_fu_387_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_174 <= ap_const_lv11_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                cmp335_reg_1338_pp0_iter10_reg <= cmp335_reg_1338_pp0_iter9_reg;
                cmp335_reg_1338_pp0_iter11_reg <= cmp335_reg_1338_pp0_iter10_reg;
                cmp335_reg_1338_pp0_iter12_reg <= cmp335_reg_1338_pp0_iter11_reg;
                cmp335_reg_1338_pp0_iter3_reg <= cmp335_reg_1338;
                cmp335_reg_1338_pp0_iter4_reg <= cmp335_reg_1338_pp0_iter3_reg;
                cmp335_reg_1338_pp0_iter5_reg <= cmp335_reg_1338_pp0_iter4_reg;
                cmp335_reg_1338_pp0_iter6_reg <= cmp335_reg_1338_pp0_iter5_reg;
                cmp335_reg_1338_pp0_iter7_reg <= cmp335_reg_1338_pp0_iter6_reg;
                cmp335_reg_1338_pp0_iter8_reg <= cmp335_reg_1338_pp0_iter7_reg;
                cmp335_reg_1338_pp0_iter9_reg <= cmp335_reg_1338_pp0_iter8_reg;
                icmp_ln159_reg_1289_pp0_iter10_reg <= icmp_ln159_reg_1289_pp0_iter9_reg;
                icmp_ln159_reg_1289_pp0_iter11_reg <= icmp_ln159_reg_1289_pp0_iter10_reg;
                icmp_ln159_reg_1289_pp0_iter12_reg <= icmp_ln159_reg_1289_pp0_iter11_reg;
                icmp_ln159_reg_1289_pp0_iter2_reg <= icmp_ln159_reg_1289_pp0_iter1_reg;
                icmp_ln159_reg_1289_pp0_iter3_reg <= icmp_ln159_reg_1289_pp0_iter2_reg;
                icmp_ln159_reg_1289_pp0_iter4_reg <= icmp_ln159_reg_1289_pp0_iter3_reg;
                icmp_ln159_reg_1289_pp0_iter5_reg <= icmp_ln159_reg_1289_pp0_iter4_reg;
                icmp_ln159_reg_1289_pp0_iter6_reg <= icmp_ln159_reg_1289_pp0_iter5_reg;
                icmp_ln159_reg_1289_pp0_iter7_reg <= icmp_ln159_reg_1289_pp0_iter6_reg;
                icmp_ln159_reg_1289_pp0_iter8_reg <= icmp_ln159_reg_1289_pp0_iter7_reg;
                icmp_ln159_reg_1289_pp0_iter9_reg <= icmp_ln159_reg_1289_pp0_iter8_reg;
                icmp_ln168_reg_1298_pp0_iter10_reg <= icmp_ln168_reg_1298_pp0_iter9_reg;
                icmp_ln168_reg_1298_pp0_iter11_reg <= icmp_ln168_reg_1298_pp0_iter10_reg;
                icmp_ln168_reg_1298_pp0_iter12_reg <= icmp_ln168_reg_1298_pp0_iter11_reg;
                icmp_ln168_reg_1298_pp0_iter13_reg <= icmp_ln168_reg_1298_pp0_iter12_reg;
                icmp_ln168_reg_1298_pp0_iter2_reg <= icmp_ln168_reg_1298_pp0_iter1_reg;
                icmp_ln168_reg_1298_pp0_iter3_reg <= icmp_ln168_reg_1298_pp0_iter2_reg;
                icmp_ln168_reg_1298_pp0_iter4_reg <= icmp_ln168_reg_1298_pp0_iter3_reg;
                icmp_ln168_reg_1298_pp0_iter5_reg <= icmp_ln168_reg_1298_pp0_iter4_reg;
                icmp_ln168_reg_1298_pp0_iter6_reg <= icmp_ln168_reg_1298_pp0_iter5_reg;
                icmp_ln168_reg_1298_pp0_iter7_reg <= icmp_ln168_reg_1298_pp0_iter6_reg;
                icmp_ln168_reg_1298_pp0_iter8_reg <= icmp_ln168_reg_1298_pp0_iter7_reg;
                icmp_ln168_reg_1298_pp0_iter9_reg <= icmp_ln168_reg_1298_pp0_iter8_reg;
                or_ln350_reg_1380_pp0_iter4_reg <= or_ln350_reg_1380;
                or_ln350_reg_1380_pp0_iter5_reg <= or_ln350_reg_1380_pp0_iter4_reg;
                or_ln350_reg_1380_pp0_iter6_reg <= or_ln350_reg_1380_pp0_iter5_reg;
                or_ln350_reg_1380_pp0_iter7_reg <= or_ln350_reg_1380_pp0_iter6_reg;
                or_ln350_reg_1380_pp0_iter8_reg <= or_ln350_reg_1380_pp0_iter7_reg;
                or_ln384_reg_1344_pp0_iter10_reg <= or_ln384_reg_1344_pp0_iter9_reg;
                or_ln384_reg_1344_pp0_iter11_reg <= or_ln384_reg_1344_pp0_iter10_reg;
                or_ln384_reg_1344_pp0_iter12_reg <= or_ln384_reg_1344_pp0_iter11_reg;
                or_ln384_reg_1344_pp0_iter3_reg <= or_ln384_reg_1344;
                or_ln384_reg_1344_pp0_iter4_reg <= or_ln384_reg_1344_pp0_iter3_reg;
                or_ln384_reg_1344_pp0_iter5_reg <= or_ln384_reg_1344_pp0_iter4_reg;
                or_ln384_reg_1344_pp0_iter6_reg <= or_ln384_reg_1344_pp0_iter5_reg;
                or_ln384_reg_1344_pp0_iter7_reg <= or_ln384_reg_1344_pp0_iter6_reg;
                or_ln384_reg_1344_pp0_iter8_reg <= or_ln384_reg_1344_pp0_iter7_reg;
                or_ln384_reg_1344_pp0_iter9_reg <= or_ln384_reg_1344_pp0_iter8_reg;
                select_ln220_reg_1302_pp0_iter2_reg <= select_ln220_reg_1302_pp0_iter1_reg;
                select_ln250_1_reg_1355_pp0_iter4_reg <= select_ln250_1_reg_1355;
                select_ln250_1_reg_1355_pp0_iter5_reg <= select_ln250_1_reg_1355_pp0_iter4_reg;
                select_ln250_1_reg_1355_pp0_iter6_reg <= select_ln250_1_reg_1355_pp0_iter5_reg;
                select_ln250_1_reg_1355_pp0_iter7_reg <= select_ln250_1_reg_1355_pp0_iter6_reg;
                select_ln250_1_reg_1355_pp0_iter8_reg <= select_ln250_1_reg_1355_pp0_iter7_reg;
                select_ln250_2_reg_1360_pp0_iter4_reg <= select_ln250_2_reg_1360;
                select_ln250_2_reg_1360_pp0_iter5_reg <= select_ln250_2_reg_1360_pp0_iter4_reg;
                select_ln250_2_reg_1360_pp0_iter6_reg <= select_ln250_2_reg_1360_pp0_iter5_reg;
                select_ln250_3_reg_1365_pp0_iter4_reg <= select_ln250_3_reg_1365;
                select_ln250_3_reg_1365_pp0_iter5_reg <= select_ln250_3_reg_1365_pp0_iter4_reg;
                select_ln250_3_reg_1365_pp0_iter6_reg <= select_ln250_3_reg_1365_pp0_iter5_reg;
                select_ln250_5_reg_1370_pp0_iter4_reg <= select_ln250_5_reg_1370;
                select_ln250_7_reg_1375_pp0_iter4_reg <= select_ln250_7_reg_1375;
                select_ln250_reg_1350_pp0_iter4_reg <= select_ln250_reg_1350;
                select_ln250_reg_1350_pp0_iter5_reg <= select_ln250_reg_1350_pp0_iter4_reg;
                select_ln250_reg_1350_pp0_iter6_reg <= select_ln250_reg_1350_pp0_iter5_reg;
                select_ln250_reg_1350_pp0_iter7_reg <= select_ln250_reg_1350_pp0_iter6_reg;
                select_ln250_reg_1350_pp0_iter8_reg <= select_ln250_reg_1350_pp0_iter7_reg;
                tmp_5_reg_1314_pp0_iter10_reg <= tmp_5_reg_1314_pp0_iter9_reg;
                tmp_5_reg_1314_pp0_iter11_reg <= tmp_5_reg_1314_pp0_iter10_reg;
                tmp_5_reg_1314_pp0_iter12_reg <= tmp_5_reg_1314_pp0_iter11_reg;
                tmp_5_reg_1314_pp0_iter13_reg <= tmp_5_reg_1314_pp0_iter12_reg;
                tmp_5_reg_1314_pp0_iter2_reg <= tmp_5_reg_1314_pp0_iter1_reg;
                tmp_5_reg_1314_pp0_iter3_reg <= tmp_5_reg_1314_pp0_iter2_reg;
                tmp_5_reg_1314_pp0_iter4_reg <= tmp_5_reg_1314_pp0_iter3_reg;
                tmp_5_reg_1314_pp0_iter5_reg <= tmp_5_reg_1314_pp0_iter4_reg;
                tmp_5_reg_1314_pp0_iter6_reg <= tmp_5_reg_1314_pp0_iter5_reg;
                tmp_5_reg_1314_pp0_iter7_reg <= tmp_5_reg_1314_pp0_iter6_reg;
                tmp_5_reg_1314_pp0_iter8_reg <= tmp_5_reg_1314_pp0_iter7_reg;
                tmp_5_reg_1314_pp0_iter9_reg <= tmp_5_reg_1314_pp0_iter8_reg;
                trunc_ln145_1_reg_1324_pp0_iter10_reg <= trunc_ln145_1_reg_1324_pp0_iter9_reg;
                trunc_ln145_1_reg_1324_pp0_iter11_reg <= trunc_ln145_1_reg_1324_pp0_iter10_reg;
                trunc_ln145_1_reg_1324_pp0_iter12_reg <= trunc_ln145_1_reg_1324_pp0_iter11_reg;
                trunc_ln145_1_reg_1324_pp0_iter2_reg <= trunc_ln145_1_reg_1324;
                trunc_ln145_1_reg_1324_pp0_iter3_reg <= trunc_ln145_1_reg_1324_pp0_iter2_reg;
                trunc_ln145_1_reg_1324_pp0_iter4_reg <= trunc_ln145_1_reg_1324_pp0_iter3_reg;
                trunc_ln145_1_reg_1324_pp0_iter5_reg <= trunc_ln145_1_reg_1324_pp0_iter4_reg;
                trunc_ln145_1_reg_1324_pp0_iter6_reg <= trunc_ln145_1_reg_1324_pp0_iter5_reg;
                trunc_ln145_1_reg_1324_pp0_iter7_reg <= trunc_ln145_1_reg_1324_pp0_iter6_reg;
                trunc_ln145_1_reg_1324_pp0_iter8_reg <= trunc_ln145_1_reg_1324_pp0_iter7_reg;
                trunc_ln145_1_reg_1324_pp0_iter9_reg <= trunc_ln145_1_reg_1324_pp0_iter8_reg;
                trunc_ln145_2_reg_1332_pp0_iter10_reg <= trunc_ln145_2_reg_1332_pp0_iter9_reg;
                trunc_ln145_2_reg_1332_pp0_iter11_reg <= trunc_ln145_2_reg_1332_pp0_iter10_reg;
                trunc_ln145_2_reg_1332_pp0_iter12_reg <= trunc_ln145_2_reg_1332_pp0_iter11_reg;
                trunc_ln145_2_reg_1332_pp0_iter2_reg <= trunc_ln145_2_reg_1332;
                trunc_ln145_2_reg_1332_pp0_iter3_reg <= trunc_ln145_2_reg_1332_pp0_iter2_reg;
                trunc_ln145_2_reg_1332_pp0_iter4_reg <= trunc_ln145_2_reg_1332_pp0_iter3_reg;
                trunc_ln145_2_reg_1332_pp0_iter5_reg <= trunc_ln145_2_reg_1332_pp0_iter4_reg;
                trunc_ln145_2_reg_1332_pp0_iter6_reg <= trunc_ln145_2_reg_1332_pp0_iter5_reg;
                trunc_ln145_2_reg_1332_pp0_iter7_reg <= trunc_ln145_2_reg_1332_pp0_iter6_reg;
                trunc_ln145_2_reg_1332_pp0_iter8_reg <= trunc_ln145_2_reg_1332_pp0_iter7_reg;
                trunc_ln145_2_reg_1332_pp0_iter9_reg <= trunc_ln145_2_reg_1332_pp0_iter8_reg;
                trunc_ln145_reg_1318_pp0_iter10_reg <= trunc_ln145_reg_1318_pp0_iter9_reg;
                trunc_ln145_reg_1318_pp0_iter11_reg <= trunc_ln145_reg_1318_pp0_iter10_reg;
                trunc_ln145_reg_1318_pp0_iter12_reg <= trunc_ln145_reg_1318_pp0_iter11_reg;
                trunc_ln145_reg_1318_pp0_iter2_reg <= trunc_ln145_reg_1318;
                trunc_ln145_reg_1318_pp0_iter3_reg <= trunc_ln145_reg_1318_pp0_iter2_reg;
                trunc_ln145_reg_1318_pp0_iter4_reg <= trunc_ln145_reg_1318_pp0_iter3_reg;
                trunc_ln145_reg_1318_pp0_iter5_reg <= trunc_ln145_reg_1318_pp0_iter4_reg;
                trunc_ln145_reg_1318_pp0_iter6_reg <= trunc_ln145_reg_1318_pp0_iter5_reg;
                trunc_ln145_reg_1318_pp0_iter7_reg <= trunc_ln145_reg_1318_pp0_iter6_reg;
                trunc_ln145_reg_1318_pp0_iter8_reg <= trunc_ln145_reg_1318_pp0_iter7_reg;
                trunc_ln145_reg_1318_pp0_iter9_reg <= trunc_ln145_reg_1318_pp0_iter8_reg;
                trunc_ln159_reg_1282_pp0_iter2_reg <= trunc_ln159_reg_1282_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln159_reg_1289 <= icmp_ln159_fu_381_p2;
                icmp_ln159_reg_1289_pp0_iter1_reg <= icmp_ln159_reg_1289;
                icmp_ln168_reg_1298_pp0_iter1_reg <= icmp_ln168_reg_1298;
                odd_col_reg_1293_pp0_iter1_reg <= odd_col_reg_1293;
                select_ln220_reg_1302_pp0_iter1_reg <= select_ln220_reg_1302;
                tmp_5_reg_1314_pp0_iter1_reg <= tmp_5_reg_1314;
                trunc_ln159_reg_1282 <= trunc_ln159_fu_377_p1;
                trunc_ln159_reg_1282_pp0_iter1_reg <= trunc_ln159_reg_1282;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln159_reg_1289_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                cmp335_reg_1338 <= cmp335_fu_508_p2;
                or_ln384_reg_1344 <= or_ln384_fu_513_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln384_reg_1344_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                filt_res0_5_reg_1419 <= grp_fu_1111_p3;
                filt_res1_5_reg_1424 <= grp_fu_1119_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln384_reg_1344_pp0_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln159_reg_1289_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                filt_res0_6_reg_1455 <= grp_fu_1127_p3;
                filt_res1_6_reg_1460 <= grp_fu_1135_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln384_reg_1344_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln159_reg_1289_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                filt_res0_7_reg_1491 <= grp_fu_1143_p3;
                filt_res1_7_reg_1496 <= grp_fu_1151_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (or_ln384_reg_1344_pp0_iter11_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                filt_res0_reg_1501 <= grp_fu_1159_p3;
                filt_res1_reg_1506 <= grp_fu_1168_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln159_fu_381_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln168_reg_1298 <= icmp_ln168_fu_403_p2;
                odd_col_reg_1293 <= odd_col_fu_399_p1;
                select_ln220_reg_1302 <= select_ln220_fu_421_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln384_reg_1344_pp0_iter11_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln403_reg_1517 <= icmp_ln403_fu_825_p2;
                icmp_ln404_reg_1528 <= icmp_ln404_fu_847_p2;
                tmp_3_reg_1522 <= grp_fu_1168_p3(25 downto 25);
                tmp_reg_1511 <= grp_fu_1159_p3(25 downto 25);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_ln350_reg_1380 <= or_ln350_fu_682_p2;
                select_ln250_1_reg_1355 <= select_ln250_1_fu_633_p3;
                select_ln250_2_reg_1360 <= select_ln250_2_fu_640_p3;
                select_ln250_3_reg_1365 <= select_ln250_3_fu_647_p3;
                select_ln250_5_reg_1370 <= select_ln250_5_fu_661_p3;
                select_ln250_7_reg_1375 <= select_ln250_7_fu_675_p3;
                select_ln250_reg_1350 <= select_ln250_fu_626_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                pixbuf_y_val_V_10_reg_1539 <= pixbuf_y_val_V_6_fu_186;
                pixbuf_y_val_V_11_reg_1544 <= pixbuf_y_val_V_7_fu_190;
                pixbuf_y_val_V_9_reg_1533 <= pixbuf_y_val_V_5_fu_182;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln262_reg_1554 <= select_ln262_fu_1002_p3;
                select_ln408_reg_1549 <= select_ln408_fu_994_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln159_fu_381_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp425 = ap_const_lv1_0))) then
                tmp_5_reg_1314 <= out_x_fu_393_p2(11 downto 11);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln168_reg_1298 = ap_const_lv1_1) and (icmp_ln159_reg_1289 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                trunc_ln145_1_reg_1324 <= srcYUV_dout(15 downto 8);
                trunc_ln145_2_reg_1332 <= srcYUV_dout(23 downto 16);
                trunc_ln145_reg_1318 <= trunc_ln145_fu_442_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter14, srcYUV_empty_n, ap_predicate_op76_read_state2, outYUV_full_n, ap_predicate_op239_write_state15, ap_predicate_op245_write_state15)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op76_read_state2 = ap_const_boolean_1) and (srcYUV_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (((ap_predicate_op245_write_state15 = ap_const_boolean_1) and (outYUV_full_n = ap_const_logic_0)) or ((ap_predicate_op239_write_state15 = ap_const_boolean_1) and (outYUV_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter14, srcYUV_empty_n, ap_predicate_op76_read_state2, outYUV_full_n, ap_predicate_op239_write_state15, ap_predicate_op245_write_state15)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op76_read_state2 = ap_const_boolean_1) and (srcYUV_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (((ap_predicate_op245_write_state15 = ap_const_boolean_1) and (outYUV_full_n = ap_const_logic_0)) or ((ap_predicate_op239_write_state15 = ap_const_boolean_1) and (outYUV_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter14, srcYUV_empty_n, ap_predicate_op76_read_state2, outYUV_full_n, ap_predicate_op239_write_state15, ap_predicate_op245_write_state15)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op76_read_state2 = ap_const_boolean_1) and (srcYUV_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (((ap_predicate_op245_write_state15 = ap_const_boolean_1) and (outYUV_full_n = ap_const_logic_0)) or ((ap_predicate_op239_write_state15 = ap_const_boolean_1) and (outYUV_full_n = ap_const_logic_0)))));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_pp0_stage0_iter14_assign_proc : process(outYUV_full_n, ap_predicate_op239_write_state15, ap_predicate_op245_write_state15)
    begin
                ap_block_state15_pp0_stage0_iter14 <= (((ap_predicate_op245_write_state15 = ap_const_boolean_1) and (outYUV_full_n = ap_const_logic_0)) or ((ap_predicate_op239_write_state15 = ap_const_boolean_1) and (outYUV_full_n = ap_const_logic_0)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(srcYUV_empty_n, ap_predicate_op76_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op76_read_state2 = ap_const_boolean_1) and (srcYUV_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1469_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln159_reg_1289_pp0_iter1_reg, icmp_ln168_reg_1298_pp0_iter1_reg)
    begin
                ap_condition_1469 <= ((icmp_ln168_reg_1298_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_1473_assign_proc : process(ap_enable_reg_pp0_iter13, icmp_ln159_reg_1289_pp0_iter12_reg, icmp_ln168_reg_1298_pp0_iter12_reg)
    begin
                ap_condition_1473 <= ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln168_reg_1298_pp0_iter12_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln159_fu_381_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln159_fu_381_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter13_stage0_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0_subdone, icmp_ln159_reg_1289_pp0_iter12_reg)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter13_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter13_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter13_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter13_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op239_write_state15_assign_proc : process(tmp_5_reg_1314_pp0_iter13_reg, cmp425)
    begin
                ap_predicate_op239_write_state15 <= ((tmp_5_reg_1314_pp0_iter13_reg = ap_const_lv1_0) and (cmp425 = ap_const_lv1_0));
    end process;


    ap_predicate_op245_write_state15_assign_proc : process(icmp_ln168_reg_1298_pp0_iter13_reg, cmp425)
    begin
                ap_predicate_op245_write_state15 <= ((icmp_ln168_reg_1298_pp0_iter13_reg = ap_const_lv1_1) and (cmp425 = ap_const_lv1_1));
    end process;


    ap_predicate_op76_read_state2_assign_proc : process(icmp_ln159_reg_1289, icmp_ln168_reg_1298)
    begin
                ap_predicate_op76_read_state2 <= ((icmp_ln168_reg_1298 = ap_const_lv1_1) and (icmp_ln159_reg_1289 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_x_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_fu_174, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_x_1 <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_x_1 <= x_fu_174;
        end if; 
    end process;

    cmp153_fu_409_p2 <= "1" when (ap_sig_allocacmp_x_1 = ap_const_lv11_0) else "0";
    cmp155_fu_415_p2 <= "1" when (ap_sig_allocacmp_x_1 = ap_const_lv11_1) else "0";
    cmp335_fu_508_p2 <= (odd_col_reg_1293_pp0_iter1_reg xor ap_const_lv1_1);
    cmp56_read_read_fu_284_p2 <= cmp56;
    filt_fu_686_p3 <= 
        coefs_0_3_load when (or_ln350_fu_682_p2(0) = '1') else 
        coefs_1_3_load;

    filt_res0_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter13, filt_res0_1_out_i, ap_block_pp0_stage0, icmp_ln159_reg_1289_pp0_iter12_reg, filt_res0_4_fu_968_p3)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            filt_res0_1_out_o <= filt_res0_4_fu_968_p3;
        else 
            filt_res0_1_out_o <= filt_res0_1_out_i;
        end if; 
    end process;


    filt_res0_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter12_reg)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            filt_res0_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            filt_res0_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    filt_res0_3_fu_927_p3 <= 
        select_ln403_fu_915_p3 when (or_ln403_fu_923_p2(0) = '1') else 
        trunc_ln3_fu_892_p4;
    filt_res0_4_fu_968_p3 <= 
        zext_ln133_fu_935_p1 when (or_ln384_reg_1344_pp0_iter12_reg(0) = '1') else 
        filt_res0_1_out_i;

    filt_res1_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter13, filt_res1_1_out_i, ap_block_pp0_stage0, icmp_ln159_reg_1289_pp0_iter12_reg, filt_res1_4_fu_975_p3)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            filt_res1_1_out_o <= filt_res1_4_fu_975_p3;
        else 
            filt_res1_1_out_o <= filt_res1_1_out_i;
        end if; 
    end process;


    filt_res1_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter12_reg)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            filt_res1_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            filt_res1_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    filt_res1_3_fu_956_p3 <= 
        select_ln404_fu_944_p3 when (or_ln404_fu_952_p2(0) = '1') else 
        trunc_ln133_1_fu_901_p4;
    filt_res1_4_fu_975_p3 <= 
        zext_ln133_1_fu_964_p1 when (or_ln384_reg_1344_pp0_iter12_reg(0) = '1') else 
        filt_res1_1_out_i;

    grp_fu_1111_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1111_ce <= ap_const_logic_1;
        else 
            grp_fu_1111_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1111_p0 <= grp_fu_1111_p00(8 - 1 downto 0);
    grp_fu_1111_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln250_6_fu_668_p3),24));
    grp_fu_1111_p1 <= sext_ln1540_fu_692_p1(16 - 1 downto 0);
    grp_fu_1111_p2 <= ap_const_lv24_800(12 - 1 downto 0);

    grp_fu_1119_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1119_ce <= ap_const_logic_1;
        else 
            grp_fu_1119_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1119_p0 <= grp_fu_1119_p00(8 - 1 downto 0);
    grp_fu_1119_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln250_4_fu_654_p3),24));
    grp_fu_1119_p1 <= sext_ln1540_fu_692_p1(16 - 1 downto 0);
    grp_fu_1119_p2 <= ap_const_lv24_800(12 - 1 downto 0);

    grp_fu_1127_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1127_ce <= ap_const_logic_1;
        else 
            grp_fu_1127_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1127_p0 <= grp_fu_1127_p00(8 - 1 downto 0);
    grp_fu_1127_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln250_7_reg_1375_pp0_iter4_reg),24));
    grp_fu_1127_p1 <= sext_ln1540_1_fu_757_p1(16 - 1 downto 0);

    grp_fu_1135_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1135_ce <= ap_const_logic_1;
        else 
            grp_fu_1135_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1135_p0 <= grp_fu_1135_p00(8 - 1 downto 0);
    grp_fu_1135_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln250_5_reg_1370_pp0_iter4_reg),24));
    grp_fu_1135_p1 <= sext_ln1540_1_fu_757_p1(16 - 1 downto 0);

    grp_fu_1143_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1143_ce <= ap_const_logic_1;
        else 
            grp_fu_1143_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1143_p0 <= grp_fu_1143_p00(8 - 1 downto 0);
    grp_fu_1143_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln250_3_reg_1365_pp0_iter6_reg),24));
    grp_fu_1143_p1 <= sext_ln1540_2_fu_772_p1(16 - 1 downto 0);

    grp_fu_1151_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1151_ce <= ap_const_logic_1;
        else 
            grp_fu_1151_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1151_p0 <= grp_fu_1151_p00(8 - 1 downto 0);
    grp_fu_1151_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln250_2_reg_1360_pp0_iter6_reg),24));
    grp_fu_1151_p1 <= sext_ln1540_2_fu_772_p1(16 - 1 downto 0);

    grp_fu_1159_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1159_ce <= ap_const_logic_1;
        else 
            grp_fu_1159_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1159_p0 <= grp_fu_1159_p00(8 - 1 downto 0);
    grp_fu_1159_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln250_1_reg_1355_pp0_iter8_reg),24));
    grp_fu_1159_p1 <= sext_ln1540_3_fu_793_p1(16 - 1 downto 0);

    grp_fu_1168_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1168_ce <= ap_const_logic_1;
        else 
            grp_fu_1168_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1168_p0 <= grp_fu_1168_p00(8 - 1 downto 0);
    grp_fu_1168_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln250_reg_1350_pp0_iter8_reg),24));
    grp_fu_1168_p1 <= sext_ln1540_3_fu_793_p1(16 - 1 downto 0);
    icmp_ln159_fu_381_p2 <= "1" when (ap_sig_allocacmp_x_1 = loopWidth) else "0";
    icmp_ln168_fu_403_p2 <= "1" when (unsigned(ap_sig_allocacmp_x_1) < unsigned(width_cast2_cast)) else "0";
    icmp_ln403_fu_825_p2 <= "1" when (signed(tmp_1_fu_816_p4) > signed(ap_const_lv6_0)) else "0";
    icmp_ln404_fu_847_p2 <= "1" when (signed(tmp_4_fu_838_p4) > signed(ap_const_lv6_0)) else "0";
    odd_col_fu_399_p1 <= out_x_fu_393_p2(1 - 1 downto 0);
    or_ln228_fu_558_p2 <= (trunc_ln159_reg_1282_pp0_iter2_reg or cmp56);
    or_ln350_fu_682_p2 <= (not_icmp_ln145 or cmp335_reg_1338);
    or_ln384_fu_513_p2 <= (icmp_ln145 or cmp335_fu_508_p2);
    or_ln403_fu_923_p2 <= (tmp_reg_1511 or icmp_ln403_reg_1517);
    or_ln404_fu_952_p2 <= (tmp_3_reg_1522 or icmp_ln404_reg_1528);
    or_ln408_fu_982_p2 <= (cmp394_not or cmp335_reg_1338_pp0_iter12_reg);

    outYUV_blk_n_assign_proc : process(ap_enable_reg_pp0_iter14, outYUV_full_n, ap_predicate_op239_write_state15, ap_predicate_op245_write_state15, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op245_write_state15 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op239_write_state15 = ap_const_boolean_1)))) then 
            outYUV_blk_n <= outYUV_full_n;
        else 
            outYUV_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outYUV_din_assign_proc : process(ap_enable_reg_pp0_iter14, ap_predicate_op239_write_state15, ap_predicate_op245_write_state15, p_0_fu_1050_p4, ap_block_pp0_stage0_01001, p_s_fu_1071_p4)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_predicate_op245_write_state15 = ap_const_boolean_1)) then 
                outYUV_din <= p_s_fu_1071_p4;
            elsif ((ap_predicate_op239_write_state15 = ap_const_boolean_1)) then 
                outYUV_din <= p_0_fu_1050_p4;
            else 
                outYUV_din <= "XXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            outYUV_din <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    outYUV_write_assign_proc : process(ap_enable_reg_pp0_iter14, ap_predicate_op239_write_state15, ap_predicate_op245_write_state15, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op245_write_state15 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op239_write_state15 = ap_const_boolean_1)))) then 
            outYUV_write <= ap_const_logic_1;
        else 
            outYUV_write <= ap_const_logic_0;
        end if; 
    end process;

    out_x_fu_393_p2 <= std_logic_vector(unsigned(zext_ln159_fu_373_p1) - unsigned(select_ln156_cast_fu_333_p1));

    p_0_0_0_0_0185445447_out_o_assign_proc : process(ap_enable_reg_pp0_iter3, p_0_0_0_0_0185445447_out_i, ap_block_pp0_stage0, icmp_ln159_reg_1289_pp0_iter2_reg, select_ln250_6_fu_668_p3)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_0_0_0_0_0185445447_out_o <= select_ln250_6_fu_668_p3;
        else 
            p_0_0_0_0_0185445447_out_o <= p_0_0_0_0_0185445447_out_i;
        end if; 
    end process;


    p_0_0_0_0_0185445447_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter2_reg)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_0_0_0_0_0185445447_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0185445447_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_0185445_out_o_assign_proc : process(ap_enable_reg_pp0_iter3, p_0_0_0_0_0185445_out_i, ap_block_pp0_stage0, icmp_ln159_reg_1289_pp0_iter2_reg, select_ln250_7_fu_675_p3)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_0_0_0_0_0185445_out_o <= select_ln250_7_fu_675_p3;
        else 
            p_0_0_0_0_0185445_out_o <= p_0_0_0_0_0185445_out_i;
        end if; 
    end process;


    p_0_0_0_0_0185445_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter2_reg)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_0_0_0_0_0185445_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0185445_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_0185_1457_out_o_assign_proc : process(ap_enable_reg_pp0_iter3, p_0_0_0_0_0185_1457_out_i, ap_block_pp0_stage0, icmp_ln159_reg_1289_pp0_iter2_reg, select_ln250_3_fu_647_p3)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_0_0_0_0_0185_1457_out_o <= select_ln250_3_fu_647_p3;
        else 
            p_0_0_0_0_0185_1457_out_o <= p_0_0_0_0_0185_1457_out_i;
        end if; 
    end process;


    p_0_0_0_0_0185_1457_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter2_reg)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_0_0_0_0_0185_1457_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0185_1457_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_0185_2463_out_o_assign_proc : process(ap_enable_reg_pp0_iter3, p_0_0_0_0_0185_2463_out_i, ap_block_pp0_stage0, icmp_ln159_reg_1289_pp0_iter2_reg, select_ln250_1_fu_633_p3)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_0_0_0_0_0185_2463_out_o <= select_ln250_1_fu_633_p3;
        else 
            p_0_0_0_0_0185_2463_out_o <= p_0_0_0_0_0185_2463_out_i;
        end if; 
    end process;


    p_0_0_0_0_0185_2463_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter2_reg)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_0_0_0_0_0185_2463_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0185_2463_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_0193427_out_o_assign_proc : process(ap_enable_reg_pp0_iter13, p_0_0_0_0_0193427_out_i, ap_block_pp0_stage0, icmp_ln159_reg_1289_pp0_iter12_reg, icmp_ln168_reg_1298_pp0_iter12_reg, trunc_ln145_reg_1318_pp0_iter12_reg)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln168_reg_1298_pp0_iter12_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_0_0_0_0_0193427_out_o <= trunc_ln145_reg_1318_pp0_iter12_reg;
        else 
            p_0_0_0_0_0193427_out_o <= p_0_0_0_0_0193427_out_i;
        end if; 
    end process;


    p_0_0_0_0_0193427_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter12_reg, icmp_ln168_reg_1298_pp0_iter12_reg)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln168_reg_1298_pp0_iter12_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_0_0_0_0_0193427_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0193427_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_0451453_out_o_assign_proc : process(ap_enable_reg_pp0_iter3, p_0_0_0_0_0451453_out_i, ap_block_pp0_stage0, icmp_ln159_reg_1289_pp0_iter2_reg, select_ln250_4_fu_654_p3)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_0_0_0_0_0451453_out_o <= select_ln250_4_fu_654_p3;
        else 
            p_0_0_0_0_0451453_out_o <= p_0_0_0_0_0451453_out_i;
        end if; 
    end process;


    p_0_0_0_0_0451453_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter2_reg)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_0_0_0_0_0451453_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0451453_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_0451_out_o_assign_proc : process(ap_enable_reg_pp0_iter3, p_0_0_0_0_0451_out_i, ap_block_pp0_stage0, icmp_ln159_reg_1289_pp0_iter2_reg, select_ln250_5_fu_661_p3)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_0_0_0_0_0451_out_o <= select_ln250_5_fu_661_p3;
        else 
            p_0_0_0_0_0451_out_o <= p_0_0_0_0_0451_out_i;
        end if; 
    end process;


    p_0_0_0_0_0451_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter2_reg)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_0_0_0_0_0451_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0451_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_0_1460_out_o_assign_proc : process(ap_enable_reg_pp0_iter3, p_0_0_0_0_0_1460_out_i, ap_block_pp0_stage0, icmp_ln159_reg_1289_pp0_iter2_reg, select_ln250_2_fu_640_p3)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_0_0_0_0_0_1460_out_o <= select_ln250_2_fu_640_p3;
        else 
            p_0_0_0_0_0_1460_out_o <= p_0_0_0_0_0_1460_out_i;
        end if; 
    end process;


    p_0_0_0_0_0_1460_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter2_reg)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_0_0_0_0_0_1460_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0_1460_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_0_2467_out_o_assign_proc : process(ap_enable_reg_pp0_iter3, p_0_0_0_0_0_2467_out_i, ap_block_pp0_stage0, icmp_ln159_reg_1289_pp0_iter2_reg, select_ln250_fu_626_p3)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_0_0_0_0_0_2467_out_o <= select_ln250_fu_626_p3;
        else 
            p_0_0_0_0_0_2467_out_o <= p_0_0_0_0_0_2467_out_i;
        end if; 
    end process;


    p_0_0_0_0_0_2467_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter2_reg)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_0_0_0_0_0_2467_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0_2467_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_0429_out_o_assign_proc : process(ap_enable_reg_pp0_iter13, p_0_1_0_0_0429_out_i, ap_block_pp0_stage0, icmp_ln159_reg_1289_pp0_iter12_reg, icmp_ln168_reg_1298_pp0_iter12_reg, trunc_ln145_1_reg_1324_pp0_iter12_reg)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln168_reg_1298_pp0_iter12_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_0_1_0_0_0429_out_o <= trunc_ln145_1_reg_1324_pp0_iter12_reg;
        else 
            p_0_1_0_0_0429_out_o <= p_0_1_0_0_0429_out_i;
        end if; 
    end process;


    p_0_1_0_0_0429_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter12_reg, icmp_ln168_reg_1298_pp0_iter12_reg)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln168_reg_1298_pp0_iter12_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_0_1_0_0_0429_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_0429_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_0436_out_o_assign_proc : process(p_0_1_0_0_0436_out_i, cmp56_read_read_fu_284_p2, trunc_ln145_1_reg_1324, select_ln182_1_fu_480_p3, ap_condition_1469)
    begin
        if ((ap_const_boolean_1 = ap_condition_1469)) then
            if ((cmp56_read_read_fu_284_p2 = ap_const_lv1_1)) then 
                p_0_1_0_0_0436_out_o <= trunc_ln145_1_reg_1324;
            elsif ((cmp56_read_read_fu_284_p2 = ap_const_lv1_0)) then 
                p_0_1_0_0_0436_out_o <= select_ln182_1_fu_480_p3;
            else 
                p_0_1_0_0_0436_out_o <= p_0_1_0_0_0436_out_i;
            end if;
        else 
            p_0_1_0_0_0436_out_o <= p_0_1_0_0_0436_out_i;
        end if; 
    end process;


    p_0_1_0_0_0436_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, cmp56_read_read_fu_284_p2, icmp_ln159_reg_1289_pp0_iter1_reg, icmp_ln168_reg_1298_pp0_iter1_reg)
    begin
        if ((((icmp_ln168_reg_1298_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter1_reg = ap_const_lv1_0) and (cmp56_read_read_fu_284_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln168_reg_1298_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter1_reg = ap_const_lv1_0) and (cmp56_read_read_fu_284_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_0_1_0_0_0436_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_0436_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_0440_out_o_assign_proc : process(p_0_1_0_0_0440_out_i, cmp56_read_read_fu_284_p2, trunc_ln145_2_reg_1332, select_ln182_fu_474_p3, ap_condition_1469)
    begin
        if ((ap_const_boolean_1 = ap_condition_1469)) then
            if ((cmp56_read_read_fu_284_p2 = ap_const_lv1_1)) then 
                p_0_1_0_0_0440_out_o <= trunc_ln145_2_reg_1332;
            elsif ((cmp56_read_read_fu_284_p2 = ap_const_lv1_0)) then 
                p_0_1_0_0_0440_out_o <= select_ln182_fu_474_p3;
            else 
                p_0_1_0_0_0440_out_o <= p_0_1_0_0_0440_out_i;
            end if;
        else 
            p_0_1_0_0_0440_out_o <= p_0_1_0_0_0440_out_i;
        end if; 
    end process;


    p_0_1_0_0_0440_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, cmp56_read_read_fu_284_p2, icmp_ln159_reg_1289_pp0_iter1_reg, icmp_ln168_reg_1298_pp0_iter1_reg)
    begin
        if ((((icmp_ln168_reg_1298_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter1_reg = ap_const_lv1_0) and (cmp56_read_read_fu_284_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln168_reg_1298_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter1_reg = ap_const_lv1_0) and (cmp56_read_read_fu_284_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_0_1_0_0_0440_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_0440_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_2_0_0_0431_out_o_assign_proc : process(ap_enable_reg_pp0_iter13, p_0_2_0_0_0431_out_i, ap_block_pp0_stage0, icmp_ln159_reg_1289_pp0_iter12_reg, icmp_ln168_reg_1298_pp0_iter12_reg, trunc_ln145_2_reg_1332_pp0_iter12_reg)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln168_reg_1298_pp0_iter12_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_0_2_0_0_0431_out_o <= trunc_ln145_2_reg_1332_pp0_iter12_reg;
        else 
            p_0_2_0_0_0431_out_o <= p_0_2_0_0_0431_out_i;
        end if; 
    end process;


    p_0_2_0_0_0431_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter12_reg, icmp_ln168_reg_1298_pp0_iter12_reg)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (icmp_ln168_reg_1298_pp0_iter12_reg = ap_const_lv1_1) and (icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_0_2_0_0_0431_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_2_0_0_0431_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_fu_1050_p4 <= ((select_ln262_reg_1554 & select_ln408_reg_1549) & tmp_2_fu_1040_p6);
    p_s_fu_1071_p4 <= ((p_0_2_0_0_0431_out_i & p_0_1_0_0_0429_out_i) & p_0_0_0_0_0193427_out_i);
    pixbuf_y_val_V_5_out <= pixbuf_y_val_V_1_fu_178;

    pixbuf_y_val_V_5_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter12_reg)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pixbuf_y_val_V_5_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    pixbuf_y_val_V_6_out_o_assign_proc : process(ap_enable_reg_pp0_iter14, pixbuf_y_val_V_6_out_i, ap_block_pp0_stage0, pixbuf_y_val_V_9_reg_1533)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pixbuf_y_val_V_6_out_o <= pixbuf_y_val_V_9_reg_1533;
        else 
            pixbuf_y_val_V_6_out_o <= pixbuf_y_val_V_6_out_i;
        end if; 
    end process;


    pixbuf_y_val_V_6_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pixbuf_y_val_V_6_out_o_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_6_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_val_V_7_out <= pixbuf_y_val_V_5_fu_182;

    pixbuf_y_val_V_7_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter12_reg)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pixbuf_y_val_V_7_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_val_V_8_out <= pixbuf_y_val_V_6_fu_186;

    pixbuf_y_val_V_8_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter12_reg)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pixbuf_y_val_V_8_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_val_V_9_out <= pixbuf_y_val_V_7_fu_190;

    pixbuf_y_val_V_9_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln159_reg_1289_pp0_iter12_reg)
    begin
        if (((icmp_ln159_reg_1289_pp0_iter12_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pixbuf_y_val_V_9_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln156_cast_fu_333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln156),12));
    select_ln182_1_fu_480_p3 <= 
        p_0_1_0_0_0436_out_i when (trunc_ln159_reg_1282_pp0_iter1_reg(0) = '1') else 
        trunc_ln145_1_reg_1324;
    select_ln182_fu_474_p3 <= 
        trunc_ln145_1_reg_1324 when (trunc_ln159_reg_1282_pp0_iter1_reg(0) = '1') else 
        p_0_1_0_0_0440_out_i;
    select_ln220_fu_421_p3 <= 
        cmp153_fu_409_p2 when (cmp56(0) = '1') else 
        cmp155_fu_415_p2;
    select_ln228_1_fu_570_p3 <= 
        p_0_1_0_0_0436_out_i when (or_ln228_fu_558_p2(0) = '1') else 
        p_0_0_0_0_0185_2463_out_i;
    select_ln228_2_fu_578_p3 <= 
        p_0_0_0_0_0_2467_out_i when (or_ln228_fu_558_p2(0) = '1') else 
        p_0_0_0_0_0_1460_out_i;
    select_ln228_3_fu_586_p3 <= 
        p_0_0_0_0_0185_2463_out_i when (or_ln228_fu_558_p2(0) = '1') else 
        p_0_0_0_0_0185_1457_out_i;
    select_ln228_4_fu_594_p3 <= 
        p_0_0_0_0_0451_out_i when (or_ln228_fu_558_p2(0) = '1') else 
        p_0_0_0_0_0451453_out_i;
    select_ln228_5_fu_602_p3 <= 
        p_0_0_0_0_0_1460_out_i when (or_ln228_fu_558_p2(0) = '1') else 
        p_0_0_0_0_0451_out_i;
    select_ln228_6_fu_610_p3 <= 
        p_0_0_0_0_0185445_out_i when (or_ln228_fu_558_p2(0) = '1') else 
        p_0_0_0_0_0185445447_out_i;
    select_ln228_7_fu_618_p3 <= 
        p_0_0_0_0_0185_1457_out_i when (or_ln228_fu_558_p2(0) = '1') else 
        p_0_0_0_0_0185445_out_i;
    select_ln228_fu_562_p3 <= 
        p_0_1_0_0_0440_out_i when (or_ln228_fu_558_p2(0) = '1') else 
        p_0_0_0_0_0_2467_out_i;
    select_ln250_1_fu_633_p3 <= 
        p_0_1_0_0_0436_out_i when (select_ln220_reg_1302_pp0_iter2_reg(0) = '1') else 
        select_ln228_1_fu_570_p3;
    select_ln250_2_fu_640_p3 <= 
        p_0_1_0_0_0440_out_i when (select_ln220_reg_1302_pp0_iter2_reg(0) = '1') else 
        select_ln228_2_fu_578_p3;
    select_ln250_3_fu_647_p3 <= 
        p_0_1_0_0_0436_out_i when (select_ln220_reg_1302_pp0_iter2_reg(0) = '1') else 
        select_ln228_3_fu_586_p3;
    select_ln250_4_fu_654_p3 <= 
        p_0_1_0_0_0440_out_i when (select_ln220_reg_1302_pp0_iter2_reg(0) = '1') else 
        select_ln228_4_fu_594_p3;
    select_ln250_5_fu_661_p3 <= 
        p_0_1_0_0_0440_out_i when (select_ln220_reg_1302_pp0_iter2_reg(0) = '1') else 
        select_ln228_5_fu_602_p3;
    select_ln250_6_fu_668_p3 <= 
        p_0_1_0_0_0436_out_i when (select_ln220_reg_1302_pp0_iter2_reg(0) = '1') else 
        select_ln228_6_fu_610_p3;
    select_ln250_7_fu_675_p3 <= 
        p_0_1_0_0_0436_out_i when (select_ln220_reg_1302_pp0_iter2_reg(0) = '1') else 
        select_ln228_7_fu_618_p3;
    select_ln250_fu_626_p3 <= 
        p_0_1_0_0_0440_out_i when (select_ln220_reg_1302_pp0_iter2_reg(0) = '1') else 
        select_ln228_fu_562_p3;
    select_ln262_fu_1002_p3 <= 
        ap_const_lv8_0 when (cmp56(0) = '1') else 
        trunc_ln408_1_fu_990_p1;
    select_ln350_1_fu_788_p3 <= 
        coefs_0_0_load when (or_ln350_reg_1380_pp0_iter8_reg(0) = '1') else 
        coefs_1_0_load;
    select_ln350_2_fu_767_p3 <= 
        coefs_0_1_load when (or_ln350_reg_1380_pp0_iter6_reg(0) = '1') else 
        coefs_1_1_load;
    select_ln350_fu_752_p3 <= 
        coefs_0_2_load when (or_ln350_reg_1380_pp0_iter4_reg(0) = '1') else 
        coefs_1_2_load;
    select_ln403_fu_915_p3 <= 
        ap_const_lv8_FF when (xor_ln403_fu_910_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln404_fu_944_p3 <= 
        ap_const_lv8_FF when (xor_ln404_fu_939_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln408_fu_994_p3 <= 
        trunc_ln408_fu_986_p1 when (or_ln408_fu_982_p2(0) = '1') else 
        trunc_ln408_1_fu_990_p1;
        sext_ln1540_1_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln350_fu_752_p3),24));

        sext_ln1540_2_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln350_2_fu_767_p3),24));

        sext_ln1540_3_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln350_1_fu_788_p3),24));

        sext_ln1540_fu_692_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(filt_fu_686_p3),24));


    srcYUV_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, srcYUV_empty_n, ap_predicate_op76_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op76_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            srcYUV_blk_n <= srcYUV_empty_n;
        else 
            srcYUV_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    srcYUV_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op76_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op76_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcYUV_read <= ap_const_logic_1;
        else 
            srcYUV_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_816_p4 <= grp_fu_1159_p3(25 downto 20);
    tmp_2_fu_1040_p5 <= 
        ap_const_lv32_3 when (conv285_cast_cast_cast_cast(0) = '1') else 
        ap_const_lv32_0;
    tmp_4_fu_838_p4 <= grp_fu_1168_p3(25 downto 20);
    trunc_ln133_1_fu_901_p4 <= filt_res1_reg_1506(19 downto 12);
    trunc_ln145_fu_442_p1 <= srcYUV_dout(8 - 1 downto 0);
    trunc_ln159_fu_377_p1 <= ap_sig_allocacmp_x_1(1 - 1 downto 0);
    trunc_ln3_fu_892_p4 <= filt_res0_reg_1501(19 downto 12);
    trunc_ln408_1_fu_990_p1 <= filt_res1_4_fu_975_p3(8 - 1 downto 0);
    trunc_ln408_fu_986_p1 <= filt_res0_4_fu_968_p3(8 - 1 downto 0);
    x_2_fu_387_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x_1) + unsigned(ap_const_lv11_1));
    xor_ln403_fu_910_p2 <= (tmp_reg_1511 xor ap_const_lv1_1);
    xor_ln404_fu_939_p2 <= (tmp_3_reg_1522 xor ap_const_lv1_1);
    zext_ln133_1_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(filt_res1_3_fu_956_p3),64));
    zext_ln133_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(filt_res0_3_fu_927_p3),64));
    zext_ln159_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_x_1),12));
end behav;
