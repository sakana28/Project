// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_3a92_csc_0_v_csc_core_Pipeline_VITIS_LOOP_91_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_in_hresampled_dout,
        stream_in_hresampled_num_data_valid,
        stream_in_hresampled_fifo_cap,
        stream_in_hresampled_empty_n,
        stream_in_hresampled_read,
        stream_csc_din,
        stream_csc_num_data_valid,
        stream_csc_fifo_cap,
        stream_csc_full_n,
        stream_csc_write,
        add_ln89,
        p_read,
        p_read1,
        cmp20_not,
        cmp17_not,
        p_read4,
        p_read18,
        p_read5,
        p_read19,
        p_read6,
        p_read20,
        p_read7,
        p_read21,
        p_read8,
        p_read22,
        p_read9,
        p_read23,
        p_read10,
        p_read24,
        p_read11,
        p_read25,
        p_read12,
        p_read26,
        p_read17,
        p_read31,
        p_read16,
        p_read30,
        p_read15,
        p_read29,
        p_read14,
        p_read28,
        p_read13,
        p_read27
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] stream_in_hresampled_dout;
input  [4:0] stream_in_hresampled_num_data_valid;
input  [4:0] stream_in_hresampled_fifo_cap;
input   stream_in_hresampled_empty_n;
output   stream_in_hresampled_read;
output  [23:0] stream_csc_din;
input  [4:0] stream_csc_num_data_valid;
input  [4:0] stream_csc_fifo_cap;
input   stream_csc_full_n;
output   stream_csc_write;
input  [11:0] add_ln89;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [0:0] cmp20_not;
input  [0:0] cmp17_not;
input  [15:0] p_read4;
input  [15:0] p_read18;
input  [15:0] p_read5;
input  [15:0] p_read19;
input  [15:0] p_read6;
input  [15:0] p_read20;
input  [15:0] p_read7;
input  [15:0] p_read21;
input  [15:0] p_read8;
input  [15:0] p_read22;
input  [15:0] p_read9;
input  [15:0] p_read23;
input  [15:0] p_read10;
input  [15:0] p_read24;
input  [15:0] p_read11;
input  [15:0] p_read25;
input  [15:0] p_read12;
input  [15:0] p_read26;
input  [7:0] p_read17;
input  [7:0] p_read31;
input  [7:0] p_read16;
input  [7:0] p_read30;
input  [9:0] p_read15;
input  [9:0] p_read29;
input  [9:0] p_read14;
input  [9:0] p_read28;
input  [9:0] p_read13;
input  [9:0] p_read27;

reg ap_idle;
reg stream_in_hresampled_read;
reg stream_csc_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
reg    ap_block_state10_pp0_stage0_iter9;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln91_fu_367_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    stream_in_hresampled_blk_n;
wire    ap_block_pp0_stage0;
reg    stream_csc_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] or_ln105_1_fu_427_p2;
reg   [0:0] or_ln105_1_reg_1111;
wire   [7:0] Rpix_fu_444_p1;
reg   [7:0] Rpix_reg_1116;
reg   [7:0] Gpix_reg_1121;
reg   [7:0] Bpix_reg_1126;
reg   [7:0] Bpix_reg_1126_pp0_iter2_reg;
wire   [0:0] or_ln105_2_fu_468_p2;
reg   [0:0] or_ln105_2_reg_1131;
reg   [0:0] or_ln105_2_reg_1131_pp0_iter2_reg;
reg   [0:0] or_ln105_2_reg_1131_pp0_iter3_reg;
reg   [0:0] or_ln105_2_reg_1131_pp0_iter4_reg;
reg   [0:0] or_ln105_2_reg_1131_pp0_iter5_reg;
reg   [0:0] or_ln105_2_reg_1131_pp0_iter6_reg;
wire   [23:0] zext_ln61_fu_526_p1;
wire   [23:0] zext_ln61_1_fu_529_p1;
wire   [23:0] zext_ln145_fu_532_p1;
wire  signed [23:0] grp_fu_894_p2;
reg  signed [23:0] mul_ln147_1_reg_1230;
wire  signed [23:0] grp_fu_886_p3;
reg  signed [23:0] add_ln147_reg_1236;
wire  signed [23:0] grp_fu_908_p2;
reg  signed [23:0] mul_ln149_1_reg_1242;
wire  signed [23:0] grp_fu_900_p3;
reg  signed [23:0] add_ln149_reg_1248;
wire  signed [23:0] grp_fu_922_p2;
reg  signed [23:0] mul_ln151_1_reg_1254;
wire  signed [23:0] grp_fu_914_p3;
reg  signed [23:0] add_ln151_reg_1260;
wire   [24:0] add_ln147_1_fu_623_p2;
reg   [24:0] add_ln147_1_reg_1266;
wire   [19:0] trunc_ln147_fu_629_p1;
reg   [19:0] trunc_ln147_reg_1271;
reg   [19:0] trunc_ln147_reg_1271_pp0_iter7_reg;
wire  signed [24:0] grp_fu_928_p3;
reg  signed [24:0] add_ln147_2_reg_1276;
wire   [19:0] trunc_ln147_1_fu_633_p1;
reg   [19:0] trunc_ln147_1_reg_1281;
reg   [19:0] trunc_ln147_1_reg_1281_pp0_iter7_reg;
wire   [24:0] add_ln149_1_fu_646_p2;
reg   [24:0] add_ln149_1_reg_1286;
wire   [19:0] trunc_ln149_fu_652_p1;
reg   [19:0] trunc_ln149_reg_1291;
reg   [19:0] trunc_ln149_reg_1291_pp0_iter7_reg;
wire  signed [24:0] grp_fu_937_p3;
reg  signed [24:0] add_ln149_2_reg_1296;
wire   [19:0] trunc_ln149_1_fu_656_p1;
reg   [19:0] trunc_ln149_1_reg_1301;
reg   [19:0] trunc_ln149_1_reg_1301_pp0_iter7_reg;
wire   [24:0] add_ln151_1_fu_669_p2;
reg   [24:0] add_ln151_1_reg_1306;
wire   [19:0] trunc_ln151_fu_675_p1;
reg   [19:0] trunc_ln151_reg_1311;
reg   [19:0] trunc_ln151_reg_1311_pp0_iter7_reg;
wire  signed [24:0] grp_fu_946_p3;
reg  signed [24:0] add_ln151_2_reg_1316;
wire   [19:0] trunc_ln151_1_fu_679_p1;
reg   [19:0] trunc_ln151_1_reg_1321;
reg   [19:0] trunc_ln151_1_reg_1321_pp0_iter7_reg;
wire   [7:0] max_val_fu_682_p3;
reg   [7:0] max_val_reg_1326;
wire   [7:0] min_val_fu_687_p3;
reg   [7:0] min_val_reg_1334;
reg   [13:0] Rres_reg_1342;
reg   [13:0] Gres_reg_1348;
reg   [13:0] Bres_reg_1354;
wire   [7:0] select_ln153_1_fu_803_p3;
reg   [7:0] select_ln153_1_reg_1360;
wire   [7:0] select_ln155_1_fu_857_p3;
reg   [7:0] select_ln155_1_reg_1365;
wire   [7:0] select_ln154_1_fu_871_p3;
reg   [7:0] select_ln154_1_reg_1370;
reg   [11:0] x_fu_140;
wire   [11:0] x_6_fu_433_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_x_5;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln91_fu_363_p1;
wire   [0:0] icmp_ln103_fu_373_p2;
wire   [0:0] icmp_ln103_1_fu_379_p2;
wire   [0:0] icmp_ln104_1_fu_397_p2;
wire   [0:0] icmp_ln104_fu_391_p2;
wire   [0:0] and_ln104_fu_403_p2;
wire   [0:0] or_ln105_fu_409_p2;
wire   [0:0] or_ln103_fu_385_p2;
wire   [0:0] xor_ln105_fu_415_p2;
wire   [0:0] and_ln105_fu_421_p2;
wire  signed [15:0] coef32_fu_497_p3;
wire  signed [15:0] coef31_fu_492_p3;
wire  signed [15:0] coef22_fu_487_p3;
wire  signed [15:0] coef21_fu_482_p3;
wire  signed [15:0] coef12_fu_477_p3;
wire  signed [15:0] coef11_fu_472_p3;
wire  signed [15:0] coef33_fu_545_p3;
wire  signed [15:0] coef23_fu_540_p3;
wire  signed [15:0] coef13_fu_535_p3;
wire   [9:0] select_ln105_11_fu_562_p3;
wire  signed [21:0] offsetB_fu_567_p3;
wire   [9:0] select_ln105_12_fu_579_p3;
wire  signed [21:0] offsetG_fu_584_p3;
wire   [9:0] select_ln105_13_fu_596_p3;
wire  signed [21:0] offsetR_fu_601_p3;
wire  signed [24:0] sext_ln147_2_fu_616_p1;
wire  signed [24:0] sext_ln147_fu_613_p1;
(* use_dsp48 = "no" *) wire   [23:0] add_ln147_5_fu_619_p2;
wire  signed [24:0] sext_ln149_2_fu_639_p1;
wire  signed [24:0] sext_ln149_fu_636_p1;
(* use_dsp48 = "no" *) wire   [23:0] add_ln149_5_fu_642_p2;
wire  signed [24:0] sext_ln151_2_fu_662_p1;
wire  signed [24:0] sext_ln151_fu_659_p1;
(* use_dsp48 = "no" *) wire   [23:0] add_ln151_5_fu_665_p2;
wire  signed [25:0] sext_ln147_4_fu_695_p1;
wire  signed [25:0] sext_ln147_3_fu_692_p1;
wire   [25:0] add_ln147_3_fu_698_p2;
wire  signed [25:0] sext_ln149_4_fu_717_p1;
wire  signed [25:0] sext_ln149_3_fu_714_p1;
wire   [25:0] add_ln149_3_fu_720_p2;
wire  signed [25:0] sext_ln151_4_fu_739_p1;
wire  signed [25:0] sext_ln151_3_fu_736_p1;
wire   [25:0] add_ln151_3_fu_742_p2;
wire   [13:0] zext_ln65_fu_758_p1;
wire   [13:0] zext_ln65_1_fu_761_p1;
wire   [19:0] add_ln147_4_fu_764_p2;
wire   [0:0] icmp_ln153_1_fu_781_p2;
wire   [7:0] trunc_ln_fu_786_p4;
wire   [0:0] icmp_ln153_fu_776_p2;
wire   [7:0] select_ln153_fu_796_p3;
wire   [19:0] add_ln149_4_fu_768_p2;
wire   [19:0] add_ln151_4_fu_772_p2;
wire   [0:0] icmp_ln155_1_fu_835_p2;
wire   [7:0] trunc_ln4_fu_840_p4;
wire   [0:0] icmp_ln155_fu_830_p2;
wire   [7:0] select_ln155_fu_850_p3;
wire   [0:0] icmp_ln154_1_fu_815_p2;
wire   [7:0] trunc_ln3_fu_820_p4;
wire   [0:0] icmp_ln154_fu_810_p2;
wire   [7:0] select_ln154_fu_864_p3;
wire   [7:0] grp_fu_886_p1;
wire   [11:0] grp_fu_886_p2;
wire   [7:0] grp_fu_894_p1;
wire   [7:0] grp_fu_900_p1;
wire   [11:0] grp_fu_900_p2;
wire   [7:0] grp_fu_908_p1;
wire   [7:0] grp_fu_914_p1;
wire   [11:0] grp_fu_914_p2;
wire   [7:0] grp_fu_922_p1;
wire   [7:0] grp_fu_928_p0;
wire   [7:0] grp_fu_937_p0;
wire   [7:0] grp_fu_946_p0;
reg    grp_fu_886_ce;
reg    grp_fu_894_ce;
reg    grp_fu_900_ce;
reg    grp_fu_908_ce;
reg    grp_fu_914_ce;
reg    grp_fu_922_ce;
reg    grp_fu_928_ce;
reg    grp_fu_937_ce;
reg    grp_fu_946_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_done_reg = 1'b0;
end

bd_3a92_csc_0_mac_muladd_16s_8ns_12ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_8ns_12ns_24_4_1_U126(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(coef11_fu_472_p3),
    .din1(grp_fu_886_p1),
    .din2(grp_fu_886_p2),
    .ce(grp_fu_886_ce),
    .dout(grp_fu_886_p3)
);

bd_3a92_csc_0_mul_mul_16s_8ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8ns_24_4_1_U127(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(coef12_fu_477_p3),
    .din1(grp_fu_894_p1),
    .ce(grp_fu_894_ce),
    .dout(grp_fu_894_p2)
);

bd_3a92_csc_0_mac_muladd_16s_8ns_12ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_8ns_12ns_24_4_1_U128(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(coef21_fu_482_p3),
    .din1(grp_fu_900_p1),
    .din2(grp_fu_900_p2),
    .ce(grp_fu_900_ce),
    .dout(grp_fu_900_p3)
);

bd_3a92_csc_0_mul_mul_16s_8ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8ns_24_4_1_U129(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(coef22_fu_487_p3),
    .din1(grp_fu_908_p1),
    .ce(grp_fu_908_ce),
    .dout(grp_fu_908_p2)
);

bd_3a92_csc_0_mac_muladd_16s_8ns_12ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_8ns_12ns_24_4_1_U130(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(coef31_fu_492_p3),
    .din1(grp_fu_914_p1),
    .din2(grp_fu_914_p2),
    .ce(grp_fu_914_ce),
    .dout(grp_fu_914_p3)
);

bd_3a92_csc_0_mul_mul_16s_8ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8ns_24_4_1_U131(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(coef32_fu_497_p3),
    .din1(grp_fu_922_p1),
    .ce(grp_fu_922_ce),
    .dout(grp_fu_922_p2)
);

bd_3a92_csc_0_mac_muladd_8ns_16s_22s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 25 ))
mac_muladd_8ns_16s_22s_25_4_1_U132(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_928_p0),
    .din1(coef13_fu_535_p3),
    .din2(offsetR_fu_601_p3),
    .ce(grp_fu_928_ce),
    .dout(grp_fu_928_p3)
);

bd_3a92_csc_0_mac_muladd_8ns_16s_22s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 25 ))
mac_muladd_8ns_16s_22s_25_4_1_U133(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_937_p0),
    .din1(coef23_fu_540_p3),
    .din2(offsetG_fu_584_p3),
    .ce(grp_fu_937_ce),
    .dout(grp_fu_937_p3)
);

bd_3a92_csc_0_mac_muladd_8ns_16s_22s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 25 ))
mac_muladd_8ns_16s_22s_25_4_1_U134(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_946_p0),
    .din1(coef33_fu_545_p3),
    .din2(offsetB_fu_567_p3),
    .ce(grp_fu_946_ce),
    .dout(grp_fu_946_p3)
);

bd_3a92_csc_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln91_fu_367_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_140 <= x_6_fu_433_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_140 <= 12'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Bpix_reg_1126 <= {{stream_in_hresampled_dout[23:16]}};
        Gpix_reg_1121 <= {{stream_in_hresampled_dout[15:8]}};
        Rpix_reg_1116 <= Rpix_fu_444_p1;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        or_ln105_2_reg_1131 <= or_ln105_2_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        Bpix_reg_1126_pp0_iter2_reg <= Bpix_reg_1126;
        Bres_reg_1354 <= {{add_ln151_3_fu_742_p2[25:12]}};
        Gres_reg_1348 <= {{add_ln149_3_fu_720_p2[25:12]}};
        Rres_reg_1342 <= {{add_ln147_3_fu_698_p2[25:12]}};
        add_ln147_1_reg_1266 <= add_ln147_1_fu_623_p2;
        add_ln149_1_reg_1286 <= add_ln149_1_fu_646_p2;
        add_ln151_1_reg_1306 <= add_ln151_1_fu_669_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        max_val_reg_1326 <= max_val_fu_682_p3;
        min_val_reg_1334 <= min_val_fu_687_p3;
        mul_ln147_1_reg_1230 <= grp_fu_894_p2;
        mul_ln149_1_reg_1242 <= grp_fu_908_p2;
        mul_ln151_1_reg_1254 <= grp_fu_922_p2;
        or_ln105_2_reg_1131_pp0_iter2_reg <= or_ln105_2_reg_1131;
        or_ln105_2_reg_1131_pp0_iter3_reg <= or_ln105_2_reg_1131_pp0_iter2_reg;
        or_ln105_2_reg_1131_pp0_iter4_reg <= or_ln105_2_reg_1131_pp0_iter3_reg;
        or_ln105_2_reg_1131_pp0_iter5_reg <= or_ln105_2_reg_1131_pp0_iter4_reg;
        or_ln105_2_reg_1131_pp0_iter6_reg <= or_ln105_2_reg_1131_pp0_iter5_reg;
        select_ln153_1_reg_1360 <= select_ln153_1_fu_803_p3;
        select_ln154_1_reg_1370 <= select_ln154_1_fu_871_p3;
        select_ln155_1_reg_1365 <= select_ln155_1_fu_857_p3;
        trunc_ln147_1_reg_1281 <= trunc_ln147_1_fu_633_p1;
        trunc_ln147_1_reg_1281_pp0_iter7_reg <= trunc_ln147_1_reg_1281;
        trunc_ln147_reg_1271 <= trunc_ln147_fu_629_p1;
        trunc_ln147_reg_1271_pp0_iter7_reg <= trunc_ln147_reg_1271;
        trunc_ln149_1_reg_1301 <= trunc_ln149_1_fu_656_p1;
        trunc_ln149_1_reg_1301_pp0_iter7_reg <= trunc_ln149_1_reg_1301;
        trunc_ln149_reg_1291 <= trunc_ln149_fu_652_p1;
        trunc_ln149_reg_1291_pp0_iter7_reg <= trunc_ln149_reg_1291;
        trunc_ln151_1_reg_1321 <= trunc_ln151_1_fu_679_p1;
        trunc_ln151_1_reg_1321_pp0_iter7_reg <= trunc_ln151_1_reg_1321;
        trunc_ln151_reg_1311 <= trunc_ln151_fu_675_p1;
        trunc_ln151_reg_1311_pp0_iter7_reg <= trunc_ln151_reg_1311;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        add_ln147_2_reg_1276 <= grp_fu_928_p3;
        add_ln149_2_reg_1296 <= grp_fu_937_p3;
        add_ln151_2_reg_1316 <= grp_fu_946_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        add_ln147_reg_1236 <= grp_fu_886_p3;
        add_ln149_reg_1248 <= grp_fu_900_p3;
        add_ln151_reg_1260 <= grp_fu_914_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_fu_367_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln105_1_reg_1111 <= or_ln105_1_fu_427_p2;
    end
end

always @ (*) begin
    if (((icmp_ln91_fu_367_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_5 = 12'd1;
    end else begin
        ap_sig_allocacmp_x_5 = x_fu_140;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_886_ce = 1'b1;
    end else begin
        grp_fu_886_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_894_ce = 1'b1;
    end else begin
        grp_fu_894_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_900_ce = 1'b1;
    end else begin
        grp_fu_900_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_908_ce = 1'b1;
    end else begin
        grp_fu_908_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_914_ce = 1'b1;
    end else begin
        grp_fu_914_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_922_ce = 1'b1;
    end else begin
        grp_fu_922_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_928_ce = 1'b1;
    end else begin
        grp_fu_928_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_937_ce = 1'b1;
    end else begin
        grp_fu_937_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_946_ce = 1'b1;
    end else begin
        grp_fu_946_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        stream_csc_blk_n = stream_csc_full_n;
    end else begin
        stream_csc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        stream_csc_write = 1'b1;
    end else begin
        stream_csc_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_hresampled_blk_n = stream_in_hresampled_empty_n;
    end else begin
        stream_in_hresampled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_hresampled_read = 1'b1;
    end else begin
        stream_in_hresampled_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Rpix_fu_444_p1 = stream_in_hresampled_dout[7:0];

assign add_ln147_1_fu_623_p2 = ($signed(sext_ln147_2_fu_616_p1) + $signed(sext_ln147_fu_613_p1));

assign add_ln147_3_fu_698_p2 = ($signed(sext_ln147_4_fu_695_p1) + $signed(sext_ln147_3_fu_692_p1));

assign add_ln147_4_fu_764_p2 = (trunc_ln147_1_reg_1281_pp0_iter7_reg + trunc_ln147_reg_1271_pp0_iter7_reg);

assign add_ln147_5_fu_619_p2 = ($signed(add_ln147_reg_1236) + $signed(mul_ln147_1_reg_1230));

assign add_ln149_1_fu_646_p2 = ($signed(sext_ln149_2_fu_639_p1) + $signed(sext_ln149_fu_636_p1));

assign add_ln149_3_fu_720_p2 = ($signed(sext_ln149_4_fu_717_p1) + $signed(sext_ln149_3_fu_714_p1));

assign add_ln149_4_fu_768_p2 = (trunc_ln149_1_reg_1301_pp0_iter7_reg + trunc_ln149_reg_1291_pp0_iter7_reg);

assign add_ln149_5_fu_642_p2 = ($signed(add_ln149_reg_1248) + $signed(mul_ln149_1_reg_1242));

assign add_ln151_1_fu_669_p2 = ($signed(sext_ln151_2_fu_662_p1) + $signed(sext_ln151_fu_659_p1));

assign add_ln151_3_fu_742_p2 = ($signed(sext_ln151_4_fu_739_p1) + $signed(sext_ln151_3_fu_736_p1));

assign add_ln151_4_fu_772_p2 = (trunc_ln151_1_reg_1321_pp0_iter7_reg + trunc_ln151_reg_1311_pp0_iter7_reg);

assign add_ln151_5_fu_665_p2 = ($signed(add_ln151_reg_1260) + $signed(mul_ln151_1_reg_1254));

assign and_ln104_fu_403_p2 = (icmp_ln104_fu_391_p2 & icmp_ln104_1_fu_397_p2);

assign and_ln105_fu_421_p2 = (xor_ln105_fu_415_p2 & or_ln103_fu_385_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((stream_csc_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((stream_in_hresampled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((stream_csc_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((stream_in_hresampled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((stream_csc_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((stream_in_hresampled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter9 = (stream_csc_full_n == 1'b0);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (stream_in_hresampled_empty_n == 1'b0);
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign coef11_fu_472_p3 = ((or_ln105_2_reg_1131[0:0] == 1'b1) ? p_read4 : p_read18);

assign coef12_fu_477_p3 = ((or_ln105_2_reg_1131[0:0] == 1'b1) ? p_read5 : p_read19);

assign coef13_fu_535_p3 = ((or_ln105_2_reg_1131_pp0_iter2_reg[0:0] == 1'b1) ? p_read6 : p_read20);

assign coef21_fu_482_p3 = ((or_ln105_2_reg_1131[0:0] == 1'b1) ? p_read7 : p_read21);

assign coef22_fu_487_p3 = ((or_ln105_2_reg_1131[0:0] == 1'b1) ? p_read8 : p_read22);

assign coef23_fu_540_p3 = ((or_ln105_2_reg_1131_pp0_iter2_reg[0:0] == 1'b1) ? p_read9 : p_read23);

assign coef31_fu_492_p3 = ((or_ln105_2_reg_1131[0:0] == 1'b1) ? p_read10 : p_read24);

assign coef32_fu_497_p3 = ((or_ln105_2_reg_1131[0:0] == 1'b1) ? p_read11 : p_read25);

assign coef33_fu_545_p3 = ((or_ln105_2_reg_1131_pp0_iter2_reg[0:0] == 1'b1) ? p_read12 : p_read26);

assign grp_fu_886_p1 = zext_ln61_fu_526_p1;

assign grp_fu_886_p2 = 24'd2048;

assign grp_fu_894_p1 = zext_ln61_1_fu_529_p1;

assign grp_fu_900_p1 = zext_ln61_fu_526_p1;

assign grp_fu_900_p2 = 24'd2048;

assign grp_fu_908_p1 = zext_ln61_1_fu_529_p1;

assign grp_fu_914_p1 = zext_ln61_fu_526_p1;

assign grp_fu_914_p2 = 24'd2048;

assign grp_fu_922_p1 = zext_ln61_1_fu_529_p1;

assign grp_fu_928_p0 = zext_ln145_fu_532_p1;

assign grp_fu_937_p0 = zext_ln145_fu_532_p1;

assign grp_fu_946_p0 = zext_ln145_fu_532_p1;

assign icmp_ln103_1_fu_379_p2 = ((zext_ln91_fu_363_p1 == p_read1) ? 1'b1 : 1'b0);

assign icmp_ln103_fu_373_p2 = ((zext_ln91_fu_363_p1 != p_read) ? 1'b1 : 1'b0);

assign icmp_ln104_1_fu_397_p2 = (($signed(zext_ln91_fu_363_p1) < $signed(p_read1)) ? 1'b1 : 1'b0);

assign icmp_ln104_fu_391_p2 = (($signed(zext_ln91_fu_363_p1) > $signed(p_read)) ? 1'b1 : 1'b0);

assign icmp_ln153_1_fu_781_p2 = (($signed(Rres_reg_1342) > $signed(zext_ln65_1_fu_761_p1)) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_776_p2 = (($signed(Rres_reg_1342) < $signed(zext_ln65_fu_758_p1)) ? 1'b1 : 1'b0);

assign icmp_ln154_1_fu_815_p2 = (($signed(Gres_reg_1348) > $signed(zext_ln65_1_fu_761_p1)) ? 1'b1 : 1'b0);

assign icmp_ln154_fu_810_p2 = (($signed(Gres_reg_1348) < $signed(zext_ln65_fu_758_p1)) ? 1'b1 : 1'b0);

assign icmp_ln155_1_fu_835_p2 = (($signed(Bres_reg_1354) > $signed(zext_ln65_1_fu_761_p1)) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_830_p2 = (($signed(Bres_reg_1354) < $signed(zext_ln65_fu_758_p1)) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_367_p2 = ((ap_sig_allocacmp_x_5 == add_ln89) ? 1'b1 : 1'b0);

assign max_val_fu_682_p3 = ((or_ln105_2_reg_1131_pp0_iter6_reg[0:0] == 1'b1) ? p_read17 : p_read31);

assign min_val_fu_687_p3 = ((or_ln105_2_reg_1131_pp0_iter6_reg[0:0] == 1'b1) ? p_read16 : p_read30);

assign offsetB_fu_567_p3 = {{select_ln105_11_fu_562_p3}, {12'd0}};

assign offsetG_fu_584_p3 = {{select_ln105_12_fu_579_p3}, {12'd0}};

assign offsetR_fu_601_p3 = {{select_ln105_13_fu_596_p3}, {12'd0}};

assign or_ln103_fu_385_p2 = (icmp_ln103_fu_373_p2 | icmp_ln103_1_fu_379_p2);

assign or_ln105_1_fu_427_p2 = (cmp20_not | and_ln105_fu_421_p2);

assign or_ln105_2_fu_468_p2 = (or_ln105_1_reg_1111 | cmp17_not);

assign or_ln105_fu_409_p2 = (icmp_ln103_1_fu_379_p2 | and_ln104_fu_403_p2);

assign select_ln105_11_fu_562_p3 = ((or_ln105_2_reg_1131_pp0_iter4_reg[0:0] == 1'b1) ? p_read15 : p_read29);

assign select_ln105_12_fu_579_p3 = ((or_ln105_2_reg_1131_pp0_iter4_reg[0:0] == 1'b1) ? p_read14 : p_read28);

assign select_ln105_13_fu_596_p3 = ((or_ln105_2_reg_1131_pp0_iter4_reg[0:0] == 1'b1) ? p_read13 : p_read27);

assign select_ln153_1_fu_803_p3 = ((icmp_ln153_fu_776_p2[0:0] == 1'b1) ? min_val_reg_1334 : select_ln153_fu_796_p3);

assign select_ln153_fu_796_p3 = ((icmp_ln153_1_fu_781_p2[0:0] == 1'b1) ? max_val_reg_1326 : trunc_ln_fu_786_p4);

assign select_ln154_1_fu_871_p3 = ((icmp_ln154_fu_810_p2[0:0] == 1'b1) ? min_val_reg_1334 : select_ln154_fu_864_p3);

assign select_ln154_fu_864_p3 = ((icmp_ln154_1_fu_815_p2[0:0] == 1'b1) ? max_val_reg_1326 : trunc_ln3_fu_820_p4);

assign select_ln155_1_fu_857_p3 = ((icmp_ln155_fu_830_p2[0:0] == 1'b1) ? min_val_reg_1334 : select_ln155_fu_850_p3);

assign select_ln155_fu_850_p3 = ((icmp_ln155_1_fu_835_p2[0:0] == 1'b1) ? max_val_reg_1326 : trunc_ln4_fu_840_p4);

assign sext_ln147_2_fu_616_p1 = add_ln147_reg_1236;

assign sext_ln147_3_fu_692_p1 = $signed(add_ln147_1_reg_1266);

assign sext_ln147_4_fu_695_p1 = add_ln147_2_reg_1276;

assign sext_ln147_fu_613_p1 = mul_ln147_1_reg_1230;

assign sext_ln149_2_fu_639_p1 = add_ln149_reg_1248;

assign sext_ln149_3_fu_714_p1 = $signed(add_ln149_1_reg_1286);

assign sext_ln149_4_fu_717_p1 = add_ln149_2_reg_1296;

assign sext_ln149_fu_636_p1 = mul_ln149_1_reg_1242;

assign sext_ln151_2_fu_662_p1 = add_ln151_reg_1260;

assign sext_ln151_3_fu_736_p1 = $signed(add_ln151_1_reg_1306);

assign sext_ln151_4_fu_739_p1 = add_ln151_2_reg_1316;

assign sext_ln151_fu_659_p1 = mul_ln151_1_reg_1254;

assign stream_csc_din = {{{select_ln155_1_reg_1365}, {select_ln154_1_reg_1370}}, {select_ln153_1_reg_1360}};

assign trunc_ln147_1_fu_633_p1 = grp_fu_928_p3[19:0];

assign trunc_ln147_fu_629_p1 = add_ln147_5_fu_619_p2[19:0];

assign trunc_ln149_1_fu_656_p1 = grp_fu_937_p3[19:0];

assign trunc_ln149_fu_652_p1 = add_ln149_5_fu_642_p2[19:0];

assign trunc_ln151_1_fu_679_p1 = grp_fu_946_p3[19:0];

assign trunc_ln151_fu_675_p1 = add_ln151_5_fu_665_p2[19:0];

assign trunc_ln3_fu_820_p4 = {{add_ln149_4_fu_768_p2[19:12]}};

assign trunc_ln4_fu_840_p4 = {{add_ln151_4_fu_772_p2[19:12]}};

assign trunc_ln_fu_786_p4 = {{add_ln147_4_fu_764_p2[19:12]}};

assign x_6_fu_433_p2 = (ap_sig_allocacmp_x_5 + 12'd1);

assign xor_ln105_fu_415_p2 = (or_ln105_fu_409_p2 ^ 1'd1);

assign zext_ln145_fu_532_p1 = Bpix_reg_1126_pp0_iter2_reg;

assign zext_ln61_1_fu_529_p1 = Gpix_reg_1121;

assign zext_ln61_fu_526_p1 = Rpix_reg_1116;

assign zext_ln65_1_fu_761_p1 = max_val_reg_1326;

assign zext_ln65_fu_758_p1 = min_val_reg_1334;

assign zext_ln91_fu_363_p1 = ap_sig_allocacmp_x_5;

endmodule //bd_3a92_csc_0_v_csc_core_Pipeline_VITIS_LOOP_91_2
