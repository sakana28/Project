-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_3a92_csc_0_v_csc_core is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stream_in_hresampled_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    stream_in_hresampled_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_in_hresampled_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_in_hresampled_empty_n : IN STD_LOGIC;
    stream_in_hresampled_read : OUT STD_LOGIC;
    height_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    height_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    height_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    height_empty_n : IN STD_LOGIC;
    height_read : OUT STD_LOGIC;
    width_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    width_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    width_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    width_empty_n : IN STD_LOGIC;
    width_read : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read11 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_read16 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read17 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read18 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read19 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read20 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read21 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read22 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read23 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read24 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read25 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read26 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read27 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_read28 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_read29 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_read30 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read31 : IN STD_LOGIC_VECTOR (7 downto 0);
    stream_csc_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_csc_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_csc_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_csc_full_n : IN STD_LOGIC;
    stream_csc_write : OUT STD_LOGIC;
    HwReg_width_c15_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    HwReg_width_c15_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_width_c15_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_width_c15_full_n : IN STD_LOGIC;
    HwReg_width_c15_write : OUT STD_LOGIC;
    HwReg_height_c19_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    HwReg_height_c19_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_height_c19_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_height_c19_full_n : IN STD_LOGIC;
    HwReg_height_c19_write : OUT STD_LOGIC );
end;


architecture behav of bd_3a92_csc_0_v_csc_core is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal height_blk_n : STD_LOGIC;
    signal width_blk_n : STD_LOGIC;
    signal HwReg_width_c15_blk_n : STD_LOGIC;
    signal HwReg_height_c19_blk_n : STD_LOGIC;
    signal add_ln89_fu_393_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln89_reg_614 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln89_1_fu_403_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln89_1_reg_619 : STD_LOGIC_VECTOR (11 downto 0);
    signal cmp17_not_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp17_not_reg_627 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln89_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp20_not_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp20_not_reg_632 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start : STD_LOGIC;
    signal grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_done : STD_LOGIC;
    signal grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_idle : STD_LOGIC;
    signal grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_ready : STD_LOGIC;
    signal grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_in_hresampled_read : STD_LOGIC;
    signal grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_csc_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_csc_write : STD_LOGIC;
    signal grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal y_fu_124 : STD_LOGIC_VECTOR (11 downto 0);
    signal y_7_fu_436_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal loopWidth_cast_fu_389_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal height_load_cast_fu_399_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln89_fu_417_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component bd_3a92_csc_0_v_csc_core_Pipeline_VITIS_LOOP_91_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        stream_in_hresampled_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        stream_in_hresampled_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        stream_in_hresampled_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        stream_in_hresampled_empty_n : IN STD_LOGIC;
        stream_in_hresampled_read : OUT STD_LOGIC;
        stream_csc_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        stream_csc_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        stream_csc_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        stream_csc_full_n : IN STD_LOGIC;
        stream_csc_write : OUT STD_LOGIC;
        add_ln89 : IN STD_LOGIC_VECTOR (11 downto 0);
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        cmp20_not : IN STD_LOGIC_VECTOR (0 downto 0);
        cmp17_not : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read18 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read19 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read20 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read21 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read22 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read23 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read26 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read28 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348 : component bd_3a92_csc_0_v_csc_core_Pipeline_VITIS_LOOP_91_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start,
        ap_done => grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_done,
        ap_idle => grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_idle,
        ap_ready => grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_ready,
        stream_in_hresampled_dout => stream_in_hresampled_dout,
        stream_in_hresampled_num_data_valid => ap_const_lv5_0,
        stream_in_hresampled_fifo_cap => ap_const_lv5_0,
        stream_in_hresampled_empty_n => stream_in_hresampled_empty_n,
        stream_in_hresampled_read => grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_in_hresampled_read,
        stream_csc_din => grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_csc_din,
        stream_csc_num_data_valid => ap_const_lv5_0,
        stream_csc_fifo_cap => ap_const_lv5_0,
        stream_csc_full_n => stream_csc_full_n,
        stream_csc_write => grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_csc_write,
        add_ln89 => add_ln89_reg_614,
        p_read => p_read,
        p_read1 => p_read1,
        cmp20_not => cmp20_not_reg_632,
        cmp17_not => cmp17_not_reg_627,
        p_read4 => p_read4,
        p_read18 => p_read18,
        p_read5 => p_read5,
        p_read19 => p_read19,
        p_read6 => p_read6,
        p_read20 => p_read20,
        p_read7 => p_read7,
        p_read21 => p_read21,
        p_read8 => p_read8,
        p_read22 => p_read22,
        p_read9 => p_read9,
        p_read23 => p_read23,
        p_read10 => p_read10,
        p_read24 => p_read24,
        p_read11 => p_read11,
        p_read25 => p_read25,
        p_read12 => p_read12,
        p_read26 => p_read26,
        p_read17 => p_read17,
        p_read31 => p_read31,
        p_read16 => p_read16,
        p_read30 => p_read30,
        p_read15 => p_read15,
        p_read29 => p_read29,
        p_read14 => p_read14,
        p_read28 => p_read28,
        p_read13 => p_read13,
        p_read27 => p_read27);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln89_fu_421_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_ready = ap_const_logic_1)) then 
                    grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    y_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c19_full_n) or (ap_const_logic_0 = HwReg_width_c15_full_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                y_fu_124 <= ap_const_lv12_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln89_fu_421_p2 = ap_const_lv1_0))) then 
                y_fu_124 <= y_7_fu_436_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                add_ln89_1_reg_619 <= add_ln89_1_fu_403_p2;
                add_ln89_reg_614 <= add_ln89_fu_393_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln89_fu_421_p2 = ap_const_lv1_0))) then
                cmp17_not_reg_627 <= cmp17_not_fu_426_p2;
                cmp20_not_reg_632 <= cmp20_not_fu_431_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, height_empty_n, width_empty_n, HwReg_width_c15_full_n, HwReg_height_c19_full_n, ap_CS_fsm_state2, icmp_ln89_fu_421_p2, grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_done, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c19_full_n) or (ap_const_logic_0 = HwReg_width_c15_full_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln89_fu_421_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    HwReg_height_c19_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HwReg_height_c19_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_height_c19_blk_n <= HwReg_height_c19_full_n;
        else 
            HwReg_height_c19_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    HwReg_height_c19_din <= height_dout;

    HwReg_height_c19_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, height_empty_n, width_empty_n, HwReg_width_c15_full_n, HwReg_height_c19_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c19_full_n) or (ap_const_logic_0 = HwReg_width_c15_full_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_height_c19_write <= ap_const_logic_1;
        else 
            HwReg_height_c19_write <= ap_const_logic_0;
        end if; 
    end process;


    HwReg_width_c15_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HwReg_width_c15_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_width_c15_blk_n <= HwReg_width_c15_full_n;
        else 
            HwReg_width_c15_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    HwReg_width_c15_din <= width_dout;

    HwReg_width_c15_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, height_empty_n, width_empty_n, HwReg_width_c15_full_n, HwReg_height_c19_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c19_full_n) or (ap_const_logic_0 = HwReg_width_c15_full_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_width_c15_write <= ap_const_logic_1;
        else 
            HwReg_width_c15_write <= ap_const_logic_0;
        end if; 
    end process;

    add_ln89_1_fu_403_p2 <= std_logic_vector(unsigned(height_load_cast_fu_399_p1) + unsigned(ap_const_lv12_1));
    add_ln89_fu_393_p2 <= std_logic_vector(unsigned(loopWidth_cast_fu_389_p1) + unsigned(ap_const_lv12_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, height_empty_n, width_empty_n, HwReg_width_c15_full_n, HwReg_height_c19_full_n)
    begin
        if (((ap_start = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c19_full_n) or (ap_const_logic_0 = HwReg_width_c15_full_n) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_done)
    begin
        if ((grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, height_empty_n, width_empty_n, HwReg_width_c15_full_n, HwReg_height_c19_full_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c19_full_n) or (ap_const_logic_0 = HwReg_width_c15_full_n) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln89_fu_421_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln89_fu_421_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln89_fu_421_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln89_fu_421_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp17_not_fu_426_p2 <= "1" when (unsigned(zext_ln89_fu_417_p1) < unsigned(p_read2)) else "0";
    cmp20_not_fu_431_p2 <= "1" when (unsigned(zext_ln89_fu_417_p1) > unsigned(p_read3)) else "0";
    grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start <= grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start_reg;

    height_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, height_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_blk_n <= height_empty_n;
        else 
            height_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    height_load_cast_fu_399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(height_dout),12));

    height_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, height_empty_n, width_empty_n, HwReg_width_c15_full_n, HwReg_height_c19_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c19_full_n) or (ap_const_logic_0 = HwReg_width_c15_full_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_read <= ap_const_logic_1;
        else 
            height_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln89_fu_421_p2 <= "1" when (y_fu_124 = add_ln89_1_reg_619) else "0";
    loopWidth_cast_fu_389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(width_dout),12));
    stream_csc_din <= grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_csc_din;

    stream_csc_write_assign_proc : process(grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_csc_write, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            stream_csc_write <= grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_csc_write;
        else 
            stream_csc_write <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_hresampled_read_assign_proc : process(grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_in_hresampled_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            stream_in_hresampled_read <= grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_in_hresampled_read;
        else 
            stream_in_hresampled_read <= ap_const_logic_0;
        end if; 
    end process;


    width_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, width_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_blk_n <= width_empty_n;
        else 
            width_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    width_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, height_empty_n, width_empty_n, HwReg_width_c15_full_n, HwReg_height_c19_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (width_empty_n = ap_const_logic_0) or (height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c19_full_n) or (ap_const_logic_0 = HwReg_width_c15_full_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_read <= ap_const_logic_1;
        else 
            width_read <= ap_const_logic_0;
        end if; 
    end process;

    y_7_fu_436_p2 <= std_logic_vector(unsigned(y_fu_124) + unsigned(ap_const_lv12_1));
    zext_ln89_fu_417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_fu_124),16));
end behav;
