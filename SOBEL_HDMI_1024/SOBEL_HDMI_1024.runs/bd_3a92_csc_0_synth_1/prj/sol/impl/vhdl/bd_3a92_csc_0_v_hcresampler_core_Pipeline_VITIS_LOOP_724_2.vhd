-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_3a92_csc_0_v_hcresampler_core_Pipeline_VITIS_LOOP_724_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stream_in_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    stream_in_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_in_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_in_empty_n : IN STD_LOGIC;
    stream_in_read : OUT STD_LOGIC;
    stream_in_hresampled_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_in_hresampled_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_in_hresampled_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_in_hresampled_full_n : IN STD_LOGIC;
    stream_in_hresampled_write : OUT STD_LOGIC;
    pixbuf_y_val_V_19 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_18 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_17 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_05241026_lcssa1052_i : IN STD_LOGIC_VECTOR (7 downto 0);
    loopWidth : IN STD_LOGIC_VECTOR (11 downto 0);
    select_ln685 : IN STD_LOGIC_VECTOR (2 downto 0);
    zext_ln720 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read : IN STD_LOGIC_VECTOR (0 downto 0);
    pixbuf_y_val_V_24_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_24_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_23_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_23_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_22_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_22_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_21_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_21_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_21_out_o_ap_vld : OUT STD_LOGIC;
    pixbuf_y_val_V_20_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_val_V_20_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0_21075_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0_21075_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0_21075_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0516_21072_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0516_21072_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0516_21072_i_out_o_ap_vld : OUT STD_LOGIC;
    p_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out_o_ap_vld : OUT STD_LOGIC;
    p_out1_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out1_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out1_o_ap_vld : OUT STD_LOGIC;
    p_out2_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out2_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out2_o_ap_vld : OUT STD_LOGIC;
    p_out3_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out3_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out3_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_01035_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01035_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01035_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_01031_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01031_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01031_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_2_0_0_01025_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_01025_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_01025_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_01023_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01023_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_01023_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_05241021_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_05241021_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_05241021_i_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of bd_3a92_csc_0_v_hcresampler_core_Pipeline_VITIS_LOOP_724_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln724_reg_768 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln732_reg_778 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op54_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln724_reg_768_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_792 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_792_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op96_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal tmp_reg_792_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op125_write_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln724_fu_267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal stream_in_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal stream_in_hresampled_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln724_fu_263_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln724_reg_756 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln724_reg_756_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln724_reg_768_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_fu_285_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_772 : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_772_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_772_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_772_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln732_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp150_i_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp150_i_reg_782 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp150_i_reg_782_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_792_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal pixbuf_y_val_V_6_reg_796 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_7_reg_802 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_8_reg_807 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_1_fu_495_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_1_reg_812 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_fu_502_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_reg_817 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_1_fu_509_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_1_reg_822 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_1_reg_822_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_fu_516_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_reg_828 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_reg_828_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln2_reg_834 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln232_1_reg_839 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_21_out_load_reg_844 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_exit_pp0_iter2_stage0 : STD_LOGIC;
    signal select_ln814_fu_481_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln814_1_fu_488_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln746_fu_346_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln746_1_fu_353_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_5_fu_326_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_fu_322_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_fu_120 : STD_LOGIC_VECTOR (11 downto 0);
    signal x_2_fu_273_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_x_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal pixbuf_y_val_V_1_fu_124 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_2_fu_128 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_3_fu_132 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_4_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_val_V_5_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_fu_535_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_s_fu_680_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln724_fu_259_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln685_cast_fu_222_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal out_x_fu_279_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln720_cast_fu_218_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln792_fu_439_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln792_1_fu_446_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln792_2_fu_453_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln792_3_fu_460_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln792_4_fu_467_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln792_5_fu_474_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln232_1_fu_608_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1541_fu_611_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_fu_605_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_fu_617_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_3_fu_636_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1541_2_fu_639_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_2_fu_633_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_1_fu_645_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln688_fu_670_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln688_1_fu_675_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_590 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component bd_3a92_csc_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component bd_3a92_csc_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    pixbuf_y_val_V_1_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_1_fu_124 <= pixbuf_y_val_V;
                elsif (((icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_val_V_1_fu_124 <= pixbuf_y_val_V_2_fu_128;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_2_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pixbuf_y_val_V_2_fu_128 <= p_0_0_0_0_05241026_lcssa1052_i;
                elsif ((ap_const_boolean_1 = ap_condition_590)) then 
                    pixbuf_y_val_V_2_fu_128 <= trunc_ln145_fu_322_p1;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_3_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_3_fu_132 <= pixbuf_y_val_V_17;
                elsif (((icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_val_V_3_fu_132 <= pixbuf_y_val_V_4_fu_136;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_4_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_4_fu_136 <= pixbuf_y_val_V_18;
                elsif (((icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_val_V_4_fu_136 <= pixbuf_y_val_V_5_fu_140;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_val_V_5_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_val_V_5_fu_140 <= pixbuf_y_val_V_19;
                elsif (((icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_val_V_5_fu_140 <= pixbuf_y_val_V_1_fu_124;
                end if;
            end if; 
        end if;
    end process;

    x_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln724_fu_267_p2 = ap_const_lv1_0))) then 
                    x_fu_120 <= x_2_fu_273_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_120 <= ap_const_lv12_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                cmp150_i_reg_782_pp0_iter1_reg <= cmp150_i_reg_782;
                icmp_ln724_reg_768 <= icmp_ln724_fu_267_p2;
                icmp_ln724_reg_768_pp0_iter1_reg <= icmp_ln724_reg_768;
                odd_col_reg_772_pp0_iter1_reg <= odd_col_reg_772;
                tmp_reg_792_pp0_iter1_reg <= tmp_reg_792;
                trunc_ln724_reg_756 <= trunc_ln724_fu_263_p1;
                trunc_ln724_reg_756_pp0_iter1_reg <= trunc_ln724_reg_756;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                icmp_ln724_reg_768_pp0_iter2_reg <= icmp_ln724_reg_768_pp0_iter1_reg;
                odd_col_reg_772_pp0_iter2_reg <= odd_col_reg_772_pp0_iter1_reg;
                odd_col_reg_772_pp0_iter3_reg <= odd_col_reg_772_pp0_iter2_reg;
                rhs_1_reg_822_pp0_iter3_reg <= rhs_1_reg_822;
                rhs_reg_828_pp0_iter3_reg <= rhs_reg_828;
                tmp_reg_792_pp0_iter2_reg <= tmp_reg_792_pp0_iter1_reg;
                tmp_reg_792_pp0_iter3_reg <= tmp_reg_792_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln724_fu_267_p2 = ap_const_lv1_0))) then
                cmp150_i_reg_782 <= cmp150_i_fu_295_p2;
                icmp_ln732_reg_778 <= icmp_ln732_fu_289_p2;
                odd_col_reg_772 <= odd_col_fu_285_p1;
                tmp_reg_792 <= out_x_fu_279_p2(12 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0))) then
                lhs_1_reg_812 <= lhs_1_fu_495_p3;
                lhs_reg_817 <= lhs_fu_502_p3;
                rhs_1_reg_822 <= rhs_1_fu_509_p3;
                rhs_reg_828 <= rhs_fu_516_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_read = ap_const_lv1_0) and (tmp_reg_792_pp0_iter2_reg = ap_const_lv1_0))) then
                pixbuf_y_val_V_21_out_load_reg_844 <= pixbuf_y_val_V_21_out_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                pixbuf_y_val_V_6_reg_796 <= pixbuf_y_val_V_3_fu_132;
                pixbuf_y_val_V_7_reg_802 <= pixbuf_y_val_V_4_fu_136;
                pixbuf_y_val_V_8_reg_807 <= pixbuf_y_val_V_5_fu_140;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (odd_col_reg_772_pp0_iter2_reg = ap_const_lv1_1))) then
                trunc_ln232_1_reg_839 <= ret_V_1_fu_645_p2(8 downto 1);
                trunc_ln2_reg_834 <= ret_V_fu_617_p2(8 downto 1);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1541_2_fu_639_p2 <= std_logic_vector(unsigned(zext_ln232_3_fu_636_p1) + unsigned(ap_const_lv9_1));
    add_ln1541_fu_611_p2 <= std_logic_vector(unsigned(zext_ln232_1_fu_608_p1) + unsigned(ap_const_lv9_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, stream_in_empty_n, ap_predicate_op54_read_state2, stream_in_hresampled_full_n, ap_predicate_op96_write_state3, ap_predicate_op125_write_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op125_write_state5 = ap_const_boolean_1) and (stream_in_hresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_predicate_op96_write_state3 = ap_const_boolean_1) and (stream_in_hresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op54_read_state2 = ap_const_boolean_1) and (stream_in_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, stream_in_empty_n, ap_predicate_op54_read_state2, stream_in_hresampled_full_n, ap_predicate_op96_write_state3, ap_predicate_op125_write_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op125_write_state5 = ap_const_boolean_1) and (stream_in_hresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_predicate_op96_write_state3 = ap_const_boolean_1) and (stream_in_hresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op54_read_state2 = ap_const_boolean_1) and (stream_in_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, stream_in_empty_n, ap_predicate_op54_read_state2, stream_in_hresampled_full_n, ap_predicate_op96_write_state3, ap_predicate_op125_write_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op125_write_state5 = ap_const_boolean_1) and (stream_in_hresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_predicate_op96_write_state3 = ap_const_boolean_1) and (stream_in_hresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op54_read_state2 = ap_const_boolean_1) and (stream_in_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(stream_in_empty_n, ap_predicate_op54_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op54_read_state2 = ap_const_boolean_1) and (stream_in_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(stream_in_hresampled_full_n, ap_predicate_op96_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_predicate_op96_write_state3 = ap_const_boolean_1) and (stream_in_hresampled_full_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter4_assign_proc : process(stream_in_hresampled_full_n, ap_predicate_op125_write_state5)
    begin
                ap_block_state5_pp0_stage0_iter4 <= ((ap_predicate_op125_write_state5 = ap_const_boolean_1) and (stream_in_hresampled_full_n = ap_const_logic_0));
    end process;


    ap_condition_590_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln724_reg_768, icmp_ln732_reg_778)
    begin
                ap_condition_590 <= ((icmp_ln732_reg_778 = ap_const_lv1_1) and (icmp_ln724_reg_768 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln724_fu_267_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln724_fu_267_p2 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_768_pp0_iter1_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op125_write_state5_assign_proc : process(tmp_reg_792_pp0_iter3_reg, p_read)
    begin
                ap_predicate_op125_write_state5 <= ((tmp_reg_792_pp0_iter3_reg = ap_const_lv1_0) and (p_read = ap_const_lv1_0));
    end process;


    ap_predicate_op54_read_state2_assign_proc : process(icmp_ln724_reg_768, icmp_ln732_reg_778)
    begin
                ap_predicate_op54_read_state2 <= ((icmp_ln732_reg_778 = ap_const_lv1_1) and (icmp_ln724_reg_768 = ap_const_lv1_0));
    end process;


    ap_predicate_op96_write_state3_assign_proc : process(icmp_ln724_reg_768_pp0_iter1_reg, tmp_reg_792_pp0_iter1_reg, p_read)
    begin
                ap_predicate_op96_write_state3 <= ((p_read = ap_const_lv1_1) and (tmp_reg_792_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_x_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_fu_120, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_x_1 <= ap_const_lv12_0;
        else 
            ap_sig_allocacmp_x_1 <= x_fu_120;
        end if; 
    end process;

    cmp150_i_fu_295_p2 <= "1" when (ap_sig_allocacmp_x_1 = ap_const_lv12_1) else "0";
    icmp_ln724_fu_267_p2 <= "1" when (ap_sig_allocacmp_x_1 = loopWidth) else "0";
    icmp_ln732_fu_289_p2 <= "1" when (unsigned(ap_sig_allocacmp_x_1) < unsigned(zext_ln720_cast_fu_218_p1)) else "0";
    lhs_1_fu_495_p3 <= 
        p_0_1_0_0_01035_i_out_i when (cmp150_i_reg_782_pp0_iter1_reg(0) = '1') else 
        select_ln792_2_fu_453_p3;
    lhs_fu_502_p3 <= 
        p_0_1_0_0_01031_i_out_i when (cmp150_i_reg_782_pp0_iter1_reg(0) = '1') else 
        select_ln792_3_fu_460_p3;
    odd_col_fu_285_p1 <= out_x_fu_279_p2(1 - 1 downto 0);
    out_x_fu_279_p2 <= std_logic_vector(unsigned(zext_ln724_fu_259_p1) - unsigned(select_ln685_cast_fu_222_p1));

    p_0_0_0_0_0516_21072_i_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_768_pp0_iter1_reg, p_0_0_0_0_0516_21072_i_out_i, ap_block_pp0_stage0, select_ln814_1_fu_488_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_0_0_0_0516_21072_i_out_o <= select_ln814_1_fu_488_p3;
        else 
            p_0_0_0_0_0516_21072_i_out_o <= p_0_0_0_0_0516_21072_i_out_i;
        end if; 
    end process;


    p_0_0_0_0_0516_21072_i_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_768_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_0_0_0_0516_21072_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0516_21072_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_05241021_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln724_reg_768, icmp_ln732_reg_778, p_0_0_0_0_05241021_i_out_i, ap_block_pp0_stage0, trunc_ln145_fu_322_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln732_reg_778 = ap_const_lv1_1) and (icmp_ln724_reg_768 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_0_0_0_05241021_i_out_o <= trunc_ln145_fu_322_p1;
        else 
            p_0_0_0_0_05241021_i_out_o <= p_0_0_0_0_05241021_i_out_i;
        end if; 
    end process;


    p_0_0_0_0_05241021_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln724_reg_768, icmp_ln732_reg_778, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln732_reg_778 = ap_const_lv1_1) and (icmp_ln724_reg_768 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_0_0_0_05241021_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_05241021_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_0_21075_i_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_768_pp0_iter1_reg, p_0_0_0_0_0_21075_i_out_i, ap_block_pp0_stage0, select_ln814_fu_481_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_0_0_0_0_21075_i_out_o <= select_ln814_fu_481_p3;
        else 
            p_0_0_0_0_0_21075_i_out_o <= p_0_0_0_0_0_21075_i_out_i;
        end if; 
    end process;


    p_0_0_0_0_0_21075_i_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_768_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_0_0_0_0_21075_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0_21075_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_01023_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_in_dout, icmp_ln724_reg_768, icmp_ln732_reg_778, p_0_1_0_0_01023_i_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln732_reg_778 = ap_const_lv1_1) and (icmp_ln724_reg_768 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_01023_i_out_o <= stream_in_dout(15 downto 8);
        else 
            p_0_1_0_0_01023_i_out_o <= p_0_1_0_0_01023_i_out_i;
        end if; 
    end process;


    p_0_1_0_0_01023_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln724_reg_768, icmp_ln732_reg_778, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln732_reg_778 = ap_const_lv1_1) and (icmp_ln724_reg_768 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_01023_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_01023_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_01031_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln724_reg_768, icmp_ln732_reg_778, p_0_1_0_0_01031_i_out_i, ap_block_pp0_stage0, select_ln746_1_fu_353_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln732_reg_778 = ap_const_lv1_1) and (icmp_ln724_reg_768 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_01031_i_out_o <= select_ln746_1_fu_353_p3;
        else 
            p_0_1_0_0_01031_i_out_o <= p_0_1_0_0_01031_i_out_i;
        end if; 
    end process;


    p_0_1_0_0_01031_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln724_reg_768, icmp_ln732_reg_778, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln732_reg_778 = ap_const_lv1_1) and (icmp_ln724_reg_768 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_01031_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_01031_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_01035_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln724_reg_768, icmp_ln732_reg_778, p_0_1_0_0_01035_i_out_i, ap_block_pp0_stage0, select_ln746_fu_346_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln732_reg_778 = ap_const_lv1_1) and (icmp_ln724_reg_768 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_01035_i_out_o <= select_ln746_fu_346_p3;
        else 
            p_0_1_0_0_01035_i_out_o <= p_0_1_0_0_01035_i_out_i;
        end if; 
    end process;


    p_0_1_0_0_01035_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln724_reg_768, icmp_ln732_reg_778, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln732_reg_778 = ap_const_lv1_1) and (icmp_ln724_reg_768 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_01035_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_01035_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_2_0_0_01025_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_in_dout, icmp_ln724_reg_768, icmp_ln732_reg_778, p_0_2_0_0_01025_i_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln732_reg_778 = ap_const_lv1_1) and (icmp_ln724_reg_768 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_2_0_0_01025_i_out_o <= stream_in_dout(23 downto 16);
        else 
            p_0_2_0_0_01025_i_out_o <= p_0_2_0_0_01025_i_out_i;
        end if; 
    end process;


    p_0_2_0_0_01025_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln724_reg_768, icmp_ln732_reg_778, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln732_reg_778 = ap_const_lv1_1) and (icmp_ln724_reg_768 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_2_0_0_01025_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_2_0_0_01025_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_fu_535_p4 <= ((p_0_2_0_0_01025_i_out_i & p_0_1_0_0_01023_i_out_i) & p_0_0_0_0_05241021_i_out_i);

    p_out1_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_768_pp0_iter1_reg, p_out1_i, ap_block_pp0_stage0, lhs_fu_502_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out1_o <= lhs_fu_502_p3;
        else 
            p_out1_o <= p_out1_i;
        end if; 
    end process;


    p_out1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_768_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out1_o_ap_vld <= ap_const_logic_1;
        else 
            p_out1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out2_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_768_pp0_iter1_reg, p_out2_i, ap_block_pp0_stage0, rhs_1_fu_509_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out2_o <= rhs_1_fu_509_p3;
        else 
            p_out2_o <= p_out2_i;
        end if; 
    end process;


    p_out2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_768_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out2_o_ap_vld <= ap_const_logic_1;
        else 
            p_out2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out3_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_768_pp0_iter1_reg, p_out3_i, ap_block_pp0_stage0, rhs_fu_516_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out3_o <= rhs_fu_516_p3;
        else 
            p_out3_o <= p_out3_i;
        end if; 
    end process;


    p_out3_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_768_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out3_o_ap_vld <= ap_const_logic_1;
        else 
            p_out3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_768_pp0_iter1_reg, p_out_i, ap_block_pp0_stage0, lhs_1_fu_495_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out_o <= lhs_1_fu_495_p3;
        else 
            p_out_o <= p_out_i;
        end if; 
    end process;


    p_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_768_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_768_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_s_fu_680_p4 <= ((select_ln688_fu_670_p3 & select_ln688_1_fu_675_p3) & pixbuf_y_val_V_21_out_load_reg_844);
    pixbuf_y_val_V_20_out <= pixbuf_y_val_V_1_fu_124;

    pixbuf_y_val_V_20_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln724_reg_768_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_768_pp0_iter2_reg = ap_const_lv1_1))) then 
            pixbuf_y_val_V_20_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_20_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    pixbuf_y_val_V_21_out_o_assign_proc : process(ap_enable_reg_pp0_iter3, pixbuf_y_val_V_21_out_i, ap_block_pp0_stage0, pixbuf_y_val_V_6_reg_796)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pixbuf_y_val_V_21_out_o <= pixbuf_y_val_V_6_reg_796;
        else 
            pixbuf_y_val_V_21_out_o <= pixbuf_y_val_V_21_out_i;
        end if; 
    end process;


    pixbuf_y_val_V_21_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pixbuf_y_val_V_21_out_o_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_21_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_val_V_22_out <= pixbuf_y_val_V_6_reg_796;

    pixbuf_y_val_V_22_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln724_reg_768_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_768_pp0_iter2_reg = ap_const_lv1_1))) then 
            pixbuf_y_val_V_22_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_22_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_val_V_23_out <= pixbuf_y_val_V_7_reg_802;

    pixbuf_y_val_V_23_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln724_reg_768_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_768_pp0_iter2_reg = ap_const_lv1_1))) then 
            pixbuf_y_val_V_23_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_23_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_val_V_24_out <= pixbuf_y_val_V_8_reg_807;

    pixbuf_y_val_V_24_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln724_reg_768_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_768_pp0_iter2_reg = ap_const_lv1_1))) then 
            pixbuf_y_val_V_24_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_val_V_24_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_1_fu_645_p2 <= std_logic_vector(unsigned(add_ln1541_2_fu_639_p2) + unsigned(zext_ln232_2_fu_633_p1));
    ret_V_fu_617_p2 <= std_logic_vector(unsigned(add_ln1541_fu_611_p2) + unsigned(zext_ln232_fu_605_p1));
    rhs_1_fu_509_p3 <= 
        p_0_1_0_0_01035_i_out_i when (cmp150_i_reg_782_pp0_iter1_reg(0) = '1') else 
        select_ln792_4_fu_467_p3;
    rhs_fu_516_p3 <= 
        p_0_1_0_0_01031_i_out_i when (cmp150_i_reg_782_pp0_iter1_reg(0) = '1') else 
        select_ln792_5_fu_474_p3;
    select_ln685_cast_fu_222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln685),13));
    select_ln688_1_fu_675_p3 <= 
        trunc_ln2_reg_834 when (odd_col_reg_772_pp0_iter3_reg(0) = '1') else 
        rhs_reg_828_pp0_iter3_reg;
    select_ln688_fu_670_p3 <= 
        trunc_ln232_1_reg_839 when (odd_col_reg_772_pp0_iter3_reg(0) = '1') else 
        rhs_1_reg_822_pp0_iter3_reg;
    select_ln746_1_fu_353_p3 <= 
        p_0_1_0_0_01031_i_out_i when (trunc_ln724_reg_756(0) = '1') else 
        trunc_ln145_5_fu_326_p4;
    select_ln746_fu_346_p3 <= 
        trunc_ln145_5_fu_326_p4 when (trunc_ln724_reg_756(0) = '1') else 
        p_0_1_0_0_01035_i_out_i;
    select_ln792_1_fu_446_p3 <= 
        p_0_1_0_0_01031_i_out_i when (trunc_ln724_reg_756_pp0_iter1_reg(0) = '1') else 
        p_0_0_0_0_0516_21072_i_out_i;
    select_ln792_2_fu_453_p3 <= 
        p_0_0_0_0_0_21075_i_out_i when (trunc_ln724_reg_756_pp0_iter1_reg(0) = '1') else 
        p_out_i;
    select_ln792_3_fu_460_p3 <= 
        p_0_0_0_0_0516_21072_i_out_i when (trunc_ln724_reg_756_pp0_iter1_reg(0) = '1') else 
        p_out1_i;
    select_ln792_4_fu_467_p3 <= 
        p_out_i when (trunc_ln724_reg_756_pp0_iter1_reg(0) = '1') else 
        p_out2_i;
    select_ln792_5_fu_474_p3 <= 
        p_out1_i when (trunc_ln724_reg_756_pp0_iter1_reg(0) = '1') else 
        p_out3_i;
    select_ln792_fu_439_p3 <= 
        p_0_1_0_0_01035_i_out_i when (trunc_ln724_reg_756_pp0_iter1_reg(0) = '1') else 
        p_0_0_0_0_0_21075_i_out_i;
    select_ln814_1_fu_488_p3 <= 
        p_0_1_0_0_01031_i_out_i when (cmp150_i_reg_782_pp0_iter1_reg(0) = '1') else 
        select_ln792_1_fu_446_p3;
    select_ln814_fu_481_p3 <= 
        p_0_1_0_0_01035_i_out_i when (cmp150_i_reg_782_pp0_iter1_reg(0) = '1') else 
        select_ln792_fu_439_p3;

    stream_in_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_in_empty_n, ap_predicate_op54_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op54_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_blk_n <= stream_in_empty_n;
        else 
            stream_in_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_in_hresampled_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, stream_in_hresampled_full_n, ap_predicate_op96_write_state3, ap_predicate_op125_write_state5, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op125_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op96_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            stream_in_hresampled_blk_n <= stream_in_hresampled_full_n;
        else 
            stream_in_hresampled_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_in_hresampled_din_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_predicate_op96_write_state3, ap_predicate_op125_write_state5, p_0_fu_535_p4, ap_block_pp0_stage0_01001, p_s_fu_680_p4)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_01001)) then
            if (((ap_predicate_op125_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
                stream_in_hresampled_din <= p_s_fu_680_p4;
            elsif (((ap_predicate_op96_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                stream_in_hresampled_din <= p_0_fu_535_p4;
            else 
                stream_in_hresampled_din <= "XXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            stream_in_hresampled_din <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stream_in_hresampled_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_predicate_op96_write_state3, ap_predicate_op125_write_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op125_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op96_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            stream_in_hresampled_write <= ap_const_logic_1;
        else 
            stream_in_hresampled_write <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op54_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op54_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_read <= ap_const_logic_1;
        else 
            stream_in_read <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln145_5_fu_326_p4 <= stream_in_dout(15 downto 8);
    trunc_ln145_fu_322_p1 <= stream_in_dout(8 - 1 downto 0);
    trunc_ln724_fu_263_p1 <= ap_sig_allocacmp_x_1(1 - 1 downto 0);
    x_2_fu_273_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x_1) + unsigned(ap_const_lv12_1));
    zext_ln232_1_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_reg_828),9));
    zext_ln232_2_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_1_reg_812),9));
    zext_ln232_3_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_1_reg_822),9));
    zext_ln232_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_reg_817),9));
    zext_ln720_cast_fu_218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln720),12));
    zext_ln724_fu_259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_x_1),13));
end behav;
