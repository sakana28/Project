// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_3a92_csc_0_v_csc_core (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_in_hresampled_dout,
        stream_in_hresampled_num_data_valid,
        stream_in_hresampled_fifo_cap,
        stream_in_hresampled_empty_n,
        stream_in_hresampled_read,
        height_dout,
        height_num_data_valid,
        height_fifo_cap,
        height_empty_n,
        height_read,
        width_dout,
        width_num_data_valid,
        width_fifo_cap,
        width_empty_n,
        width_read,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        p_read30,
        p_read31,
        stream_csc_din,
        stream_csc_num_data_valid,
        stream_csc_fifo_cap,
        stream_csc_full_n,
        stream_csc_write,
        HwReg_width_c15_din,
        HwReg_width_c15_num_data_valid,
        HwReg_width_c15_fifo_cap,
        HwReg_width_c15_full_n,
        HwReg_width_c15_write,
        HwReg_height_c19_din,
        HwReg_height_c19_num_data_valid,
        HwReg_height_c19_fifo_cap,
        HwReg_height_c19_full_n,
        HwReg_height_c19_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] stream_in_hresampled_dout;
input  [4:0] stream_in_hresampled_num_data_valid;
input  [4:0] stream_in_hresampled_fifo_cap;
input   stream_in_hresampled_empty_n;
output   stream_in_hresampled_read;
input  [10:0] height_dout;
input  [1:0] height_num_data_valid;
input  [1:0] height_fifo_cap;
input   height_empty_n;
output   height_read;
input  [10:0] width_dout;
input  [1:0] width_num_data_valid;
input  [1:0] width_fifo_cap;
input   width_empty_n;
output   width_read;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [15:0] p_read8;
input  [15:0] p_read9;
input  [15:0] p_read10;
input  [15:0] p_read11;
input  [15:0] p_read12;
input  [9:0] p_read13;
input  [9:0] p_read14;
input  [9:0] p_read15;
input  [7:0] p_read16;
input  [7:0] p_read17;
input  [15:0] p_read18;
input  [15:0] p_read19;
input  [15:0] p_read20;
input  [15:0] p_read21;
input  [15:0] p_read22;
input  [15:0] p_read23;
input  [15:0] p_read24;
input  [15:0] p_read25;
input  [15:0] p_read26;
input  [9:0] p_read27;
input  [9:0] p_read28;
input  [9:0] p_read29;
input  [7:0] p_read30;
input  [7:0] p_read31;
output  [23:0] stream_csc_din;
input  [4:0] stream_csc_num_data_valid;
input  [4:0] stream_csc_fifo_cap;
input   stream_csc_full_n;
output   stream_csc_write;
output  [10:0] HwReg_width_c15_din;
input  [1:0] HwReg_width_c15_num_data_valid;
input  [1:0] HwReg_width_c15_fifo_cap;
input   HwReg_width_c15_full_n;
output   HwReg_width_c15_write;
output  [10:0] HwReg_height_c19_din;
input  [1:0] HwReg_height_c19_num_data_valid;
input  [1:0] HwReg_height_c19_fifo_cap;
input   HwReg_height_c19_full_n;
output   HwReg_height_c19_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_in_hresampled_read;
reg height_read;
reg width_read;
reg stream_csc_write;
reg HwReg_width_c15_write;
reg HwReg_height_c19_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    height_blk_n;
reg    width_blk_n;
reg    HwReg_width_c15_blk_n;
reg    HwReg_height_c19_blk_n;
wire   [11:0] add_ln89_fu_393_p2;
reg   [11:0] add_ln89_reg_614;
wire   [11:0] add_ln89_1_fu_403_p2;
reg   [11:0] add_ln89_1_reg_619;
wire   [0:0] cmp17_not_fu_426_p2;
reg   [0:0] cmp17_not_reg_627;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln89_fu_421_p2;
wire   [0:0] cmp20_not_fu_431_p2;
reg   [0:0] cmp20_not_reg_632;
wire    grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start;
wire    grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_done;
wire    grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_idle;
wire    grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_ready;
wire    grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_in_hresampled_read;
wire   [23:0] grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_csc_din;
wire    grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_csc_write;
reg    grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [11:0] y_fu_124;
wire   [11:0] y_7_fu_436_p2;
reg    ap_block_state1;
wire   [11:0] loopWidth_cast_fu_389_p1;
wire   [11:0] height_load_cast_fu_399_p1;
wire   [15:0] zext_ln89_fu_417_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start_reg = 1'b0;
end

bd_3a92_csc_0_v_csc_core_Pipeline_VITIS_LOOP_91_2 grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start),
    .ap_done(grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_done),
    .ap_idle(grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_idle),
    .ap_ready(grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_ready),
    .stream_in_hresampled_dout(stream_in_hresampled_dout),
    .stream_in_hresampled_num_data_valid(5'd0),
    .stream_in_hresampled_fifo_cap(5'd0),
    .stream_in_hresampled_empty_n(stream_in_hresampled_empty_n),
    .stream_in_hresampled_read(grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_in_hresampled_read),
    .stream_csc_din(grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_csc_din),
    .stream_csc_num_data_valid(5'd0),
    .stream_csc_fifo_cap(5'd0),
    .stream_csc_full_n(stream_csc_full_n),
    .stream_csc_write(grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_csc_write),
    .add_ln89(add_ln89_reg_614),
    .p_read(p_read),
    .p_read1(p_read1),
    .cmp20_not(cmp20_not_reg_632),
    .cmp17_not(cmp17_not_reg_627),
    .p_read4(p_read4),
    .p_read18(p_read18),
    .p_read5(p_read5),
    .p_read19(p_read19),
    .p_read6(p_read6),
    .p_read20(p_read20),
    .p_read7(p_read7),
    .p_read21(p_read21),
    .p_read8(p_read8),
    .p_read22(p_read22),
    .p_read9(p_read9),
    .p_read23(p_read23),
    .p_read10(p_read10),
    .p_read24(p_read24),
    .p_read11(p_read11),
    .p_read25(p_read25),
    .p_read12(p_read12),
    .p_read26(p_read26),
    .p_read17(p_read17),
    .p_read31(p_read31),
    .p_read16(p_read16),
    .p_read30(p_read30),
    .p_read15(p_read15),
    .p_read29(p_read29),
    .p_read14(p_read14),
    .p_read28(p_read28),
    .p_read13(p_read13),
    .p_read27(p_read27)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln89_fu_421_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start_reg <= 1'b1;
        end else if ((grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_ready == 1'b1)) begin
            grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (1'b0 == HwReg_height_c19_full_n) | (1'b0 == HwReg_width_c15_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_fu_124 <= 12'd1;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln89_fu_421_p2 == 1'd0))) begin
        y_fu_124 <= y_7_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln89_1_reg_619 <= add_ln89_1_fu_403_p2;
        add_ln89_reg_614 <= add_ln89_fu_393_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln89_fu_421_p2 == 1'd0))) begin
        cmp17_not_reg_627 <= cmp17_not_fu_426_p2;
        cmp20_not_reg_632 <= cmp20_not_fu_431_p2;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_height_c19_blk_n = HwReg_height_c19_full_n;
    end else begin
        HwReg_height_c19_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (1'b0 == HwReg_height_c19_full_n) | (1'b0 == HwReg_width_c15_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_height_c19_write = 1'b1;
    end else begin
        HwReg_height_c19_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_width_c15_blk_n = HwReg_width_c15_full_n;
    end else begin
        HwReg_width_c15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (1'b0 == HwReg_height_c19_full_n) | (1'b0 == HwReg_width_c15_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_width_c15_write = 1'b1;
    end else begin
        HwReg_width_c15_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (1'b0 == HwReg_height_c19_full_n) | (1'b0 == HwReg_width_c15_full_n) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln89_fu_421_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln89_fu_421_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_blk_n = height_empty_n;
    end else begin
        height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (1'b0 == HwReg_height_c19_full_n) | (1'b0 == HwReg_width_c15_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_read = 1'b1;
    end else begin
        height_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        stream_csc_write = grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_csc_write;
    end else begin
        stream_csc_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        stream_in_hresampled_read = grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_in_hresampled_read;
    end else begin
        stream_in_hresampled_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_blk_n = width_empty_n;
    end else begin
        width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (1'b0 == HwReg_height_c19_full_n) | (1'b0 == HwReg_width_c15_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_read = 1'b1;
    end else begin
        width_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (1'b0 == HwReg_height_c19_full_n) | (1'b0 == HwReg_width_c15_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln89_fu_421_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HwReg_height_c19_din = height_dout;

assign HwReg_width_c15_din = width_dout;

assign add_ln89_1_fu_403_p2 = (height_load_cast_fu_399_p1 + 12'd1);

assign add_ln89_fu_393_p2 = (loopWidth_cast_fu_389_p1 + 12'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (1'b0 == HwReg_height_c19_full_n) | (1'b0 == HwReg_width_c15_full_n) | (ap_done_reg == 1'b1));
end

assign cmp17_not_fu_426_p2 = ((zext_ln89_fu_417_p1 < p_read2) ? 1'b1 : 1'b0);

assign cmp20_not_fu_431_p2 = ((zext_ln89_fu_417_p1 > p_read3) ? 1'b1 : 1'b0);

assign grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start = grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_ap_start_reg;

assign height_load_cast_fu_399_p1 = height_dout;

assign icmp_ln89_fu_421_p2 = ((y_fu_124 == add_ln89_1_reg_619) ? 1'b1 : 1'b0);

assign loopWidth_cast_fu_389_p1 = width_dout;

assign stream_csc_din = grp_v_csc_core_Pipeline_VITIS_LOOP_91_2_fu_348_stream_csc_din;

assign y_7_fu_436_p2 = (y_fu_124 + 12'd1);

assign zext_ln89_fu_417_p1 = y_fu_124;

endmodule //bd_3a92_csc_0_v_csc_core
