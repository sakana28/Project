// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_3a92_hsc_0_hscale_core_polyphase_Pipeline_loop_width (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_upsampled_dout,
        stream_upsampled_num_data_valid,
        stream_upsampled_fifo_cap,
        stream_upsampled_empty_n,
        stream_upsampled_read,
        stream_scaled_din,
        stream_scaled_num_data_valid,
        stream_scaled_fifo_cap,
        stream_scaled_full_n,
        stream_scaled_write,
        add_ln637,
        zext_ln224,
        phasesH_address0,
        phasesH_ce0,
        phasesH_q0,
        FiltCoeff_address0,
        FiltCoeff_ce0,
        FiltCoeff_q0,
        FiltCoeff_1_address0,
        FiltCoeff_1_ce0,
        FiltCoeff_1_q0,
        FiltCoeff_2_address0,
        FiltCoeff_2_ce0,
        FiltCoeff_2_q0,
        FiltCoeff_3_address0,
        FiltCoeff_3_ce0,
        FiltCoeff_3_q0,
        FiltCoeff_4_address0,
        FiltCoeff_4_ce0,
        FiltCoeff_4_q0,
        FiltCoeff_5_address0,
        FiltCoeff_5_ce0,
        FiltCoeff_5_q0,
        LoopSize,
        PixArray_val_V_5_out_i,
        PixArray_val_V_5_out_o,
        PixArray_val_V_5_out_o_ap_vld,
        PixArray_val_V_4_out_i,
        PixArray_val_V_4_out_o,
        PixArray_val_V_4_out_o_ap_vld,
        PixArray_val_V_3_out_i,
        PixArray_val_V_3_out_o,
        PixArray_val_V_3_out_o_ap_vld,
        PixArray_val_V_20_1_out_i,
        PixArray_val_V_20_1_out_o,
        PixArray_val_V_20_1_out_o_ap_vld,
        PixArray_val_V_19_1_out_i,
        PixArray_val_V_19_1_out_o,
        PixArray_val_V_19_1_out_o_ap_vld,
        PixArray_val_V_18_1_out_i,
        PixArray_val_V_18_1_out_o,
        PixArray_val_V_18_1_out_o_ap_vld,
        PixArray_val_V_17_1_out_i,
        PixArray_val_V_17_1_out_o,
        PixArray_val_V_17_1_out_o_ap_vld,
        PixArray_val_V_16_1_out_i,
        PixArray_val_V_16_1_out_o,
        PixArray_val_V_16_1_out_o_ap_vld,
        PixArray_val_V_15_1_out_i,
        PixArray_val_V_15_1_out_o,
        PixArray_val_V_15_1_out_o_ap_vld,
        PixArray_val_V_14_1_out_i,
        PixArray_val_V_14_1_out_o,
        PixArray_val_V_14_1_out_o_ap_vld,
        PixArray_val_V_13_1_out_i,
        PixArray_val_V_13_1_out_o,
        PixArray_val_V_13_1_out_o_ap_vld,
        PixArray_val_V_12_1_out_i,
        PixArray_val_V_12_1_out_o,
        PixArray_val_V_12_1_out_o_ap_vld,
        PixArray_val_V_11_1_out_i,
        PixArray_val_V_11_1_out_o,
        PixArray_val_V_11_1_out_o_ap_vld,
        PixArray_val_V_10_1_out_i,
        PixArray_val_V_10_1_out_o,
        PixArray_val_V_10_1_out_o_ap_vld,
        PixArray_val_V_9_1_out_i,
        PixArray_val_V_9_1_out_o,
        PixArray_val_V_9_1_out_o_ap_vld,
        PixArray_val_V_8_1_out_i,
        PixArray_val_V_8_1_out_o,
        PixArray_val_V_8_1_out_o_ap_vld,
        PixArray_val_V_7_1_out_i,
        PixArray_val_V_7_1_out_o,
        PixArray_val_V_7_1_out_o_ap_vld,
        PixArray_val_V_6_1_out_i,
        PixArray_val_V_6_1_out_o,
        PixArray_val_V_6_1_out_o_ap_vld,
        PixArray_val_V_5_1_out_i,
        PixArray_val_V_5_1_out_o,
        PixArray_val_V_5_1_out_o_ap_vld,
        PixArray_val_V_4_1_out_i,
        PixArray_val_V_4_1_out_o,
        PixArray_val_V_4_1_out_o_ap_vld,
        PixArray_val_V_3_1_out_i,
        PixArray_val_V_3_1_out_o,
        PixArray_val_V_3_1_out_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] stream_upsampled_dout;
input  [4:0] stream_upsampled_num_data_valid;
input  [4:0] stream_upsampled_fifo_cap;
input   stream_upsampled_empty_n;
output   stream_upsampled_read;
output  [23:0] stream_scaled_din;
input  [4:0] stream_scaled_num_data_valid;
input  [4:0] stream_scaled_fifo_cap;
input   stream_scaled_full_n;
output   stream_scaled_write;
input  [10:0] add_ln637;
input  [15:0] zext_ln224;
output  [10:0] phasesH_address0;
output   phasesH_ce0;
input  [8:0] phasesH_q0;
output  [5:0] FiltCoeff_address0;
output   FiltCoeff_ce0;
input  [15:0] FiltCoeff_q0;
output  [5:0] FiltCoeff_1_address0;
output   FiltCoeff_1_ce0;
input  [15:0] FiltCoeff_1_q0;
output  [5:0] FiltCoeff_2_address0;
output   FiltCoeff_2_ce0;
input  [15:0] FiltCoeff_2_q0;
output  [5:0] FiltCoeff_3_address0;
output   FiltCoeff_3_ce0;
input  [15:0] FiltCoeff_3_q0;
output  [5:0] FiltCoeff_4_address0;
output   FiltCoeff_4_ce0;
input  [15:0] FiltCoeff_4_q0;
output  [5:0] FiltCoeff_5_address0;
output   FiltCoeff_5_ce0;
input  [15:0] FiltCoeff_5_q0;
input  [10:0] LoopSize;
input  [7:0] PixArray_val_V_5_out_i;
output  [7:0] PixArray_val_V_5_out_o;
output   PixArray_val_V_5_out_o_ap_vld;
input  [7:0] PixArray_val_V_4_out_i;
output  [7:0] PixArray_val_V_4_out_o;
output   PixArray_val_V_4_out_o_ap_vld;
input  [7:0] PixArray_val_V_3_out_i;
output  [7:0] PixArray_val_V_3_out_o;
output   PixArray_val_V_3_out_o_ap_vld;
input  [7:0] PixArray_val_V_20_1_out_i;
output  [7:0] PixArray_val_V_20_1_out_o;
output   PixArray_val_V_20_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_19_1_out_i;
output  [7:0] PixArray_val_V_19_1_out_o;
output   PixArray_val_V_19_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_18_1_out_i;
output  [7:0] PixArray_val_V_18_1_out_o;
output   PixArray_val_V_18_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_17_1_out_i;
output  [7:0] PixArray_val_V_17_1_out_o;
output   PixArray_val_V_17_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_16_1_out_i;
output  [7:0] PixArray_val_V_16_1_out_o;
output   PixArray_val_V_16_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_15_1_out_i;
output  [7:0] PixArray_val_V_15_1_out_o;
output   PixArray_val_V_15_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_14_1_out_i;
output  [7:0] PixArray_val_V_14_1_out_o;
output   PixArray_val_V_14_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_13_1_out_i;
output  [7:0] PixArray_val_V_13_1_out_o;
output   PixArray_val_V_13_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_12_1_out_i;
output  [7:0] PixArray_val_V_12_1_out_o;
output   PixArray_val_V_12_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_11_1_out_i;
output  [7:0] PixArray_val_V_11_1_out_o;
output   PixArray_val_V_11_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_10_1_out_i;
output  [7:0] PixArray_val_V_10_1_out_o;
output   PixArray_val_V_10_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_9_1_out_i;
output  [7:0] PixArray_val_V_9_1_out_o;
output   PixArray_val_V_9_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_8_1_out_i;
output  [7:0] PixArray_val_V_8_1_out_o;
output   PixArray_val_V_8_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_7_1_out_i;
output  [7:0] PixArray_val_V_7_1_out_o;
output   PixArray_val_V_7_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_6_1_out_i;
output  [7:0] PixArray_val_V_6_1_out_o;
output   PixArray_val_V_6_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_5_1_out_i;
output  [7:0] PixArray_val_V_5_1_out_o;
output   PixArray_val_V_5_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_4_1_out_i;
output  [7:0] PixArray_val_V_4_1_out_o;
output   PixArray_val_V_4_1_out_o_ap_vld;
input  [7:0] PixArray_val_V_3_1_out_i;
output  [7:0] PixArray_val_V_3_1_out_o;
output   PixArray_val_V_3_1_out_o_ap_vld;

reg ap_idle;
reg stream_upsampled_read;
reg stream_scaled_write;
reg phasesH_ce0;
reg[7:0] PixArray_val_V_5_out_o;
reg PixArray_val_V_5_out_o_ap_vld;
reg[7:0] PixArray_val_V_4_out_o;
reg PixArray_val_V_4_out_o_ap_vld;
reg[7:0] PixArray_val_V_3_out_o;
reg PixArray_val_V_3_out_o_ap_vld;
reg[7:0] PixArray_val_V_20_1_out_o;
reg PixArray_val_V_20_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_19_1_out_o;
reg PixArray_val_V_19_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_18_1_out_o;
reg PixArray_val_V_18_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_17_1_out_o;
reg PixArray_val_V_17_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_16_1_out_o;
reg PixArray_val_V_16_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_15_1_out_o;
reg PixArray_val_V_15_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_14_1_out_o;
reg PixArray_val_V_14_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_13_1_out_o;
reg PixArray_val_V_13_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_12_1_out_o;
reg PixArray_val_V_12_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_11_1_out_o;
reg PixArray_val_V_11_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_10_1_out_o;
reg PixArray_val_V_10_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_9_1_out_o;
reg PixArray_val_V_9_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_8_1_out_o;
reg PixArray_val_V_8_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_7_1_out_o;
reg PixArray_val_V_7_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_6_1_out_o;
reg PixArray_val_V_6_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_5_1_out_o;
reg PixArray_val_V_5_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_4_1_out_o;
reg PixArray_val_V_4_1_out_o_ap_vld;
reg[7:0] PixArray_val_V_3_1_out_o;
reg PixArray_val_V_3_1_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state2_pp0_stage0_iter3;
wire    ap_block_state3_pp0_stage0_iter4;
reg   [0:0] icmp_ln663_reg_946;
reg   [0:0] icmp_ln663_reg_946_pp0_iter4_reg;
reg   [0:0] icmp_ln676_reg_988;
reg    ap_predicate_op135_read_state4;
reg    ap_block_state4_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
reg   [0:0] icmp_ln715_reg_937;
reg   [0:0] icmp_ln715_reg_937_pp0_iter20_reg;
reg   [0:0] and_ln757_reg_984;
reg   [0:0] and_ln757_reg_984_pp0_iter20_reg;
reg    ap_predicate_op189_write_state22;
reg    ap_block_state22_pp0_stage0_iter21;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln653_fu_281_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    stream_upsampled_blk_n;
wire    ap_block_pp0_stage0;
reg    stream_scaled_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [16:0] zext_ln224_cast_fu_259_p1;
reg   [10:0] x_5_reg_927;
reg   [10:0] x_5_reg_927_pp0_iter1_reg;
reg   [10:0] x_5_reg_927_pp0_iter2_reg;
wire   [0:0] icmp_ln715_fu_303_p2;
reg   [0:0] icmp_ln715_reg_937_pp0_iter1_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter2_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter3_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter4_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter5_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter6_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter7_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter8_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter9_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter10_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter11_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter12_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter13_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter14_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter15_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter16_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter17_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter18_reg;
reg   [0:0] icmp_ln715_reg_937_pp0_iter19_reg;
wire   [10:0] xbySamples_fu_309_p2;
reg   [10:0] xbySamples_reg_941;
wire   [0:0] icmp_ln663_fu_323_p2;
wire   [0:0] icmp29_fu_341_p2;
reg   [0:0] icmp29_reg_950;
reg   [0:0] icmp29_reg_950_pp0_iter4_reg;
wire   [16:0] add_ln676_fu_351_p2;
reg   [16:0] add_ln676_reg_969;
wire   [5:0] PhaseH_0_fu_360_p1;
reg   [5:0] PhaseH_0_reg_974;
reg   [5:0] PhaseH_0_reg_974_pp0_iter4_reg;
reg   [5:0] PhaseH_0_reg_974_pp0_iter5_reg;
wire   [1:0] ArrayLoc_fu_363_p4;
reg   [1:0] ArrayLoc_reg_979;
reg   [1:0] ArrayLoc_reg_979_pp0_iter4_reg;
reg   [1:0] ArrayLoc_reg_979_pp0_iter5_reg;
wire   [0:0] and_ln757_fu_407_p2;
reg   [0:0] and_ln757_reg_984_pp0_iter4_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter5_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter6_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter7_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter8_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter9_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter10_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter11_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter12_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter13_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter14_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter15_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter16_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter17_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter18_reg;
reg   [0:0] and_ln757_reg_984_pp0_iter19_reg;
wire   [0:0] icmp_ln676_fu_423_p2;
wire    grp_hscale_polyphase_fu_220_ap_start;
wire    grp_hscale_polyphase_fu_220_ap_done;
wire    grp_hscale_polyphase_fu_220_ap_idle;
wire    grp_hscale_polyphase_fu_220_ap_ready;
reg    grp_hscale_polyphase_fu_220_ap_ce;
wire   [5:0] grp_hscale_polyphase_fu_220_FiltCoeff_0_address0;
wire    grp_hscale_polyphase_fu_220_FiltCoeff_0_ce0;
wire   [5:0] grp_hscale_polyphase_fu_220_FiltCoeff_1_address0;
wire    grp_hscale_polyphase_fu_220_FiltCoeff_1_ce0;
wire   [5:0] grp_hscale_polyphase_fu_220_FiltCoeff_2_address0;
wire    grp_hscale_polyphase_fu_220_FiltCoeff_2_ce0;
wire   [5:0] grp_hscale_polyphase_fu_220_FiltCoeff_3_address0;
wire    grp_hscale_polyphase_fu_220_FiltCoeff_3_ce0;
wire   [5:0] grp_hscale_polyphase_fu_220_FiltCoeff_4_address0;
wire    grp_hscale_polyphase_fu_220_FiltCoeff_4_ce0;
wire   [5:0] grp_hscale_polyphase_fu_220_FiltCoeff_5_address0;
wire    grp_hscale_polyphase_fu_220_FiltCoeff_5_ce0;
wire   [7:0] grp_hscale_polyphase_fu_220_ap_return_0;
wire   [7:0] grp_hscale_polyphase_fu_220_ap_return_1;
wire   [7:0] grp_hscale_polyphase_fu_220_ap_return_2;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call32;
wire    ap_block_state5_pp0_stage0_iter1_ignore_call32;
wire    ap_block_state6_pp0_stage0_iter2_ignore_call32;
wire    ap_block_state2_pp0_stage0_iter3_ignore_call32;
wire    ap_block_state3_pp0_stage0_iter4_ignore_call32;
reg    ap_block_state4_pp0_stage0_iter5_ignore_call32;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call32;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call32;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call32;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call32;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call32;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call32;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call32;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call32;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call32;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call32;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call32;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call32;
wire    ap_block_state19_pp0_stage0_iter18_ignore_call32;
wire    ap_block_state20_pp0_stage0_iter19_ignore_call32;
wire    ap_block_state21_pp0_stage0_iter20_ignore_call32;
reg    ap_block_state22_pp0_stage0_iter21_ignore_call32;
reg    ap_block_pp0_stage0_11001_ignoreCallOp169;
wire   [8:0] grp_reg_ap_uint_9_s_fu_758_ap_return;
reg    grp_reg_ap_uint_9_s_fu_758_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call26;
wire    ap_block_state5_pp0_stage0_iter1_ignore_call26;
wire    ap_block_state6_pp0_stage0_iter2_ignore_call26;
wire    ap_block_state2_pp0_stage0_iter3_ignore_call26;
wire    ap_block_state3_pp0_stage0_iter4_ignore_call26;
reg    ap_block_state4_pp0_stage0_iter5_ignore_call26;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call26;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call26;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call26;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call26;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call26;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call26;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call26;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call26;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call26;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call26;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call26;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call26;
wire    ap_block_state19_pp0_stage0_iter18_ignore_call26;
wire    ap_block_state20_pp0_stage0_iter19_ignore_call26;
wire    ap_block_state21_pp0_stage0_iter20_ignore_call26;
reg    ap_block_state22_pp0_stage0_iter21_ignore_call26;
reg    ap_block_pp0_stage0_11001_ignoreCallOp147;
reg    grp_hscale_polyphase_fu_220_ap_start_reg;
wire   [63:0] zext_ln722_fu_754_p1;
wire   [7:0] PixArray_val_V_3_fu_712_p1;
wire   [7:0] PixArray_val_V_2_fu_597_p3;
wire   [7:0] PixArray_val_V_1_fu_590_p3;
wire   [7:0] PixArray_val_V_fu_583_p3;
wire   [7:0] select_ln671_fu_499_p3;
wire   [7:0] select_ln671_1_fu_506_p3;
wire   [7:0] select_ln671_2_fu_513_p3;
wire   [7:0] select_ln671_3_fu_520_p3;
wire   [7:0] select_ln671_4_fu_527_p3;
wire   [7:0] select_ln671_5_fu_534_p3;
wire   [7:0] select_ln671_6_fu_541_p3;
wire   [7:0] select_ln671_7_fu_548_p3;
wire   [7:0] select_ln671_8_fu_555_p3;
wire   [7:0] select_ln671_9_fu_562_p3;
wire   [7:0] select_ln671_10_fu_569_p3;
wire   [7:0] select_ln671_11_fu_576_p3;
reg   [10:0] x_fu_164;
wire   [10:0] x_6_fu_287_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_x_5;
reg   [15:0] xReadPos_fu_168;
wire   [15:0] xReadPos_2_fu_395_p3;
reg   [31:0] ReadEn_fu_172;
wire   [31:0] zext_ln737_fu_385_p1;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] tmp_17_fu_293_p4;
wire   [9:0] tmp_fu_332_p4;
wire   [16:0] zext_ln676_fu_347_p1;
wire   [0:0] ReadEn_1_fu_379_p2;
wire   [15:0] xReadPos_1_fu_389_p2;
wire   [0:0] p_Result_s_fu_372_p3;
wire   [0:0] icmp_ln757_fu_403_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 grp_hscale_polyphase_fu_220_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

bd_3a92_hsc_0_hscale_polyphase grp_hscale_polyphase_fu_220(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hscale_polyphase_fu_220_ap_start),
    .ap_done(grp_hscale_polyphase_fu_220_ap_done),
    .ap_idle(grp_hscale_polyphase_fu_220_ap_idle),
    .ap_ready(grp_hscale_polyphase_fu_220_ap_ready),
    .ap_ce(grp_hscale_polyphase_fu_220_ap_ce),
    .FiltCoeff_0_address0(grp_hscale_polyphase_fu_220_FiltCoeff_0_address0),
    .FiltCoeff_0_ce0(grp_hscale_polyphase_fu_220_FiltCoeff_0_ce0),
    .FiltCoeff_0_q0(FiltCoeff_q0),
    .FiltCoeff_1_address0(grp_hscale_polyphase_fu_220_FiltCoeff_1_address0),
    .FiltCoeff_1_ce0(grp_hscale_polyphase_fu_220_FiltCoeff_1_ce0),
    .FiltCoeff_1_q0(FiltCoeff_1_q0),
    .FiltCoeff_2_address0(grp_hscale_polyphase_fu_220_FiltCoeff_2_address0),
    .FiltCoeff_2_ce0(grp_hscale_polyphase_fu_220_FiltCoeff_2_ce0),
    .FiltCoeff_2_q0(FiltCoeff_2_q0),
    .FiltCoeff_3_address0(grp_hscale_polyphase_fu_220_FiltCoeff_3_address0),
    .FiltCoeff_3_ce0(grp_hscale_polyphase_fu_220_FiltCoeff_3_ce0),
    .FiltCoeff_3_q0(FiltCoeff_3_q0),
    .FiltCoeff_4_address0(grp_hscale_polyphase_fu_220_FiltCoeff_4_address0),
    .FiltCoeff_4_ce0(grp_hscale_polyphase_fu_220_FiltCoeff_4_ce0),
    .FiltCoeff_4_q0(FiltCoeff_4_q0),
    .FiltCoeff_5_address0(grp_hscale_polyphase_fu_220_FiltCoeff_5_address0),
    .FiltCoeff_5_ce0(grp_hscale_polyphase_fu_220_FiltCoeff_5_ce0),
    .FiltCoeff_5_q0(FiltCoeff_5_q0),
    .p_read3(PixArray_val_V_3_1_out_i),
    .p_read4(PixArray_val_V_4_1_out_i),
    .p_read5(PixArray_val_V_5_1_out_i),
    .p_read6(PixArray_val_V_6_1_out_i),
    .p_read7(PixArray_val_V_7_1_out_i),
    .p_read8(PixArray_val_V_8_1_out_i),
    .p_read9(PixArray_val_V_9_1_out_i),
    .p_read10(PixArray_val_V_10_1_out_i),
    .p_read11(PixArray_val_V_11_1_out_i),
    .p_read12(PixArray_val_V_12_1_out_i),
    .p_read13(PixArray_val_V_13_1_out_i),
    .p_read14(PixArray_val_V_14_1_out_i),
    .p_read15(PixArray_val_V_15_1_out_i),
    .p_read16(PixArray_val_V_16_1_out_i),
    .p_read17(PixArray_val_V_17_1_out_i),
    .p_read18(PixArray_val_V_18_1_out_i),
    .p_read19(PixArray_val_V_19_1_out_i),
    .p_read20(PixArray_val_V_20_1_out_i),
    .p_read21(PixArray_val_V_3_out_i),
    .p_read22(PixArray_val_V_4_out_i),
    .p_read23(PixArray_val_V_5_out_i),
    .PhasesH_0_read(PhaseH_0_reg_974_pp0_iter5_reg),
    .p_read2425(ArrayLoc_reg_979_pp0_iter5_reg),
    .ap_return_0(grp_hscale_polyphase_fu_220_ap_return_0),
    .ap_return_1(grp_hscale_polyphase_fu_220_ap_return_1),
    .ap_return_2(grp_hscale_polyphase_fu_220_ap_return_2)
);

bd_3a92_hsc_0_reg_ap_uint_9_s grp_reg_ap_uint_9_s_fu_758(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .d(phasesH_q0),
    .ap_return(grp_reg_ap_uint_9_s_fu_758_ap_return),
    .ap_ce(grp_reg_ap_uint_9_s_fu_758_ap_ce)
);

bd_3a92_hsc_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hscale_polyphase_fu_220_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln715_reg_937_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_hscale_polyphase_fu_220_ap_start_reg <= 1'b1;
        end else if ((grp_hscale_polyphase_fu_220_ap_ready == 1'b1)) begin
            grp_hscale_polyphase_fu_220_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                        ReadEn_fu_172[0] <= 1'b1;
        end else if (((icmp_ln715_reg_937_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
                        ReadEn_fu_172[0] <= zext_ln737_fu_385_p1[0];
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            xReadPos_fu_168 <= 16'd0;
        end else if (((icmp_ln715_reg_937_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            xReadPos_fu_168 <= xReadPos_2_fu_395_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln653_fu_281_p2 == 1'd0))) begin
            x_fu_164 <= x_6_fu_287_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_164 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln715_reg_937_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ArrayLoc_reg_979 <= {{grp_reg_ap_uint_9_s_fu_758_ap_return[7:6]}};
        PhaseH_0_reg_974 <= PhaseH_0_fu_360_p1;
        and_ln757_reg_984 <= and_ln757_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ArrayLoc_reg_979_pp0_iter4_reg <= ArrayLoc_reg_979;
        ArrayLoc_reg_979_pp0_iter5_reg <= ArrayLoc_reg_979_pp0_iter4_reg;
        PhaseH_0_reg_974_pp0_iter4_reg <= PhaseH_0_reg_974;
        PhaseH_0_reg_974_pp0_iter5_reg <= PhaseH_0_reg_974_pp0_iter4_reg;
        and_ln757_reg_984_pp0_iter10_reg <= and_ln757_reg_984_pp0_iter9_reg;
        and_ln757_reg_984_pp0_iter11_reg <= and_ln757_reg_984_pp0_iter10_reg;
        and_ln757_reg_984_pp0_iter12_reg <= and_ln757_reg_984_pp0_iter11_reg;
        and_ln757_reg_984_pp0_iter13_reg <= and_ln757_reg_984_pp0_iter12_reg;
        and_ln757_reg_984_pp0_iter14_reg <= and_ln757_reg_984_pp0_iter13_reg;
        and_ln757_reg_984_pp0_iter15_reg <= and_ln757_reg_984_pp0_iter14_reg;
        and_ln757_reg_984_pp0_iter16_reg <= and_ln757_reg_984_pp0_iter15_reg;
        and_ln757_reg_984_pp0_iter17_reg <= and_ln757_reg_984_pp0_iter16_reg;
        and_ln757_reg_984_pp0_iter18_reg <= and_ln757_reg_984_pp0_iter17_reg;
        and_ln757_reg_984_pp0_iter19_reg <= and_ln757_reg_984_pp0_iter18_reg;
        and_ln757_reg_984_pp0_iter20_reg <= and_ln757_reg_984_pp0_iter19_reg;
        and_ln757_reg_984_pp0_iter4_reg <= and_ln757_reg_984;
        and_ln757_reg_984_pp0_iter5_reg <= and_ln757_reg_984_pp0_iter4_reg;
        and_ln757_reg_984_pp0_iter6_reg <= and_ln757_reg_984_pp0_iter5_reg;
        and_ln757_reg_984_pp0_iter7_reg <= and_ln757_reg_984_pp0_iter6_reg;
        and_ln757_reg_984_pp0_iter8_reg <= and_ln757_reg_984_pp0_iter7_reg;
        and_ln757_reg_984_pp0_iter9_reg <= and_ln757_reg_984_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp29_reg_950_pp0_iter4_reg <= icmp29_reg_950;
        icmp_ln663_reg_946 <= icmp_ln663_fu_323_p2;
        icmp_ln663_reg_946_pp0_iter4_reg <= icmp_ln663_reg_946;
        icmp_ln715_reg_937_pp0_iter10_reg <= icmp_ln715_reg_937_pp0_iter9_reg;
        icmp_ln715_reg_937_pp0_iter11_reg <= icmp_ln715_reg_937_pp0_iter10_reg;
        icmp_ln715_reg_937_pp0_iter12_reg <= icmp_ln715_reg_937_pp0_iter11_reg;
        icmp_ln715_reg_937_pp0_iter13_reg <= icmp_ln715_reg_937_pp0_iter12_reg;
        icmp_ln715_reg_937_pp0_iter14_reg <= icmp_ln715_reg_937_pp0_iter13_reg;
        icmp_ln715_reg_937_pp0_iter15_reg <= icmp_ln715_reg_937_pp0_iter14_reg;
        icmp_ln715_reg_937_pp0_iter16_reg <= icmp_ln715_reg_937_pp0_iter15_reg;
        icmp_ln715_reg_937_pp0_iter17_reg <= icmp_ln715_reg_937_pp0_iter16_reg;
        icmp_ln715_reg_937_pp0_iter18_reg <= icmp_ln715_reg_937_pp0_iter17_reg;
        icmp_ln715_reg_937_pp0_iter19_reg <= icmp_ln715_reg_937_pp0_iter18_reg;
        icmp_ln715_reg_937_pp0_iter20_reg <= icmp_ln715_reg_937_pp0_iter19_reg;
        icmp_ln715_reg_937_pp0_iter2_reg <= icmp_ln715_reg_937_pp0_iter1_reg;
        icmp_ln715_reg_937_pp0_iter3_reg <= icmp_ln715_reg_937_pp0_iter2_reg;
        icmp_ln715_reg_937_pp0_iter4_reg <= icmp_ln715_reg_937_pp0_iter3_reg;
        icmp_ln715_reg_937_pp0_iter5_reg <= icmp_ln715_reg_937_pp0_iter4_reg;
        icmp_ln715_reg_937_pp0_iter6_reg <= icmp_ln715_reg_937_pp0_iter5_reg;
        icmp_ln715_reg_937_pp0_iter7_reg <= icmp_ln715_reg_937_pp0_iter6_reg;
        icmp_ln715_reg_937_pp0_iter8_reg <= icmp_ln715_reg_937_pp0_iter7_reg;
        icmp_ln715_reg_937_pp0_iter9_reg <= icmp_ln715_reg_937_pp0_iter8_reg;
        x_5_reg_927_pp0_iter2_reg <= x_5_reg_927_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln663_fu_323_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln676_reg_969 <= add_ln676_fu_351_p2;
        icmp29_reg_950 <= icmp29_fu_341_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln715_reg_937_pp0_iter1_reg <= icmp_ln715_reg_937;
        x_5_reg_927 <= ap_sig_allocacmp_x_5;
        x_5_reg_927_pp0_iter1_reg <= x_5_reg_927;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946 == 1'd0))) begin
        icmp_ln676_reg_988 <= icmp_ln676_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln653_fu_281_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln715_reg_937 <= icmp_ln715_fu_303_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln715_fu_303_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln653_fu_281_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        xbySamples_reg_941 <= xbySamples_fu_309_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_10_1_out_o = select_ln671_4_fu_527_p3;
    end else begin
        PixArray_val_V_10_1_out_o = PixArray_val_V_10_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_10_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_10_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_11_1_out_o = select_ln671_3_fu_520_p3;
    end else begin
        PixArray_val_V_11_1_out_o = PixArray_val_V_11_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_11_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_11_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_12_1_out_o = select_ln671_2_fu_513_p3;
    end else begin
        PixArray_val_V_12_1_out_o = PixArray_val_V_12_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_12_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_12_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_13_1_out_o = select_ln671_1_fu_506_p3;
    end else begin
        PixArray_val_V_13_1_out_o = PixArray_val_V_13_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_13_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_13_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_14_1_out_o = select_ln671_fu_499_p3;
    end else begin
        PixArray_val_V_14_1_out_o = PixArray_val_V_14_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_14_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_14_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_15_1_out_o = PixArray_val_V_fu_583_p3;
    end else begin
        PixArray_val_V_15_1_out_o = PixArray_val_V_15_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_15_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_15_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_16_1_out_o = PixArray_val_V_1_fu_590_p3;
    end else begin
        PixArray_val_V_16_1_out_o = PixArray_val_V_16_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_16_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_16_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_17_1_out_o = PixArray_val_V_2_fu_597_p3;
    end else begin
        PixArray_val_V_17_1_out_o = PixArray_val_V_17_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_17_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_17_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_18_1_out_o = PixArray_val_V_3_out_i;
    end else begin
        PixArray_val_V_18_1_out_o = PixArray_val_V_18_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_18_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_18_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_19_1_out_o = PixArray_val_V_4_out_i;
    end else begin
        PixArray_val_V_19_1_out_o = PixArray_val_V_19_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_19_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_19_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_20_1_out_o = PixArray_val_V_5_out_i;
    end else begin
        PixArray_val_V_20_1_out_o = PixArray_val_V_20_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_20_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_20_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_3_1_out_o = select_ln671_11_fu_576_p3;
    end else begin
        PixArray_val_V_3_1_out_o = PixArray_val_V_3_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_3_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_3_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln676_reg_988 == 1'd1) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_3_out_o = PixArray_val_V_3_fu_712_p1;
    end else begin
        PixArray_val_V_3_out_o = PixArray_val_V_3_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln676_reg_988 == 1'd1) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_3_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_3_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_4_1_out_o = select_ln671_10_fu_569_p3;
    end else begin
        PixArray_val_V_4_1_out_o = PixArray_val_V_4_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_4_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_4_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln676_reg_988 == 1'd1) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_4_out_o = {{stream_upsampled_dout[15:8]}};
    end else begin
        PixArray_val_V_4_out_o = PixArray_val_V_4_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln676_reg_988 == 1'd1) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_4_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_4_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_5_1_out_o = select_ln671_9_fu_562_p3;
    end else begin
        PixArray_val_V_5_1_out_o = PixArray_val_V_5_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_5_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_5_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln676_reg_988 == 1'd1) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_5_out_o = {{stream_upsampled_dout[23:16]}};
    end else begin
        PixArray_val_V_5_out_o = PixArray_val_V_5_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln676_reg_988 == 1'd1) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_5_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_5_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_6_1_out_o = select_ln671_8_fu_555_p3;
    end else begin
        PixArray_val_V_6_1_out_o = PixArray_val_V_6_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_6_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_6_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_7_1_out_o = select_ln671_7_fu_548_p3;
    end else begin
        PixArray_val_V_7_1_out_o = PixArray_val_V_7_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_7_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_7_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_8_1_out_o = select_ln671_6_fu_541_p3;
    end else begin
        PixArray_val_V_8_1_out_o = PixArray_val_V_8_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_8_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_8_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_9_1_out_o = select_ln671_5_fu_534_p3;
    end else begin
        PixArray_val_V_9_1_out_o = PixArray_val_V_9_1_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0))) begin
        PixArray_val_V_9_1_out_o_ap_vld = 1'b1;
    end else begin
        PixArray_val_V_9_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln653_fu_281_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_x_5 = 11'd0;
    end else begin
        ap_sig_allocacmp_x_5 = x_fu_164;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp169))) begin
        grp_hscale_polyphase_fu_220_ap_ce = 1'b1;
    end else begin
        grp_hscale_polyphase_fu_220_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp147))) begin
        grp_reg_ap_uint_9_s_fu_758_ap_ce = 1'b1;
    end else begin
        grp_reg_ap_uint_9_s_fu_758_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        phasesH_ce0 = 1'b1;
    end else begin
        phasesH_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op189_write_state22 == 1'b1))) begin
        stream_scaled_blk_n = stream_scaled_full_n;
    end else begin
        stream_scaled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op189_write_state22 == 1'b1))) begin
        stream_scaled_write = 1'b1;
    end else begin
        stream_scaled_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op135_read_state4 == 1'b1))) begin
        stream_upsampled_blk_n = stream_upsampled_empty_n;
    end else begin
        stream_upsampled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op135_read_state4 == 1'b1))) begin
        stream_upsampled_read = 1'b1;
    end else begin
        stream_upsampled_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ArrayLoc_fu_363_p4 = {{grp_reg_ap_uint_9_s_fu_758_ap_return[7:6]}};

assign FiltCoeff_1_address0 = grp_hscale_polyphase_fu_220_FiltCoeff_1_address0;

assign FiltCoeff_1_ce0 = grp_hscale_polyphase_fu_220_FiltCoeff_1_ce0;

assign FiltCoeff_2_address0 = grp_hscale_polyphase_fu_220_FiltCoeff_2_address0;

assign FiltCoeff_2_ce0 = grp_hscale_polyphase_fu_220_FiltCoeff_2_ce0;

assign FiltCoeff_3_address0 = grp_hscale_polyphase_fu_220_FiltCoeff_3_address0;

assign FiltCoeff_3_ce0 = grp_hscale_polyphase_fu_220_FiltCoeff_3_ce0;

assign FiltCoeff_4_address0 = grp_hscale_polyphase_fu_220_FiltCoeff_4_address0;

assign FiltCoeff_4_ce0 = grp_hscale_polyphase_fu_220_FiltCoeff_4_ce0;

assign FiltCoeff_5_address0 = grp_hscale_polyphase_fu_220_FiltCoeff_5_address0;

assign FiltCoeff_5_ce0 = grp_hscale_polyphase_fu_220_FiltCoeff_5_ce0;

assign FiltCoeff_address0 = grp_hscale_polyphase_fu_220_FiltCoeff_0_address0;

assign FiltCoeff_ce0 = grp_hscale_polyphase_fu_220_FiltCoeff_0_ce0;

assign PhaseH_0_fu_360_p1 = grp_reg_ap_uint_9_s_fu_758_ap_return[5:0];

assign PixArray_val_V_1_fu_590_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_4_out_i : PixArray_val_V_19_1_out_i);

assign PixArray_val_V_2_fu_597_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_5_out_i : PixArray_val_V_20_1_out_i);

assign PixArray_val_V_3_fu_712_p1 = stream_upsampled_dout[7:0];

assign PixArray_val_V_fu_583_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_3_out_i : PixArray_val_V_18_1_out_i);

assign ReadEn_1_fu_379_p2 = ((ArrayLoc_fu_363_p4 != 2'd0) ? 1'b1 : 1'b0);

assign add_ln676_fu_351_p2 = (zext_ln676_fu_347_p1 + 17'd4);

assign and_ln757_fu_407_p2 = (p_Result_s_fu_372_p3 & icmp_ln757_fu_403_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter21 == 1'b1) & (ap_predicate_op189_write_state22 == 1'b1) & (stream_scaled_full_n == 1'b0)) | ((stream_upsampled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (ap_predicate_op135_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter21 == 1'b1) & (ap_predicate_op189_write_state22 == 1'b1) & (stream_scaled_full_n == 1'b0)) | ((stream_upsampled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (ap_predicate_op135_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp147 = (((ap_enable_reg_pp0_iter21 == 1'b1) & (ap_predicate_op189_write_state22 == 1'b1) & (stream_scaled_full_n == 1'b0)) | ((stream_upsampled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (ap_predicate_op135_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp169 = (((ap_enable_reg_pp0_iter21 == 1'b1) & (ap_predicate_op189_write_state22 == 1'b1) & (stream_scaled_full_n == 1'b0)) | ((stream_upsampled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (ap_predicate_op135_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter21 == 1'b1) & (ap_predicate_op189_write_state22 == 1'b1) & (stream_scaled_full_n == 1'b0)) | ((stream_upsampled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (ap_predicate_op135_read_state4 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20_ignore_call32 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_pp0_stage0_iter21 = ((ap_predicate_op189_write_state22 == 1'b1) & (stream_scaled_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage0_iter21_ignore_call26 = ((ap_predicate_op189_write_state22 == 1'b1) & (stream_scaled_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage0_iter21_ignore_call32 = ((ap_predicate_op189_write_state22 == 1'b1) & (stream_scaled_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter3_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter3_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter4_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter4_ignore_call32 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter5 = ((stream_upsampled_empty_n == 1'b0) & (ap_predicate_op135_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter5_ignore_call26 = ((stream_upsampled_empty_n == 1'b0) & (ap_predicate_op135_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter5_ignore_call32 = ((stream_upsampled_empty_n == 1'b0) & (ap_predicate_op135_read_state4 == 1'b1));
end

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op135_read_state4 = ((icmp_ln676_reg_988 == 1'd1) & (icmp_ln663_reg_946_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op189_write_state22 = ((icmp_ln715_reg_937_pp0_iter20_reg == 1'd0) & (1'd1 == and_ln757_reg_984_pp0_iter20_reg));
end

assign grp_hscale_polyphase_fu_220_ap_start = grp_hscale_polyphase_fu_220_ap_start_reg;

assign icmp29_fu_341_p2 = ((tmp_fu_332_p4 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln653_fu_281_p2 = ((ap_sig_allocacmp_x_5 == add_ln637) ? 1'b1 : 1'b0);

assign icmp_ln663_fu_323_p2 = ((ReadEn_fu_172 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln676_fu_423_p2 = ((zext_ln224_cast_fu_259_p1 > add_ln676_reg_969) ? 1'b1 : 1'b0);

assign icmp_ln715_fu_303_p2 = ((tmp_17_fu_293_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln757_fu_403_p2 = ((x_5_reg_927_pp0_iter2_reg < LoopSize) ? 1'b1 : 1'b0);

assign p_Result_s_fu_372_p3 = grp_reg_ap_uint_9_s_fu_758_ap_return[32'd8];

assign phasesH_address0 = zext_ln722_fu_754_p1;

assign select_ln671_10_fu_569_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_4_out_i : PixArray_val_V_7_1_out_i);

assign select_ln671_11_fu_576_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_3_out_i : PixArray_val_V_6_1_out_i);

assign select_ln671_1_fu_506_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_4_out_i : PixArray_val_V_16_1_out_i);

assign select_ln671_2_fu_513_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_3_out_i : PixArray_val_V_15_1_out_i);

assign select_ln671_3_fu_520_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_5_out_i : PixArray_val_V_14_1_out_i);

assign select_ln671_4_fu_527_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_4_out_i : PixArray_val_V_13_1_out_i);

assign select_ln671_5_fu_534_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_3_out_i : PixArray_val_V_12_1_out_i);

assign select_ln671_6_fu_541_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_5_out_i : PixArray_val_V_11_1_out_i);

assign select_ln671_7_fu_548_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_4_out_i : PixArray_val_V_10_1_out_i);

assign select_ln671_8_fu_555_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_3_out_i : PixArray_val_V_9_1_out_i);

assign select_ln671_9_fu_562_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_5_out_i : PixArray_val_V_8_1_out_i);

assign select_ln671_fu_499_p3 = ((icmp29_reg_950_pp0_iter4_reg[0:0] == 1'b1) ? PixArray_val_V_5_out_i : PixArray_val_V_17_1_out_i);

assign stream_scaled_din = {{{grp_hscale_polyphase_fu_220_ap_return_2}, {grp_hscale_polyphase_fu_220_ap_return_1}}, {grp_hscale_polyphase_fu_220_ap_return_0}};

assign tmp_17_fu_293_p4 = {{ap_sig_allocacmp_x_5[10:2]}};

assign tmp_fu_332_p4 = {{x_5_reg_927_pp0_iter2_reg[10:1]}};

assign xReadPos_1_fu_389_p2 = (xReadPos_fu_168 + 16'd1);

assign xReadPos_2_fu_395_p3 = ((ReadEn_1_fu_379_p2[0:0] == 1'b1) ? xReadPos_1_fu_389_p2 : xReadPos_fu_168);

assign x_6_fu_287_p2 = (ap_sig_allocacmp_x_5 + 11'd1);

assign xbySamples_fu_309_p2 = ($signed(ap_sig_allocacmp_x_5) + $signed(11'd2044));

assign zext_ln224_cast_fu_259_p1 = zext_ln224;

assign zext_ln676_fu_347_p1 = xReadPos_fu_168;

assign zext_ln722_fu_754_p1 = xbySamples_reg_941;

assign zext_ln737_fu_385_p1 = ReadEn_1_fu_379_p2;

always @ (posedge ap_clk) begin
    ReadEn_fu_172[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //bd_3a92_hsc_0_hscale_core_polyphase_Pipeline_loop_width
